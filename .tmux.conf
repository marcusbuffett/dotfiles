# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?|fzf|fzf-tmux)(diff)?$"'

bind -n 'C-h' if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n 'C-j' if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n 'C-k' if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n 'C-l' if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n 'C-H' if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n 'C-J' if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n 'C-K' if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n 'C-L' if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n 'C-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Cycle through and zoom
bind -r a select-pane -t .+1 \;  resize-pane -Z

# bind -n C-; 

bind s split-window -v -c '#{pane_current_path}' # Split panes horizontal
bind v split-window -h -c '#{pane_current_path}' # Split panes vertically

set -g default-terminal "screen-256color"
set-option -sa terminal-overrides ",xterm-kitty:RGB"

unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection

set-option -g allow-rename off
set -g base-index 1
set -g pane-base-index 1

set-option -g -q mouse on
set -s escape-time 0

set-option -g renumber-windows on

bind-key S choose-window 'join-pane -v -t "%%"'
bind-key V choose-window 'join-pane -h -t "%%"'
bind-key k swap-pane -U
bind c new-window -c '#{pane_current_path}'

bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -    e'"
# set-option -g window-status-current-format '#I:#{pane_current_path}#F'
# set-option -g window-status-format '#I:#{pane_current_path}#F'
# set-option -g status-interval 1

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @plugin 'nhdaly/tmux-scroll-copy-mode'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'odedlaz/tmux-onedark-theme'
# '
# # Other examples:
# # github_username/plugin_name    \
# # git@github.com/user/plugin     \
# # git@bitbucket.com/user/plugin  \

# # Initializes TMUX plugin manager.
# # Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'

set-window-option -g xterm-keys on

bind-key -n C-Tab next-window
bind-key -n C-S-Tab previous-window

bind-key -n M-Left previous-window
bind-key -n M-Right next-window
# source-file "${HOME}/.tmux-themepack/powerline/block/magenta.tmuxtheme"
