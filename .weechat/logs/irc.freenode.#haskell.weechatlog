2015-08-20 12:14:11	-->	marcusbuffett (~marcusbuf@199.21.87.214) has joined #haskell
2015-08-20 12:14:11	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-20 12:14:11	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-20 12:14:12	--	Channel #haskell: 1530 nicks (1 op, 0 voices, 1529 normals)
2015-08-20 12:14:12	--	URL for #haskell: http://www.haskell.org/
2015-08-20 12:14:12	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-20 12:14:19	srhb	I might be going blind, but I'd try reinstalling the broken libs (eg mtl) too. I have no idea why they might be broken though (and no experience with OS X)
2015-08-20 12:14:29	Cale	You can also sort of combine the two, by defining a type for your state which has operations that produce new values of that type, like:  data StateObject = SO { curFoo :: Integer, setFoo :: Integer -> StateObject } -- if this were all you were doing, it would be not really better than passing around an Integer, however, if you had more specialised and meaningful operations, it can be a nice approach.
2015-08-20 12:15:10	<--	zipper (~luv_panda@unaffiliated/zipper) has quit (Ping timeout: 240 seconds)
2015-08-20 12:15:17	-->	rfmind (~ruslan@250.105-64-87.adsl-dyn.isp.belgacom.be) has joined #haskell
2015-08-20 12:15:48	-->	Alas- (~user@2607:f140:400:b00b:5461:b9ea:96ae:2195) has joined #haskell
2015-08-20 12:15:57	-->	daimonos (~luv_panda@unaffiliated/zipper) has joined #haskell
2015-08-20 12:16:10	-->	mea-culp` (~user@95.72.147.43) has joined #haskell
2015-08-20 12:16:23	<--	c_wraith (~c_wraith@28d244188882.click-network.com) has quit (Ping timeout: 244 seconds)
2015-08-20 12:16:42	<--	sergiotudela (~sergiotud@3.233.14.62.static.jazztel.es) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-20 12:17:28	-->	jgt (~jgt@eec192.neoplus.adsl.tpnet.pl) has joined #haskell
2015-08-20 12:17:28	-->	kognate (kognate@nat/ibm/x-tfiqryvcmtfbbxwo) has joined #haskell
2015-08-20 12:17:28	RageYL	Cale: with you solution that means i must return the state on each function ?
2015-08-20 12:17:28	Cale	yes
2015-08-20 12:17:30	<--	mea-culpa (~user@95.73.180.147) has quit (Ping timeout: 240 seconds)
2015-08-20 12:17:37	ReinH	fjordrunner: well you've done screwed the pooch on that one I guess :(
2015-08-20 12:17:40	RageYL	ok...
2015-08-20 12:17:42	Cale	Well, with this last one
2015-08-20 12:17:46	<--	jellie (~luv_panda@unaffiliated/zipper) has quit (Ping timeout: 240 seconds)
2015-08-20 12:17:48	<--	Eduard_Munteanu (~Eduard_Mu@86.121.174.118) has quit (Ping timeout: 264 seconds)
2015-08-20 12:17:51	<--	rfmind (~ruslan@250.105-64-87.adsl-dyn.isp.belgacom.be) has quit (Client Quit)
2015-08-20 12:17:52	fjordrunner	ReinH: what you mean?
2015-08-20 12:18:02	ReinH	fjordrunner: I mean that your mtl install seems to be broken, which is bad
2015-08-20 12:18:11	Cale	With the IORef, you just need to pass the record in, and the operations modify the value of the IORef.
2015-08-20 12:18:19	Alas-	Hello, I'm sorry if this gets asked a lot, but what is the minimal way of installing Haskell on OS X? Is it sufficient to just install ghc using brew?
2015-08-20 12:18:27	fjordrunner	ReinH: do you know that how could I fix that?
2015-08-20 12:18:30	<--	sinelaw (~sinelaw@37.26.147.247) has quit (Ping timeout: 240 seconds)
2015-08-20 12:18:31	<--	xcombelle (~xcombelle@AToulouse-657-1-1120-28.w92-156.abo.wanadoo.fr) has quit (Remote host closed the connection)
2015-08-20 12:18:37	fjordrunner	ReinH: uninstall?
2015-08-20 12:18:42	ReinH	fjordrunner: You could force reinstall mtl, but then you'd probably need to force reinstall everything else too
2015-08-20 12:18:53	srhb	That sounds likely.
2015-08-20 12:19:04	ReinH	Perhaps best to nuke everything and start over, but there goes your day...
2015-08-20 12:19:19	Cale	Alas-: Uh, minimal? I think just installing this package would be pretty close. https://www.haskell.org/ghc/download_ghc_7_10_2#macosx_x86_64
2015-08-20 12:19:22	ReinH	fjordrunner: could you perhaps have reinstalled or upgraded ghc recently?
2015-08-20 12:19:33	fjordrunner	ReinH: yes,..
2015-08-20 12:19:33	-->	rfmind (~ruslan@250.105-64-87.adsl-dyn.isp.belgacom.be) has joined #haskell
2015-08-20 12:19:37	Cale	Alas-: However, you might have a better time with https://www.haskell.org/platform/#osx
2015-08-20 20:49:48	-->	RouxTheDay (~marcusbuf@199.21.87.214) has joined #haskell
2015-08-20 20:49:48	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-20 20:49:48	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-20 20:49:48	--	Channel #haskell: 1442 nicks (1 op, 0 voices, 1441 normals)
2015-08-20 20:49:48	--	URL for #haskell: http://www.haskell.org/
2015-08-20 20:49:50	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-20 20:49:59	erisco	memoising impure values seems to be a bother
2015-08-20 20:50:13	erisco	I am assuming you don't want to have to work with IO every time
2015-08-20 20:50:34	erisco	ie you use IO to get the sub-document once, and then after that you don't need IO
2015-08-20 20:50:41	Pamelloes	Right.
2015-08-20 20:51:43	Pamelloes	The URIs can, theoretically change, but they're unlikely to. So within a single run of the program the root node and each of the categories are pure values--executing the calls multiple times should yield the same results.
2015-08-20 20:51:50	erisco	you might use a sum type... data LazyDocument a = Loaded a | Unloaded (IO a)
2015-08-20 20:51:54	erisco	something like that
2015-08-20 20:52:03	-->	rjeli (~rjeli@cpe-70-119-121-211.tx.res.rr.com) has joined #haskell
2015-08-20 20:52:05	-->	jp_rider (~Adium@c-73-134-205-106.hsd1.md.comcast.net) has joined #haskell
2015-08-20 20:52:11	erisco	so if you have  MyType (LazyDocument T1) (LazyDocument T2)  etc
2015-08-20 20:52:17	erisco	I dunno, it isn't super ideal
2015-08-20 20:52:27	Pamelloes	Hm.
2015-08-20 20:52:34	erisco	you'll end up with partiality if you want to assume later on something is loaded
2015-08-20 20:52:44	erisco	you could parameterize MyType but that could get verbose
2015-08-20 20:53:05	kadoban	So … with PartialTypeSignatures and/or NamedWildCards … is there a way to say "this is a wildcard, I don't care to see a warning about it when I compile" ? I just want to specify part of the type sig, not hear about it every time I compile …
2015-08-20 20:53:14	erisco	data LoadedDocument a = ...; data UnloadedDocument a = ...;  MyType a b = MyType a b
2015-08-20 20:53:21	<--	mac10688 (~mac10688@184.75.220.2) has quit (Ping timeout: 260 seconds)
2015-08-20 20:53:27	erisco	so, like,  MyType (UnloadedDocument T1) (LoadedDocument T2)
2015-08-20 20:53:33	-->	MrScout (~MrScout@unaffiliated/mrscout) has joined #haskell
2015-08-20 20:53:37	Pamelloes	eek
2015-08-20 20:53:42	erisco	yeah =\ hm
2015-08-20 20:53:46	Pamelloes	that would get verbose quite fast.
2015-08-20 20:53:54	<--	Guest17635 (~cyphase@2601:640:c400:b560:28a4:a393:952:a1d5) has quit (Quit: cyphase.com)
2015-08-20 20:54:02	Pamelloes	The root API has 25 nodes.
2015-08-20 20:54:09	Pamelloes	So that would mean 25 parameters.
2015-08-20 20:54:10	Pamelloes	D:
2015-08-20 20:54:13	-->	cyphase (~cyphase@unaffiliated/cyphase) has joined #haskell
2015-08-20 20:54:28	erisco	but it would mean you could have any combination loaded or unloaded
2015-08-20 20:54:34	erisco	without any partiality down the line
2015-08-20 20:55:27	erisco	I don't think there is going to be a perfect solution for this
2015-08-20 20:55:27	<--	lodin_ (~lodin@c-31-209-2-44.cust.bredband2.com) has quit (Ping timeout: 256 seconds)
2015-08-20 20:55:29	-->	cleamoon (~cleamoon@c213-89-114-250.bredband.comhem.se) has joined #haskell
2015-08-20 20:55:59	erisco	you can also flatten it out to  MyTypeWithDocumentT1 = MyTypeWithDocumentT1 T1 (IO T2)
2015-08-20 20:56:20	Pamelloes	Yeah, this is tricky.
2015-08-20 20:56:21	erisco	so if you only have a few combinations likely to happen that could work
2015-08-20 20:56:42	<--	MrScout (~MrScout@unaffiliated/mrscout) has quit (Read error: Connection reset by peer)
2015-08-20 20:56:59	<--	CodyReichert (~cody@c-50-162-14-193.hsd1.tx.comcast.net) has quit (Read error: Connection reset by peer)
2015-08-20 20:57:21	-->	MrScout (~MrScout@unaffiliated/mrscout) has joined #haskell
2015-08-20 20:57:31	dolio	I think there's pretty clearly a 'nicest to use' solution, out of the ones so far discussed. :)
2015-08-20 20:57:58	erisco	you can do something else actually
2015-08-20 20:58:20	<--	aarvar (~foewfoiew@50-47-105-139.evrt.wa.frontiernet.net) has left #haskell
2015-08-20 20:58:34	erisco	I can't think of all the details up front, but you essentially create a DSL that is evaluated later
2015-08-20 20:59:51	Pamelloes	Alright, it turns out I mis-interpreted the API I'm wrapping (its lack of documentation is incredibly frustrating--programmers, document your code!)
2015-08-20 20:59:53	erisco	data Mytype = MyType T1 T2  withT1FromMyType :: (T1 -> a) -> MyDSL a
2015-08-20 21:00:19	erisco	you do something vaguely along those lines, so you're basically wrapping up all your operations on the document into some data type
2015-08-20 21:03:20	-->	RouxTheDay (~RouxTheDa@199.21.87.214) has joined #haskell
2015-08-20 21:03:20	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-20 21:03:20	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-20 21:03:20	--	Channel #haskell: 1445 nicks (1 op, 0 voices, 1444 normals)
2015-08-20 21:03:20	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-20 21:03:32	erisco	there are libs which use this... one that does xml or html or something like that iirc
2015-08-20 21:03:40	erisco	some FRP libs
2015-08-20 21:03:45	--	URL for #haskell: http://www.haskell.org/
2015-08-20 21:04:19	<--	darkf (~darkf___@unaffiliated/darkf) has quit (Read error: Connection reset by peer)
2015-08-20 21:04:26	erisco	so it'd be more like  retrieveT1FromMyType :: MyDSL MyType T1
2015-08-20 21:04:43	-->	darkf (~darkf___@unaffiliated/darkf) has joined #haskell
2015-08-20 21:04:54	erisco	so 'retrieveT1FromMyType' is the name of a function, a function of MyDSL which sends MyType to T1
2015-08-20 21:05:01	Pamelloes	Huh.
2015-08-20 21:05:12	<--	bq_ (~chatzilla@27.115.116.215) has quit (Ping timeout: 264 seconds)
2015-08-20 21:05:28	erisco	and Arrows are categories, so you can compose them
2015-08-20 21:05:58	erisco	so you can write some f :: MyDSL T1 B  and do  f . retrieveT1FromMyType :: MyDSL MyType B
2015-08-20 21:06:15	-->	Tourist (~Tourist@unaffiliated/tourist) has joined #haskell
2015-08-20 21:06:29	erisco	and I imagine you can figure out when you interpret your DSL whether something needs to be fetched through IO or not, and cache it even
2015-08-20 21:06:51	Pamelloes	So you could use arrows to interact with the DSL as if you were in normal pure code.
2015-08-20 21:09:04	Pamelloes	That's an interesting concept.
2015-08-20 21:09:04	erisco	this does mean you have to use arrow notations
2015-08-20 21:09:04	Pamelloes	oh.
2015-08-20 21:09:04	erisco	so you can debate whether that is any gain over using do-notation and working in IO
2015-08-20 21:09:04	Pamelloes	I've looked at that and it's.... scary.
2015-08-20 21:09:04	erisco	or monad notations
2015-08-20 21:09:04	Pamelloes	So this library I'm trying to wrap is an absolute nightmare.
2015-08-20 21:09:04	erisco	well, you can go way overboard and use TH :P
2015-08-20 21:09:04	Pamelloes	s/library/API
2015-08-20 21:09:08	-->	marchdown (~textual@m83-176-145-181.cust.tele2.lv) has joined #haskell
2015-08-20 21:09:14	<--	dprt (~pordan30@pool-96-241-194-80.washdc.fios.verizon.net) has quit (Ping timeout: 260 seconds)
2015-08-20 21:09:15	erisco	you can use the Arrow as an implementation for a DSL parsed from TH
2015-08-20 21:09:29	-->	eskatonic (~eskatonic@104.156.228.106) has joined #haskell
2015-08-20 21:09:33	Pamelloes	this is becoming kind of crazy.
2015-08-20 21:10:10	<--	bob_twinkles (~bob_twink@2607:b400:a4:4210:6e62:6dff:fe40:f3b4) has quit (Quit: GPU jumped off a bus... again)
2015-08-20 21:10:13	-->	feryll (171c79bf@gateway/web/freenode/ip.23.28.121.191) has joined #haskell
2015-08-20 21:10:16	Pamelloes	What's upsetting here is the reason all these problems exist is because the API's developers were trying to be /nice/.
2015-08-20 21:10:31	-->	jinblack (~jinblack@ip184-189-234-229.sb.sd.cox.net) has joined #haskell
2015-08-20 21:10:39	erisco	I have seen this before actually, but in a PHP lib for JSON-LD
2015-08-20 21:10:54	Pamelloes	The API is designed so that you never construct any URIs. Each JSON object retrieved has links to related objects.
2015-08-20 21:10:55	<--	hzjd (~Adium@c-50-177-23-40.hsd1.ma.comcast.net) has quit (Read error: Connection reset by peer)
2015-08-20 21:10:57	erisco	also ORMs are a fan of doing this
2015-08-20 21:11:09	erisco	i.e. surprise IO when you access some field
2015-08-20 21:11:30	erisco	Pamelloes, sounds like HATEOAS
2015-08-20 21:11:30	-->	hzjd (~Adium@c-50-177-23-40.hsd1.ma.comcast.net) has joined #haskell
2015-08-20 21:12:16	Pamelloes	yep, that's what it is.
2015-08-20 21:12:17	<--	grizwako (~GrizzLy@31.217.71.210) has quit (Read error: Connection reset by peer)
2015-08-20 21:12:32	Pamelloes	And documentation is nonexistant.
2015-08-20 21:12:40	<--	serendependy (~christoph@2605:6000:6b4c:cf00:f018:f8d9:448c:7c39) has quit (Quit: Leaving)
2015-08-21 08:58:01	--	irc: disconnected from server
2015-08-21 08:58:27	-->	RouxTheDay (~RouxTheDa@199.21.87.214) has joined #haskell
2015-08-21 08:58:27	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-21 08:58:27	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-21 08:58:27	--	Channel #haskell: 1500 nicks (1 op, 0 voices, 1499 normals)
2015-08-21 08:58:27	--	URL for #haskell: http://www.haskell.org/
2015-08-21 08:58:27	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-21 08:58:34	<--	rcosta (~rcosta@213.205.251.216) has quit (Remote host closed the connection)
2015-08-21 08:58:43	stk944	bennofs, sorry I'm really bad at this, can you give me a hint as to what the parameters in the paranthesis do in this case? I've only seen things like newtype Ziplist a = Ziplist [a] and the record syntax
2015-08-21 08:58:56	fosterite	the manual doesn't seem to mention it
2015-08-21 08:59:21	--	irc: disconnected from server
2015-08-21 08:59:47	-->	RouxTheDay (~RouxTheDa@199.21.87.214) has joined #haskell
2015-08-21 08:59:47	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-21 08:59:47	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-21 08:59:47	--	Channel #haskell: 1498 nicks (1 op, 0 voices, 1497 normals)
2015-08-21 08:59:48	--	URL for #haskell: http://www.haskell.org/
2015-08-21 08:59:48	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-21 08:59:54	-->	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-21 09:00:06	-->	OmnipotentEntity (~omnipoten@unaffiliated/omnipotententity) has joined #haskell
2015-08-21 09:00:08	bennofs	stk944: consider newtype MyMaybe a = MyMaybe (Maybe a)   you need parentheses here because you want to make a newtype over 'Maybe a', and the 'Maybe a' should be one field
2015-08-21 09:00:14	<--	brtmr (~brtmr@x4d00324b.dyn.telefonica.de) has quit (Remote host closed the connection)
2015-08-21 09:00:15	ReinH	stk944: perhaps you are confused because PreAcc is of kind * -> * -> * -> * -> *, so all those things inside the parens are type parameters to PreAcc
2015-08-21 09:00:37	-->	Gurkenglas (5dd56ca7@gateway/web/freenode/ip.93.213.108.167) has joined #haskell
2015-08-21 09:00:41	<--	dan_f (~dan@24-148-32-207.c3-0.grn-ubr1.chi-grn.il.cable.rcn.com) has quit (Quit: dan_f)
2015-08-21 09:00:41	--	irc: disconnected from server
2015-08-21 09:01:05	-->	RouxTheDay (~RouxTheDa@199.21.87.214) has joined #haskell
2015-08-21 09:01:05	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-21 09:01:05	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-21 09:01:05	--	Channel #haskell: 1499 nicks (1 op, 0 voices, 1498 normals)
2015-08-21 09:01:05	--	URL for #haskell: http://www.haskell.org/
2015-08-21 09:01:05	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-21 09:01:12	<--	rolo (~rolo@host205-43-dynamic.41-79-r.retail.telecomitalia.it) has quit (Remote host closed the connection)
2015-08-21 09:01:32	ReinH	stk944: It's newtype Acc a = let preAcc = PreAcc Acc Seq Exp a in Acc preAcc in a language that is exactly like Haskell but with type-level let bindings
2015-08-21 09:01:49	ReinH	the whole thing inside the parens is a single type
2015-08-21 09:01:58	-->	rolo (~rolo@host205-43-dynamic.41-79-r.retail.telecomitalia.it) has joined #haskell
2015-08-21 09:02:02	fosterite	bennofs: I see. thanks
2015-08-21 09:02:08	-->	cfricke (~cfricke@unaffiliated/cfricke) has joined #haskell
2015-08-21 09:02:24	-->	broma0_ (~broma0@ool-182e260d.dyn.optonline.net) has joined #haskell
2015-08-21 09:02:45	stk944	ReinH, thank you. Is there a ref on type-level let bindings?
2015-08-21 09:03:03	<--	ulfdoz (~mary@2.173.52.81) has quit (Ping timeout: 256 seconds)
2015-08-21 09:03:04	-->	zcourts (~zcourts@cpc5-croy18-2-0-cust555.croy.cable.virginm.net) has joined #haskell
2015-08-21 09:03:06	ReinH	stk944: They don't exist, I was just trying to illustrate what is going on
2015-08-21 09:03:18	broma0_	In the article by Gabriel Gonzalez "Purify Code Using Free Monads
2015-08-21 09:03:19	ReinH	(they could exist in some other language)
2015-08-21 09:03:34	stk944	ReinH, ooh I see thanks
2015-08-21 09:03:36	broma0_	the author says "the Free monad guarantees that you can always easily achieve the absolute maximal level of purity possible and the absolute minimal amount of impure code"
2015-08-21 09:03:38	ReinH	stk944: np
2015-08-21 09:03:53	broma0_	how does it actually "guarantee" this?
2015-08-21 09:04:01	cjay	Ankhers: oh, I didn't realize "stack install" works on the project instead of globally for the stackage version.
2015-08-21 09:04:07	broma0_	"absolute maximal/minimal" sounds a bit strong
2015-08-21 09:04:19	ReinH	broma0_: A free object is one for which the only structure is the structure provided by the definition of the object
2015-08-21 09:04:37	ReinH	broma0_: in this case, a free monad has bind and return that follow the laws and exactly nothing else
2015-08-21 09:04:49	ReinH	so in that sense it is minimal/maximal
2015-08-21 09:04:56	Zekka	ReinH: I don't really get that.
2015-08-21 09:04:56	<--	triliyn (~lioneyes@c-24-6-242-177.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2015-08-21 09:04:58	-->	EunChe (~eunche@221.154.182.251) has joined #haskell
2015-08-21 09:04:58	-->	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-21 09:05:04	broma0_	ReinH: hmm.. so all of the impure code gets stuffed into the interpreter?
2015-08-21 09:05:06	cjay	Ankhers: why does it even have a packagedb in $HOME/.stack?
2015-08-21 09:05:14	Intolerable	broma0_: yes
2015-08-21 09:05:14	broma0_	if, in fact, youre even using an impure interpreter
2015-08-21 09:05:17	Zekka	What does it mean to have exactly nothing else?
2015-08-21 09:05:23	ReinH	broma0_: Well, leaving aside the question of whether monads are impure (they aren't)
2015-08-21 09:05:34	ReinH	The free monad is just a way to encode the structure of binds and returns
2015-08-21 09:05:38	stk944	ReinH, how do they get away with using Acc inside the parens? Is that defining Acc in terms of itself
2015-08-21 09:06:20	ReinH	stk944: types can be recursive. data List a = Nil | Cons a List a
2015-08-21 09:06:30	Ankhers	cjay: because stack can work with different snapshots of Stackage. So each package db will be associated with a given snapshot. If you `stack new` it will generate, among other things, a stack.yml file specifying which version of Stackage to use.
2015-08-21 09:06:33	bennofs	ReinH: you forgot some '()'s there
2015-08-21 09:06:37	ReinH	Zekka: formally it has to do with adjunctions
2015-08-21 09:06:42	-->	ldbrandy (~Adium@2620:10d:c090:200::1:21) has joined #haskell
2015-08-21 09:06:43	Zekka	(IIRC I've been told something to this effect: Y is a free X if you can define a function from objects of Y to objects of any other kind of X)
2015-08-21 09:06:54	<--	Ven (~textual@163.5.245.253) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-08-21 09:07:00	ReinH	Zekka: prior to category theory, "free structures" were expressed algebraically in a way that was pretty unsatisfatory
2015-08-21 09:07:12	ReinH	bennofs: oh
2015-08-21 09:07:12	broma0_	The free monad / interpreter pattern seems more and more like idiomatic haskell every time i use/read about it
2015-08-21 09:07:22	stk944	ReinH, ohhh ok thanks again
2015-08-21 09:07:24	<--	mariusmarius1 (~mariusmar@2620:10d:c0a1:f80::a:b37f) has quit (Read error: Connection reset by peer)
2015-08-21 09:07:27	ReinH	broma0_: free objects have nice properties
2015-08-21 09:07:27	<--	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 250 seconds)
2015-08-21 09:07:45	--	irc: disconnected from server
2015-08-21 09:08:01	-->	RouxTheDay (~RouxTheDa@199.21.87.214) has joined #haskell
2015-08-21 09:08:01	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-21 09:08:01	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-21 09:08:01	--	Channel #haskell: 1500 nicks (1 op, 0 voices, 1499 normals)
2015-08-21 09:08:01	--	URL for #haskell: http://www.haskell.org/
2015-08-21 09:08:01	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-21 09:08:02	ReinH	broma0_: seems like a pretty good use case
2015-08-21 09:08:04	bennofs	Zekka: a free object is a thing which basically "doesn't lose information": it doesn't merge or flatten stuff, and two expressions are only equal when required so by the law
2015-08-21 09:08:12	ReinH	fosterite: https://en.wikipedia.org/wiki/Free_group
2015-08-21 09:08:30	fosterite	ReinH: you need equality for that
2015-08-21 09:08:34	joco42__	i am wondering why not so many haskellers use this https://john-millikin.com/articles/ride-the-snake/
2015-08-21 09:08:36	joco42__	any idea?
2015-08-21 09:08:47	Ankhers	cjay: If you are not in a project, stack will use whichever resolver is set globally. Which can be found and changed in ~/.stack/global/stack.yaml
2015-08-21 09:09:02	<--	doodlehaus (~doodlehau@h69-128-47-52.mdsnwi.dedicated.static.tds.net) has quit (Remote host closed the connection)
2015-08-21 09:09:06	-->	piezoid (~piezoid@tsv35-1-78-232-144-90.fbx.proxad.net) has joined #haskell
2015-08-21 09:09:10	joco42__	did anyone here tried it ?
2015-08-21 09:09:11	ReinH	Zekka: do you use lists?
2015-08-21 09:09:13	<--	anRch (~textualma@23.30.182.241) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-08-21 09:09:15	joco42__	is it any good ?
2015-08-21 09:09:18	<--	EunChe (~eunche@221.154.182.251) has quit (Ping timeout: 244 seconds)
2015-08-21 09:09:27	-->	SubZeroFX (~SubZeroFX@unaffiliated/subzerofx) has joined #haskell
2015-08-21 09:09:38	Zekka	ReinH: Yeah. I know, list is supposed to be the free monoid, right?
2015-08-21 09:09:47	-->	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-21 09:09:47	broma0_	Zekka: it was so damn confusing at first.. but honestly, the free monad / interpreter pattern was SO MUCH EASIER to get good at compared to other haskell things (which usually take a ton of work, for me at least)
2015-08-21 09:09:48	ReinH	Zekka: Not quite, but it's close enough for our purposes
2015-08-21 09:10:04	Zekka	for A is any type, list of A is a monoid that satisfies the laws and nothing else?
2015-08-21 09:10:06	-->	rfmind (~ruslan@250.105-64-87.adsl-dyn.isp.belgacom.be) has joined #haskell
2015-08-21 09:10:10	ReinH	Zekka: The point is, lists are a pretty useful structure. They seem like the obvious such structure, especially compared to, say, foldr encoded lists.
2015-08-21 09:10:17	ReinH	foldr encoded lists seem ike the weird encoding
2015-08-21 09:10:42	<--	perspectival (perspectiv@nat/redhat/x-jhepxbdziqefqqkr) has quit (Ping timeout: 260 seconds)
2015-08-21 09:10:43	Zekka	broma0_: Just remember that other people who aren't already good at it will probably have to get good at it to debug your code. (although they may be able to ignore some of it if you hide it)
2015-08-21 09:10:43	ReinH	It's similar with free monads
2015-08-21 09:10:49	-->	pantsman- (~pantsman@cpc12-haye16-2-0-cust45.haye.cable.virginm.net) has joined #haskell
2015-08-21 09:10:58	ReinH	free monads are a nice general way to say "my structure has binds and returns, but I don't want to decide what those mean yet"
2015-08-21 09:11:06	-->	adek (~adek@199.201.64.2) has joined #haskell
2015-08-21 09:11:15	-->	fujimura_ (~fujimura@ngn6-ppp1644.tokyo.sannet.ne.jp) has joined #haskell
2015-08-21 09:11:15	Ankhers	joco42__: I haven't tried it, but Python is generally slower than Haskell. And if you are using it because it is a c wrapper, you may as well wrap haskell in C. There was a thread on Reddit semi-related to this recently. https://www.reddit.com/r/haskell/comments/3hogfy/haskell_usefulness_for_python_developer/
2015-08-21 09:11:21	<--	lunaris (5203aa37@gateway/web/freenode/ip.82.3.170.55) has quit (Quit: Page closed)
2015-08-21 09:11:25	Zekka	ReinH: OK, sure, I understand you
2015-08-21 09:11:30	-->	sifar (~sifar@unaffiliated/sifar) has joined #haskell
2015-08-21 09:11:32	ReinH	Ankhers: probaby because not so many haskellers want to call python from haskell?
2015-08-21 09:12:06	ReinH	Zekka: similarly, lists are a nice way of saying "I have a thing I eventually want to call foldr on". foldr is the free monoid interpreter generator. ;)
2015-08-21 09:12:10	Ankhers	ReinH: That too.
2015-08-21 09:12:11	joco42__	Ankhers: what do you mean wrap haskell in c?
2015-08-21 09:12:16	Zekka	Hope you guys don't take it as me saying "your work is not good" when I say people should probably avoid doing X because X is confusing
2015-08-21 09:12:17	<--	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 246 seconds)
2015-08-21 09:12:17	geekosaur	isn't there missingpy? (may be bitrotted though)
2015-08-21 09:12:23	<--	houlers (744b9102@gateway/web/cgi-irc/kiwiirc.com/ip.116.75.145.2) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-08-21 09:12:26	<--	fujimura (~fujimura@ngn6-ppp792.tokyo.sannet.ne.jp) has quit (Ping timeout: 246 seconds)
2015-08-21 09:12:34	joco42__	Ankhers: this is the other way around, wrapping python into haskell.
2015-08-21 09:12:40	ReinH	(to the extent that lists are free monoids, which they aren't)
2015-08-21 09:13:01	Ankhers	joco42__: Wrap c in Haskell. If there is a C library you want to use, you can use Haskells FFI to gain access to the C library.
2015-08-21 09:13:12	<--	drangewdk (~testuser@82.116.94.242) has quit (Quit: Nettalk6 - www.ntalk.de)
2015-08-21 09:13:14	Zekka	It's just because when I was into Haskell I wrote a whole lot of very confusing code that I now regret subjecting others to, and most of the stuff I used is perfectly mainstream from #haskell pov
2015-08-21 09:13:17	ReinH	Zekka: Well, you don't even need to understand free monads to *use* them.
2015-08-21 09:13:26	ReinH	Zekka: Just like you don't need to understand free monoids to use lists.
2015-08-21 09:13:39	ReinH	operational is a nice library with a nice interface that you can use without knowing what free monads are at all
2015-08-21 09:13:42	cjay	Ankhers: awesome, thanks. What confused me earlier: stuff that is not included in the stackage snapshot seems to get built separately for each project with "stack install", and not get shared between projects.
2015-08-21 09:13:47	Zekka	ReinH: I thought I'd made it clear that I knew that in principle
2015-08-21 09:14:05	-->	ulfdoz (~mary@2.173.52.81) has joined #haskell
2015-08-21 09:14:09	ReinH	Zekka: well, I'm responding to your point about using things that people won't understand.
2015-08-21 09:14:24	Zekka	you can define your monad type in terms of them in a way where abstraction hopefully doesn't leak out
2015-08-21 09:14:32	Ankhers	cjay: Glad I could help a bit.
2015-08-21 09:14:43	joco42__	Ankhers: you mean that... I see. So basically python is just a C wrapper so why not wrap it directly to haskell you say?
2015-08-21 09:14:55	Zekka	Maybe I'm just conflating them too much with my awful experience with the pipes UX though, but I kind of associate their usage with clever rewriting tricks
2015-08-21 09:15:12	<--	Intolerable (~Adium@host81-138-103-242.in-addr.btopenworld.com) has quit (Quit: Leaving.)
2015-08-21 09:15:14	Zekka	You don't *have* to use clever rewriting tricks, but what they offer is a math opportunity to introduce them
2015-08-21 09:15:16	-->	psy_ (~psy@43.224.156.125) has joined #haskell
2015-08-21 09:15:17	joco42__	Ankhers: the thing is I am not good at C.
2015-08-21 09:15:47	<--	psy_ (~psy@43.224.156.125) has quit (Max SendQ exceeded)
2015-08-21 09:16:05	joco42__	Ankhers: I am thinking writing a gui python and a haskell frp logic for it.
2015-08-21 09:16:09	Zekka	(FWIW I should clarify what knowledge I started with: roughly what the Free type says, some examples of libraries that use Free monads, very little of the justification for the term "free" -- and now I feel like I know slightly more of the justification and have a better intuition for what Free is)
2015-08-21 09:16:10	-->	OrangeShark_ (~OrangeSha@2602:306:c5c9:a3e0:10f4:e783:6beb:a241) has joined #haskell
2015-08-21 09:16:12	ReinH	joco42__: I think you should spend your time getting better at haskell rather than trying to make it FFI with python :)
2015-08-21 09:16:12	<--	OrangeShark_ (~OrangeSha@2602:306:c5c9:a3e0:10f4:e783:6beb:a241) has quit (Remote host closed the connection)
2015-08-21 09:16:25	ReinH	Zekka: have you see the examples?
2015-08-21 09:16:38	bennofs	joco42__: what GUI lib would you use in python? 
2015-08-21 09:16:40	ReinH	Zekka: Ed's libraries tend to be a bit more brazen about throwing the theory around, I admit.
2015-08-21 09:16:40	-->	psy_ (~psy@43.224.156.125) has joined #haskell
2015-08-21 09:16:44	ReinH	Zekka: Have you seen the operational library?
2015-08-21 09:16:52	joco42__	bennofs: QT for example.
2015-08-21 09:16:57	ReinH	It's a free monad packaged up in a more approachable way
2015-08-21 09:16:58	Zekka	I haven't seen operational.
2015-08-21 09:17:03	bennofs	joco42__: there is hsqml for haskell ;) 
2015-08-21 09:17:03	ReinH	@hackage operational
2015-08-21 09:17:03	lambdabot	http://hackage.haskell.org/package/operational
2015-08-21 09:17:05	Zekka	I don't know which examples you mean otherwise
2015-08-21 09:17:07	bennofs	@hackage hsqml
2015-08-21 09:17:07	lambdabot	http://hackage.haskell.org/package/hsqml
2015-08-21 09:17:20	joco42__	bennofs: but i think it is kinda limited
2015-08-21 09:17:35	joco42__	bennofs: it is not really qt, just qml
2015-08-21 09:17:37	bennofs	right, it is :/
2015-08-21 09:17:58	ReinH	Zekka: https://github.com/ekmett/free/tree/master/examples for edwardk's Free stuff
2015-08-21 09:18:02	-->	Flonk_ (b2be49ba@gateway/web/freenode/ip.178.190.73.186) has joined #haskell
2015-08-21 09:18:30	ReinH	the teletype one is pretty straightforward
2015-08-21 09:18:45	ReinH	well, relatively speaking
2015-08-21 09:19:02	-->	nkhodyunya (~Adium@dnm.74.80.124.92.dsl.krasnet.ru) has joined #haskell
2015-08-21 09:19:07	Zekka	ReinH: The stuff I've run into that I think I actually have an issue with is specifically tricky rewriting rules
2015-08-21 09:19:14	ReinH	Zekka: But I would say operational is the most bang for buck in terms of making use of free monads without needing to grok all the theory
2015-08-21 09:19:28	ReinH	Zekka: what sort of rewriting rules?
2015-08-21 09:19:30	Zekka	If you'd asked me yesterday I would have said that I thought tricky rewriting rules were the primary reason to use free monads
2015-08-21 09:19:41	joco42__	bennofs: some weekend i will try this ... reflex - via python - qt5 ... combo
2015-08-21 09:20:12	ReinH	Zekka: AST rewriting?
2015-08-21 09:20:23	Zekka	Anything that's exploiting "I have a huge tree here that represents my program and I would like to substitute parts of it"
2015-08-21 09:20:28	-->	ajf (~ajf@ajf.me) has joined #haskell
2015-08-21 09:20:31	<--	rfmind (~ruslan@250.105-64-87.adsl-dyn.isp.belgacom.be) has quit (Quit: Lost terminal)
2015-08-21 09:20:33	ajf	what's the function like Monad m => m a -> (m a -> m b) -> m b
2015-08-21 09:20:38	ReinH	Zekka: Ah, yeah, uniplate is good for that
2015-08-21 09:20:46	ReinH	ajf: flip ap
2015-08-21 09:20:47	Zekka	If you're comfortable calling Free's tree a syntax tree then I would call that AST rewriting
2015-08-21 09:20:59	ajf	so I can do input <- getContents, inputLines <- lines input as a one-liner
2015-08-21 09:21:05	ReinH	Zekka: Well, monads can be looked at as doing tree grafting, absolutelyl
2015-08-21 09:21:13	ajf	maybe that type signature was wrong, uh
2015-08-21 09:21:18	ajf	oh
2015-08-21 09:21:21	ReinH	but the issue there is with being able to inspect the tree
2015-08-21 09:21:21	ajf	>>=
2015-08-21 09:21:25	ajf	Monad m => m a -> (a -> m b) -> m b
2015-08-21 09:21:25	ReinH	reflection
2015-08-21 09:21:29	ReinH	uniplate is better at that
2015-08-21 09:21:30	<--	adek (~adek@199.201.64.2) has quit (Ping timeout: 240 seconds)
2015-08-21 09:21:39	ajf	(a -> m b) not (m a -> m b)
2015-08-21 09:21:40	ajf	:)
2015-08-21 09:21:46	ReinH	tree grafting / variable substitution, there's a nice paper about that...
2015-08-21 09:21:49	Zekka	ReinH: Isn't the point of free monads that you have a data structure where everything relevant to the monad interface is inspectable?
2015-08-21 09:22:01	bennofs	joco42__: you should definitely try out hsqml too :) there's an 1h video on the website where the developer shows how to build a "notes" application with it (you can even have it use native widgets through qtquick-controls!) 
2015-08-21 09:22:01	<--	delphinas (~delphinas@cpc23-seve21-2-0-cust98.13-3.cable.virginm.net) has quit (Read error: Connection reset by peer)
2015-08-21 09:22:06	ReinH	oh, no, not a paper, a sigfpe post like everything else http://blog.sigfpe.com/2006/11/variable-substitution-gives.html
2015-08-21 09:22:11	-->	Avonis (~Avonis@unaffiliated/avonis) has joined #haskell
2015-08-21 09:22:17	Xnuk	@hoogle Monad m => m a -> (a -> m b) -> m b
2015-08-21 09:22:18	lambdabot	Prelude (>>=) :: Monad m => m a -> (a -> m b) -> m b
2015-08-21 09:22:18	lambdabot	Control.Monad (>>=) :: Monad m => m a -> (a -> m b) -> m b
2015-08-21 09:22:18	lambdabot	Control.Monad.Instances (>>=) :: Monad m => m a -> (a -> m b) -> m b
2015-08-21 09:22:34	<--	pleax (~user@77.88.2.214-spb.dhcp.yndx.net) has quit (Ping timeout: 272 seconds)
2015-08-21 09:22:35	ajf	actually I think I wanted `fmap`
2015-08-21 09:22:40	Zekka	ReinH: Anyway, this is the stuff I'm thinking of when I'm hazarding people that I'm worried free monads are confusing
2015-08-21 09:22:41	ajf	`lines` isn't an IO action
2015-08-21 09:22:42	bennofs	ajf: yes you want :)
2015-08-21 09:22:43	<--	Avonis (~Avonis@unaffiliated/avonis) has quit (Max SendQ exceeded)
2015-08-21 09:22:52	ReinH	Zekka: absolutely, check out http://blog.sigfpe.com/2006/11/variable-substitution-gives.html
2015-08-21 09:22:55	-->	pleax (~user@77.88.2.214-spb.dhcp.yndx.net) has joined #haskell
2015-08-21 09:23:01	joco42__	bennofs: i was trying it, watching it, but somehow... it us just too much magic for me
2015-08-21 09:23:12	joco42__	and too little power in return
2015-08-21 09:23:15	-->	Avonis (~Avonis@unaffiliated/avonis) has joined #haskell
2015-08-21 09:23:24	joco42__	too difficult in other words
2015-08-21 09:23:32	Zekka	by design the code you feed in is not the same as the code you interpret into the monad that actually does your effects, and if you want to know why you will have to start thinking about data structures instead of programs
2015-08-21 09:23:32	<--	Avonis (~Avonis@unaffiliated/avonis) has quit (Max SendQ exceeded)
2015-08-21 09:23:37	bennofs	joco42__: ah, you mean this type level trickery for supporting variadic functions etc
2015-08-21 09:23:39	bennofs	?
2015-08-21 09:23:45	ReinH	Zekka: compare to Plated though as well https://hackage.haskell.org/package/lens-4.12.3/docs/Control-Lens-Plated.html
2015-08-21 09:23:58	joco42__	bennofs: yes, and also the c ffi 
2015-08-21 09:24:01	-->	Avonis (~Avonis@unaffiliated/avonis) has joined #haskell
2015-08-21 09:24:03	-->	timemage (~timemage@unaffiliated/timemage) has joined #haskell
2015-08-21 09:24:05	ReinH	Zekka: that's the sefcret, data structures are programs and programs are data structures ;)
2015-08-21 09:24:07	-->	delphinas (~delphinas@cpc23-seve21-2-0-cust98.13-3.cable.virginm.net) has joined #haskell
2015-08-21 09:24:15	<--	Avonis (~Avonis@unaffiliated/avonis) has quit (Max SendQ exceeded)
2015-08-21 09:24:18	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 244 seconds)
2015-08-21 09:24:19	-->	ranguli (~ranguli@mtprnf0117w-142177102191.dhcp-dynamic.FibreOp.nl.bellaliant.net) has joined #haskell
2015-08-21 09:24:21	<--	conal (~textual@104.255.240.10) has quit (Quit: Computer has gone to sleep.)
2015-08-21 09:24:28	Zekka	ReinH: I think that's the easy part
2015-08-21 09:24:46	-->	Avonis (~Avonis@unaffiliated/avonis) has joined #haskell
2015-08-21 09:24:48	bennofs	joco42__: have you looked at gtk bindings? I believe they are pretty mature (haven't used them myself)
2015-08-21 09:24:51	joco42__	i bennofs : i am not good at c, i dont want to write c code, if i need then i want to write python code... instead of c, this is why pyqt exists...
2015-08-21 09:24:52	Zekka	the hard part is the specifics of the free monad interface, although that's not that hard
2015-08-21 09:24:57	ReinH	Zekka: Yeah, that much is obvious if you even look at CPU architectures ;)
2015-08-21 09:25:02	<--	Avonis (~Avonis@unaffiliated/avonis) has quit (Max SendQ exceeded)
2015-08-21 09:25:02	Zekka	and you can avoid it
2015-08-21 09:25:09	joco42__	bennofs: yes, the gtk is another interesting option
2015-08-21 09:25:12	ReinH	at least, most of them
2015-08-21 09:25:17	-->	kmels (~kmels@186.64.110.122) has joined #haskell
2015-08-21 09:25:30	-->	perspectival (perspectiv@nat/redhat/x-poagckrekajzdoty) has joined #haskell
2015-08-21 09:25:34	<--	BenevolentCod (~evi1m4chi@xdsl-78-35-83-248.netcologne.de) has quit (Remote host closed the connection)
2015-08-21 09:25:36	-->	Avonis (~Avonis@unaffiliated/avonis) has joined #haskell
2015-08-21 09:25:44	-->	wraithm (~matt@205.166.218.80) has joined #haskell
2015-08-21 09:25:47	-->	suppi (~suppi@unaffiliated/suppi) has joined #haskell
2015-08-21 09:25:52	<--	Avonis (~Avonis@unaffiliated/avonis) has quit (Max SendQ exceeded)
2015-08-21 09:26:01	-->	conal (~textual@104.255.240.10) has joined #haskell
2015-08-21 09:26:04	sdx23	http://lpaste.net/376617414374195200 this reminds me of object oriented programming - is it bad practice?
2015-08-21 09:26:11	ReinH	Zekka: but yeah, there are a variety of interpretatios of free monads... in fac, exactly as many as there are interpretations of monads in general, because they're free, and that's part of their power ;)
2015-08-21 09:26:26	-->	Avonis (~Avonis@unaffiliated/avonis) has joined #haskell
2015-08-21 09:26:39	<--	wraithm (~matt@205.166.218.80) has quit (Client Quit)
2015-08-21 09:26:45	joco42__	bennofs: the reasoning is that... I know haskell, I know python, the haskell-python bindings are easy to learn, so everything is easy to learn and well documented in this equation, in other words transparent, i understand every bit of detail if i use this combo... and have all the power that i can get out of full qt and haskell
2015-08-21 09:26:56	-->	Rainb (~rainb@181.50.148.224) has joined #haskell
2015-08-21 09:27:00	<--	Avonis (~Avonis@unaffiliated/avonis) has quit (Max SendQ exceeded)
2015-08-21 09:27:03	Zekka	The other hard part: things you already understand may be rewritten into things you don't neessarily understand, depending on what you're using
2015-08-21 09:27:17	-->	cbaatz (~cb@46-127-141-225.dynamic.hispeed.ch) has joined #haskell
2015-08-21 09:27:26	ReinH	sdx23: not at all
2015-08-21 09:27:27	suppi	sdx23, I'm no expert, but looks reasonable to me
2015-08-21 09:27:30	-->	Avonis (~Avonis@unaffiliated/avonis) has joined #haskell
2015-08-21 09:27:33	-->	doodlehaus (~doodlehau@h69-128-47-52.mdsnwi.dedicated.static.tds.net) has joined #haskell
2015-08-21 09:27:36	<--	Luke (~luke@unaffiliated/luke) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-21 09:27:40	 *	hackagebot coverage 0.1.0.2 - Exhaustivity Checking Library  https://hackage.haskell.org/package/coverage-0.1.0.2 (NicolasDelPiano)
2015-08-21 09:27:42	 *	hackagebot hans 2.6.0.0 - IPv4 Network Stack  https://hackage.haskell.org/package/hans-2.6.0.0 (TrevorElliott)
2015-08-21 09:27:45	<--	mfng (50a92aa2@gateway/web/freenode/ip.80.169.42.162) has quit (Quit: Page closed)
2015-08-21 09:28:11	<--	oish (~charlie@host81-130-206-144.in-addr.btopenworld.com) has quit (Remote host closed the connection)
2015-08-21 09:28:17	sdx23	ReinH, suppi: good, then I'll go along with it. Thank you :)
2015-08-21 09:28:22	-->	mkusher (~mkusher@93.170.184.174) has joined #haskell
2015-08-21 09:28:26	-->	Laserbear (~Laserbear@c-73-223-160-142.hsd1.ca.comcast.net) has joined #haskell
2015-08-21 09:28:27	suppi	sdx23, good luck :)
2015-08-21 09:28:28	Zekka	ReinH: But fwiw I also see this as a boiling the crab situation, because from my experience free monads are not the first thing that will be too confusing for most people
2015-08-21 09:28:31	joco42__	haskell is pretty nice but as the author of this post says: https://john-millikin.com/articles/ride-the-snake/ "Haskell's a great language; it's efficient, consistent, terse, reliable, and so on. But if there's one thing Haskell's not, it's "batteries included"."
2015-08-21 09:28:44	ReinH	sdx23: Note that the record doesn't store any state as you would expect of a traditional O in OOP
2015-08-21 09:29:13	ReinH	Zekka: I think that's because they are presented poorly, but because they are inherently difficult.
2015-08-21 09:29:22	ReinH	Zekka: I have had success teaching monads by starting with free monads.
2015-08-21 09:29:29	-->	biglama (~Day_dream@fon75-2-78-192-179-102.fbxo.proxad.net) has joined #haskell
2015-08-21 09:29:42	joco42__	this kind of batteries included part is a little bit indeed missing... so i am wondering if some simple binding to a batteries included language would help....
2015-08-21 09:29:45	ReinH	You go list -> free monad -> monad morphisms (interpreters) -> monads
2015-08-21 09:29:47	-->	mariusmarius (~mariusmar@2620:10d:c0a1:f80::a:f71b) has joined #haskell
2015-08-21 09:30:00	<--	jemu (~Thunderbi@212.202.107.85) has quit (Quit: jemu)
2015-08-21 09:30:04	ReinH	and you note in passing that the free monad construction is very, very similar to a list
2015-08-21 09:30:12	<--	Avonis (~Avonis@unaffiliated/avonis) has left #haskell
2015-08-21 09:30:21	sdx23	ReinH: so if it would, that'd be not too good? However, in a threaded environment MVars in records are one way to go, or is that to be avoided too?
2015-08-21 09:30:21	<--	BartAdv (uid90451@gateway/web/irccloud.com/x-ufpdayewywhdfool) has quit (Quit: Connection closed for inactivity)
2015-08-21 09:30:34	joco42__	and i am really wondering why people are not using this haskell-python binding....
2015-08-21 09:30:35	Zekka	ReinH: You should teach my coworkers, who are (imho justifiably) pretty suspicious of highly abstract things
2015-08-21 09:30:38	ReinH	sdx23: Not necessarily, but it does distinguish this approach from OO
2015-08-21 09:31:04	<--	alevy (~alevy@2001:470:806d:1:beae:c5ff:fe44:378f) has quit (Changing host)
2015-08-21 09:31:04	-->	alevy (~alevy@unaffiliated/aalevy) has joined #haskell
2015-08-21 09:31:29	bennofs	joco42__: how do you marshal data between haskell and python with haskell-python?
2015-08-21 09:31:31	-->	hmrm (~hmrm@198.244.104.109) has joined #haskell
2015-08-21 09:31:33	Zekka	Oh, hold up, have to go
2015-08-21 09:31:48	-->	carlf (~carlf@165.254.54.142) has joined #haskell
2015-08-21 09:31:50	sdx23	ReinH: I see. I've recently noticed trouble finding a nice style, but I'm not sure it's something that mainly comes with experience.
2015-08-21 09:31:53	<--	howdoi (uid224@gateway/web/irccloud.com/x-znppimihheajwtwq) has quit (Quit: Connection closed for inactivity)
2015-08-21 09:31:57	ReinH	Zekka: it also show that a list can represent non-branching computations, and the conversion to the free monad structure is precicely the one that gives you computations that branch based on previously computed values
2015-08-21 09:33:03	-->	trism (~jconti@unaffiliated/trism) has joined #haskell
2015-08-21 09:33:05	<--	Wizek (~Wizek@catv-89-132-138-118.catv.broadband.hu) has quit (Ping timeout: 244 seconds)
2015-08-21 09:33:19	joco42__	bennofs: i wonder if this page answers your question https://john-millikin.com/articles/ride-the-snake/ i haven't tried this binding yet so i don't know the answer myself
2015-08-21 09:33:20	aweinstock	bennofs: I'd imagine it would be straightforward (but painful/tedious) with Python's ctypes and Haskell's Foreign.Marshal
2015-08-21 09:33:25	ReinH	If you want to teach "monads" per se rather than "IO and State and other things that have >>= and return functions", it's a good way to go
2015-08-21 09:33:37	ReinH	then again, the latter is often the more practifcal approach
2015-08-21 09:33:46	ReinH	god I can't type today
2015-08-21 09:33:48	joco42__	bennofs: what do you mean by marshalling ? moving ?
2015-08-21 09:33:50	aweinstock	bennofs: (but then again, that sort of depends on knowing C datastructures)
2015-08-21 09:33:58	-->	ramky (~ramky@114.143.68.50) has joined #haskell
2015-08-21 09:34:06	<--	swade61 (~swade61@host81-149-190-248.in-addr.btopenworld.com) has left #haskell
2015-08-21 09:34:14	bennofs	joco42__: if you have data Foo = Bar String | Qux Int and you need to pass that to python, you probably won't be able to do so directly
2015-08-21 09:34:24	aweinstock	joco42__: if you have some data on what-to-do in haskell, how do you tell your python gui what to do?
2015-08-21 09:34:31	bennofs	joco42__: you have to specify how to translate that data to types that python knows
2015-08-21 09:34:43	joco42__	bennofs: i have a look at this
2015-08-21 09:35:04	<--	ranguli (~ranguli@mtprnf0117w-142177102191.dhcp-dynamic.FibreOp.nl.bellaliant.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-08-21 09:35:08	<--	skeet70 (~skeet70@inet-hqmc07-o.oracle.com) has quit (Ping timeout: 244 seconds)
2015-08-21 09:35:11	-->	basearcher (~textual@208.66.26.41) has joined #haskell
2015-08-21 09:35:18	-->	NeverDie (~NeverDie@cpe-184-152-22-98.nyc.res.rr.com) has joined #haskell
2015-08-21 09:35:25	aweinstock	joco42__: one possible approach is having a python "client" connect to a haskell "server" via a socket
2015-08-21 09:35:29	<--	sebleblanc (~seb@unaffiliated/sebleblanc) has quit (Ping timeout: 240 seconds)
2015-08-21 09:35:32	<--	broma0 (~androirc@ool-182e260d.dyn.optonline.net) has quit (Remote host closed the connection)
2015-08-21 09:35:42	-->	rolo_ (~rolo@host205-43-dynamic.41-79-r.retail.telecomitalia.it) has joined #haskell
2015-08-21 09:35:44	-->	broma0 (~androirc@ool-182e260d.dyn.optonline.net) has joined #haskell
2015-08-21 09:35:45	aweinstock	joco42__: and have them communicate via JSON or something
2015-08-21 09:36:09	aweinstock	:t Data.Aeson.TH.deriveJSON
2015-08-21 09:36:11	lambdabot	aeson-0.9.0.1:Data.Aeson.Types.Internal.Options -> Language.Haskell.TH.Syntax.Name -> Language.Haskell.TH.Syntax.Q [Language.Haskell.TH.Syntax.Dec]
2015-08-21 09:36:11	<--	tempname11 (~tempname1@79.165.104.134) has quit (Ping timeout: 244 seconds)
2015-08-21 09:36:19	joco42__	aweinstock: i don't know it yet precisely  but this seems to be answer to your question : https://john-millikin.com/articles/ride-the-snake/
2015-08-21 09:36:37	bennofs	aweinstock: lambdabot has aeson? cool
2015-08-21 09:36:40	<--	rolo (~rolo@host205-43-dynamic.41-79-r.retail.telecomitalia.it) has quit (Read error: Connection reset by peer)
2015-08-21 09:36:43	<--	Zekka (~zekka@ip24-251-69-145.ph.ph.cox.net) has quit (Ping timeout: 244 seconds)
2015-08-21 09:36:45	joco42__	aweinstock: i have not tried this myself yet, i have to try it some weekend
2015-08-21 09:36:58	<--	s3mi0 (~s3mi0@123.155.155.77) has quit
2015-08-21 09:37:48	-->	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has joined #haskell
2015-08-21 09:38:07	-->	superturrican (~chatzilla@7.53.61.188.dynamic.wline.res.cust.swisscom.ch) has joined #haskell
2015-08-21 09:38:21	-->	eno789 (~bzhou@c-98-210-118-116.hsd1.ca.comcast.net) has joined #haskell
2015-08-21 09:38:38	-->	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has joined #haskell
2015-08-21 09:39:02	-->	ranguli (~ranguli@mtprnf0117w-142177102191.dhcp-dynamic.FibreOp.nl.bellaliant.net) has joined #haskell
2015-08-21 09:39:08	-->	AaronFriel (~AaronFrie@67.212.119.147) has joined #haskell
2015-08-21 09:39:15	aweinstock	joco42__: that looks like the cpython library handles all the marshalling for you (and probably is doing FFI stuff with the actual python interpreter)
2015-08-21 09:39:49	aweinstock	joco42__: I guess that might be a good idea, but only if python's GUI libraries are significantly better than haskell's
2015-08-21 09:39:54	<--	superturrican (~chatzilla@7.53.61.188.dynamic.wline.res.cust.swisscom.ch) has quit (Client Quit)
2015-08-21 09:40:02	AaronFriel	Unless using lambda case, if I've got a sum type with arguments, without pulling out the fn, there's no clean way to write (\c -> c != Token _foo_) where _foo_ is anything, right?
2015-08-21 09:40:04	joco42__	aweinstock: yeah, it looks easy... i am currently installing it to a sandbox...
2015-08-21 09:40:07	-->	superturrican (~chatzilla@7.53.61.188.dynamic.wline.res.cust.swisscom.ch) has joined #haskell
2015-08-21 09:40:17	-->	darenthis (~darenthis@cpc76742-dals23-2-0-cust353.20-2.cable.virginm.net) has joined #haskell
2015-08-21 09:40:21	joco42__	wanna try the examples from the webpage
2015-08-21 09:40:44	bennofs	AaronFriel: right, there isn't as far as I'm aware. 
2015-08-21 09:40:52	AaronFriel	that's a shame
2015-08-21 09:41:00	joco42__	aweinstock: https://www.riverbankcomputing.com/software/pyqt/intro
2015-08-21 09:41:02	aweinstock	:t (!=)
2015-08-21 09:41:03	lambdabot	    Not in scope: ‘!=’
2015-08-21 09:41:04	lambdabot	    Perhaps you meant one of these:
2015-08-21 09:41:04	lambdabot	      ‘!!’ (imported from Data.List), ‘/=’ (imported from Data.Eq),
2015-08-21 09:41:13	AaronFriel	aweinstock: I'm aware of /= :)
2015-08-21 09:41:21	joco42__	aweinstock: it is as good as a gui library can get... 
2015-08-21 09:41:24	AaronFriel	I just typoed
2015-08-21 09:41:39	bennofs	joco42__: there seem to be a at least a dozen haskell <-> python bindings on hackage from my quick search
2015-08-21 09:41:49	joco42__	bennofs: really?
2015-08-21 09:41:54	bennofs	joco42__: http://hackage.haskell.org/packages/search?terms=python
2015-08-21 09:42:01	joco42__	i only found two...
2015-08-21 09:42:06	aweinstock	joco42__: I've dealt with PyQt before, and remember there being painful edge cases involving the metaclass hackery it uses for signals&slots
2015-08-21 09:42:11	<--	Laserbear (~Laserbear@c-73-223-160-142.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2015-08-21 09:42:18	<--	darenthis (~darenthis@cpc76742-dals23-2-0-cust353.20-2.cable.virginm.net) has quit (Remote host closed the connection)
2015-08-21 09:42:40	aweinstock	@let (!=) = (/=)
2015-08-21 09:42:42	<--	dramforever (~wang_rk@unaffiliated/dramforever) has quit (Quit: Leaving.)
2015-08-21 09:42:42	lambdabot	 Defined.
2015-08-21 09:42:50	bennofs	joco42__: there's at least MissingPy, json-python, pyfi, HaPy  looking only at the description
2015-08-21 09:42:52	<--	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has quit (Ping timeout: 246 seconds)
2015-08-21 09:43:07	-->	glguy (~glguy@haskell/developer/glguy) has joined #haskell
2015-08-21 09:43:18	<--	SubZeroFX (~SubZeroFX@unaffiliated/subzerofx) has quit (Quit: Leaving)
2015-08-21 09:43:30	bennofs	joco42__: + pyffi 
2015-08-21 09:43:31	-->	sigma914 (~sigma@host86-135-77-130.range86-135.btcentralplus.com) has joined #haskell
2015-08-21 09:43:33	joco42__	aweinstock: hmmm... that's why one has to use frp :)
2015-08-21 09:43:36	<--	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has quit (Ping timeout: 264 seconds)
2015-08-21 09:43:58	-->	pyx (~pyx@CPE5039555c9fc5-CM5039555c9fc2.cpe.net.cable.rogers.com) has joined #haskell
2015-08-21 09:44:05	joco42__	bennofs: yes, the strange thing is that these bindings are not very alive...
2015-08-21 09:44:15	<--	pyx (~pyx@CPE5039555c9fc5-CM5039555c9fc2.cpe.net.cable.rogers.com) has quit (Client Quit)
2015-08-21 09:44:24	joco42__	bennofs: i would have expected them to be more popular...
2015-08-21 09:44:29	<--	teclo- (42@unaffiliated/teclo) has quit (Ping timeout: 246 seconds)
2015-08-21 09:45:11	-->	Laserbear (~Laserbear@c-73-223-160-142.hsd1.ca.comcast.net) has joined #haskell
2015-08-21 09:45:19	<--	ramky (~ramky@114.143.68.50) has quit (Ping timeout: 246 seconds)
2015-08-21 09:46:00	-->	ramky (~ramky@114.143.68.50) has joined #haskell
2015-08-21 09:46:25	-->	teclo- (42@unaffiliated/teclo) has joined #haskell
2015-08-21 09:46:47	-->	fabianvf (~fabianvf@216.30.185.217) has joined #haskell
2015-08-21 09:46:58	joco42__	yes, bennofs, the thing is i am really wondering why these python bindings are not more popular.... why haskellers are not using them.... more... much more ?
2015-08-21 09:47:17	<--	cita (~cita@unaffiliated/cita) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-21 09:47:28	bennofs	joco42__: idk. perhaps haskellers prefer writing C++ and binding it via the C FFI :) 
2015-08-21 09:47:43	joco42__	bennofs: yes, that can be...
2015-08-21 09:47:59	<--	realloc1 (~realloc1@2001:a62:18:e01:c472:72f4:2494:8849) has quit (Quit: Leaving)
2015-08-21 09:48:00	bennofs	joco42__: lets see if I can get cpython built on nixos...
2015-08-21 09:48:11	joco42__	bennofs: i mean cpython can be called directly from haskell
2015-08-21 09:48:51	joco42__	without any binding...
2015-08-21 09:48:51	-->	dan_f (~dan@wireless-165-124-145-232.nuwlan.northwestern.edu) has joined #haskell
2015-08-21 09:48:52	<--	yzq (~yzq@121.34.169.190) has quit (Remote host closed the connection)
2015-08-21 09:49:01	joco42__	so maybe there is no need for a binding...
2015-08-21 09:49:35	joco42__	cpython is just a c library that can be called from c... afaik, someone correct me if i am wrong...
2015-08-21 09:49:45	<--	niteria (~niteria@2a03:2880:2040:5ff3:face:b00c:0:1) has quit (Remote host closed the connection)
2015-08-21 09:49:48	<--	emma_ (~em@unaffiliated/emma) has quit (Ping timeout: 272 seconds)
2015-08-21 09:49:58	-->	niteria (~niteria@2a03:2880:2040:5ff0:face:b00c:0:1) has joined #haskell
2015-08-21 09:50:06	-->	cita (~cita@unaffiliated/cita) has joined #haskell
2015-08-21 09:50:09	joco42__	https://docs.python.org/2.5/ext/callingPython.html
2015-08-21 09:50:38	-->	skeet70 (~skeet70@inet-hqmc02-o.oracle.com) has joined #haskell
2015-08-21 09:50:43	-->	seangrove (~user@c-50-174-77-118.hsd1.ca.comcast.net) has joined #haskell
2015-08-21 09:50:44	-->	zariuq (~zar@214.233.164.82.customer.cdi.no) has joined #haskell
2015-08-21 09:50:50	-->	godel (~gonzalo@190.18.148.147) has joined #haskell
2015-08-21 09:51:03	-->	emma_ (~em@unaffiliated/emma) has joined #haskell
2015-08-21 09:51:40	<--	fabianvf (~fabianvf@216.30.185.217) has quit (Ping timeout: 244 seconds)
2015-08-21 09:51:50	aweinstock	cpython typically refers to the "default"/canonical python interpreter that's written in C
2015-08-21 09:52:11	joco42__	aweinstock: yes
2015-08-21 09:52:30	<--	paradoja (~paradoja@37.44.1.40) has quit (Ping timeout: 240 seconds)
2015-08-21 09:52:41	-->	hamid (~nithp@unaffiliated/hamid) has joined #haskell
2015-08-21 09:52:42	 *	hackagebot avr-shake 0.0.1.2 - AVR Crosspack actions for shake build systems.  https://hackage.haskell.org/package/avr-shake-0.0.1.2 (JamesCook)
2015-08-21 09:52:45	joco42__	aweinstock: i just wrote it explicitly here cpython... instead of just python... 
2015-08-21 09:52:51	glguy	 /exit
2015-08-21 09:52:54	<--	glguy (~glguy@haskell/developer/glguy) has quit (Remote host closed the connection)
2015-08-21 09:53:22	<--	perspectival (perspectiv@nat/redhat/x-poagckrekajzdoty) has quit (Quit: Leaving.)
2015-08-21 09:54:30	<--	jiada (uid97278@gateway/web/irccloud.com/x-kkwjeykbicawjujs) has quit (Quit: Connection closed for inactivity)
2015-08-21 09:55:17	<--	OmnipotentEntity (~omnipoten@unaffiliated/omnipotententity) has quit (Remote host closed the connection)
2015-08-21 09:56:04	-->	Jesin (~Jesin@2600:1003:b11b:394f:6267:20ff:fe41:ac60) has joined #haskell
2015-08-21 09:56:08	<--	binaryplease (~binaryple@p57972E05.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.3)
2015-08-21 09:57:08	<--	crobbins (~crobbins@2602:30a:c08e:19e0:bc2f:8534:af6e:1e6e) has quit (Quit: Leaving)
2015-08-21 09:57:13	<--	thkoch (~thkoch@141.70.75.163) has quit (Ping timeout: 246 seconds)
2015-08-21 09:57:21	Welkin	if I want to parse streaming input, can I do that with just attoparsec?
2015-08-21 09:57:25	-->	crobbins (~crobbins@2602:30a:c08e:19e0:bc2f:8534:af6e:1e6e) has joined #haskell
2015-08-21 09:57:32	-->	caconym (~caconym@unaffiliated/caconym) has joined #haskell
2015-08-21 09:57:35	<--	aznashwan (~nashwan@86.126.80.31) has quit (Quit: Leaving.)
2015-08-21 09:57:57	joco42__	bennofs: it seems cpython needs python3.3
2015-08-21 09:58:03	--	paf31 is now known as paf31_away
2015-08-21 09:58:12	-->	poincare101 (~dhaivat@cpe-174-103-231-209.new.res.rr.com) has joined #haskell
2015-08-21 09:58:15	-->	frerich (~frerich@kde/raabe) has joined #haskell
2015-08-21 09:59:10	<--	hasket (~hasket@198.8.80.32) has quit (Read error: Connection reset by peer)
2015-08-21 09:59:42	-->	hasket (~hasket@198.8.80.32) has joined #haskell
2015-08-21 10:00:07	-->	rfmind (~ruslan@250.105-64-87.adsl-dyn.isp.belgacom.be) has joined #haskell
2015-08-21 10:00:12	-->	jbgi (~jbgi@178-83-217-52.dynamic.hispeed.ch) has joined #haskell
2015-08-21 10:00:12	joco42__	bennofs: this is where i got stuck http://lpaste.net/139364
2015-08-21 10:00:21	<--	Laserbear (~Laserbear@c-73-223-160-142.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2015-08-21 10:00:39	bennofs	joco42__: which OS is that?
2015-08-21 10:00:47	joco42__	bennofs: osx
2015-08-21 10:00:49	-->	ptcek (~ptcek@89.239.24.150) has joined #haskell
2015-08-21 10:00:51	joco42__	ghc 7.8.4
2015-08-21 10:01:32	bennofs	joco42__: the web page mentions that you have to install the development headers for python
2015-08-21 10:01:48	joco42__	bennofs: cool, i have look !
2015-08-21 10:02:13	-->	tmtwd (~tmtwd@CPE84948cd07b51-CM84948cd07b50.cpe.net.cable.rogers.com) has joined #haskell
2015-08-21 10:02:15	--	paf31_away is now known as paf31
2015-08-21 10:02:28	<--	hamid (~nithp@unaffiliated/hamid) has quit (Ping timeout: 272 seconds)
2015-08-21 10:02:31	<--	erisco (~erisco@198-84-154-240.cpe.teksavvy.com) has quit (Ping timeout: 244 seconds)
2015-08-21 10:02:49	<--	dm3 (~dm3@78.60.230.119) has quit (Remote host closed the connection)
2015-08-21 10:04:06	bennofs	joco42__: you specially need python3.3
2015-08-21 10:04:15	joco42__	ok
2015-08-21 10:04:36	joco42__	bennofs: trying to figure out how to install that on osx....
2015-08-21 10:04:41	-->	shyardo (~textual@r235-pw-taquariguacu.ibys.com.br) has joined #haskell
2015-08-21 10:04:52	joco42__	bennofs: this looks relevant http://stackoverflow.com/questions/15931331/how-to-install-the-python-development-headers-on-mac-os-x
2015-08-21 10:05:21	-->	tempname11 (~tempname1@79.165.104.134) has joined #haskell
2015-08-21 10:05:41	<--	jp_rider (~Adium@2601:152:4103:4410:b535:a908:cabc:355c) has quit (Quit: Leaving.)
2015-08-21 10:06:25	<--	sigma914 (~sigma@host86-135-77-130.range86-135.btcentralplus.com) has quit (Ping timeout: 240 seconds)
2015-08-21 10:07:12	<--	fujimura_ (~fujimura@ngn6-ppp1644.tokyo.sannet.ne.jp) has quit (Remote host closed the connection)
2015-08-21 10:07:15	lpaste_	bennofs pasted “haskell-python build error” at http://lpaste.net/139366
2015-08-21 10:07:22	bennofs	joco42__: ^^^^ i got that far on nixos
2015-08-21 10:07:39	agocorona	what is the definition of composability?
2015-08-21 10:08:23	-->	sigma914 (~sigma@host86-135-77-130.range86-135.btcentralplus.com) has joined #haskell
2015-08-21 10:08:45	<--	quchen (~quchen@ipb21bf8fb.dynamic.kabel-deutschland.de) has quit (Remote host closed the connection)
2015-08-21 10:08:57	<--	eatman (~eatman@anthemis.grenoble.inria.fr) has quit (Quit: Lost terminal)
2015-08-21 10:09:07	-->	fujimura (~fujimura@ngn6-ppp1644.tokyo.sannet.ne.jp) has joined #haskell
2015-08-21 10:09:45	agocorona	are there some good definition?
2015-08-21 10:09:54	<--	mariusmarius (~mariusmar@2620:10d:c0a1:f80::a:f71b) has quit (Quit: Leaving.)
2015-08-21 10:09:57	joco42__	bennofs: yeah, the nixos version seems to be kinda old too http://hydra.nixos.org/job/nixpkgs/trunk/haskellPackages.cpython.x86_64-linux
2015-08-21 10:10:19	-->	adek (~adek@199.201.64.3) has joined #haskell
2015-08-21 10:10:26	<--	tmtwd (~tmtwd@CPE84948cd07b51-CM84948cd07b50.cpe.net.cable.rogers.com) has quit (Ping timeout: 260 seconds)
2015-08-21 10:11:08	<--	poincare101 (~dhaivat@cpe-174-103-231-209.new.res.rr.com) has quit (Quit: poincare101)
2015-08-21 10:11:10	-->	slackoverflow (~slackover@37.228.231.28) has joined #haskell
2015-08-21 10:11:14	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Remote host closed the connection)
2015-08-21 10:11:18	<--	mkusher (~mkusher@93.170.184.174) has quit (Quit: Konversation terminated!)
2015-08-21 10:11:35	<--	broma0_ (~broma0@ool-182e260d.dyn.optonline.net) has quit (Quit: leaving)
2015-08-21 10:11:37	-->	pt1 (~pt1@c-89-160-58-119.cust.bredband2.com) has joined #haskell
2015-08-21 10:11:48	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-21 10:12:09	-->	mkusher (~mkusher@93.170.184.174) has joined #haskell
2015-08-21 10:13:45	<--	sifar (~sifar@unaffiliated/sifar) has quit (Ping timeout: 245 seconds)
2015-08-21 10:14:02	-->	unclechu (~unclechu@188.162.185.6) has joined #haskell
2015-08-21 10:16:15	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Ping timeout: 252 seconds)
2015-08-21 10:16:36	<--	piezoid (~piezoid@tsv35-1-78-232-144-90.fbx.proxad.net) has quit (Ping timeout: 264 seconds)
2015-08-21 10:16:40	-->	fabianvf (~fabianvf@216.30.185.217) has joined #haskell
2015-08-21 10:16:41	-->	Swizec (~swizec@199.21.86.210) has joined #haskell
2015-08-21 10:16:51	<--	carlf (~carlf@165.254.54.142) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-08-21 10:17:49	<--	fujimura (~fujimura@ngn6-ppp1644.tokyo.sannet.ne.jp) has quit (Remote host closed the connection)
2015-08-21 10:18:55	bennofs	joco42__: hmm, perhaps pyfi builds, it seems more recent: https://github.com/Russell91/pyfi
2015-08-21 10:18:58	-->	nucleartide (~jason@cpe-68-175-46-167.nyc.res.rr.com) has joined #haskell
2015-08-21 10:18:58	<--	frerich (~frerich@kde/raabe) has quit (Remote host closed the connection)
2015-08-21 10:19:03	<--	srenatus (uid322@gateway/web/irccloud.com/x-ttqjijaxawgflrja) has quit (Quit: Connection closed for inactivity)
2015-08-21 10:19:14	Gurkenglas	agocorona, how did you come to need that definition? Wikipedia has it as a term from software engineering, I would have guessed something like "two things are composable if they can be composed", refering to what you can look up as function composition
2015-08-21 10:19:16	-->	frerich (~frerich@kde/raabe) has joined #haskell
2015-08-21 10:19:18	<--	plucas (~plucas@8.18.218.175) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-21 10:20:19	<--	rfmind (~ruslan@250.105-64-87.adsl-dyn.isp.belgacom.be) has quit (Quit: Lost terminal)
2015-08-21 10:20:53	-->	plucas (~plucas@8.18.218.175) has joined #haskell
2015-08-21 10:20:54	agocorona	Gurkenglas:  but I expected something well defined in mathematical terms
2015-08-21 10:20:58	joco42__	bennofs: I am trying this way http://stackoverflow.com/questions/15931331/how-to-install-the-python-development-headers-on-mac-os-x
2015-08-21 10:21:02	agocorona	in CS terms
2015-08-21 10:21:21	<--	IrishPrime (~IrishPrim@74.202.224.66) has quit (Quit: Leaving)
2015-08-21 10:21:35	agocorona	because people are talking all the time about composability without a precise definition
2015-08-21 10:21:41	-->	dm3 (~dm3@78.60.230.119) has joined #haskell
2015-08-21 10:21:42	<--	caconym (~caconym@unaffiliated/caconym) has quit (Ping timeout: 265 seconds)
2015-08-21 10:22:03	hodapp	agocorona: I'd like to have a good working definition too...
2015-08-21 10:22:16	hodapp	I have only a sort of vague mental sense of what it means to say that two things can be composed
2015-08-21 10:22:17	<--	mkusher (~mkusher@93.170.184.174) has quit (Quit: Konversation terminated!)
2015-08-21 10:22:23	<--	rgrinberg (~rgrinberg@66.49.184.39) has quit (Ping timeout: 256 seconds)
2015-08-21 10:22:31	agocorona	I think that two elements are composable if there are part of an algebra
2015-08-21 10:22:39	agocorona	if they are part of
2015-08-21 10:22:43	 *	hackagebot dependent-sum 0.3.1.0 - Dependent sum type  https://hackage.haskell.org/package/dependent-sum-0.3.1.0 (JamesCook)
2015-08-21 10:23:06	<--	cbaatz (~cb@46-127-141-225.dynamic.hispeed.ch) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-08-21 10:23:10	-->	chaosmasttter (~chaosmast@p4FC56064.dip0.t-ipconnect.de) has joined #haskell
2015-08-21 10:23:40	-->	AJAr (~AJAr@pool-108-39-242-24.pitbpa.fios.verizon.net) has joined #haskell
2015-08-21 10:24:02	<--	chaosmasttter (~chaosmast@p4FC56064.dip0.t-ipconnect.de) has quit (Client Quit)
2015-08-21 10:24:04	-->	rgrinberg (~rgrinberg@66.49.184.39) has joined #haskell
2015-08-21 10:24:09	-->	mkusher (~mkusher@93.170.184.174) has joined #haskell
2015-08-21 10:24:12	hodapp	agocorona: what algebra they are a part of might matter for practical reasons
2015-08-21 10:24:52	Gurkenglas	agocorona: Two functions are composable if the target space of one is the origin space of the other. Are you familiar with category theory? It explores composition on more than functions
2015-08-21 10:24:54	-->	ansible1 (~kvirc@c-73-217-98-159.hsd1.co.comcast.net) has joined #haskell
2015-08-21 10:25:25	agocorona	Gurkenglas:  the function composition operator . is part of an algebra
2015-08-21 10:25:45	-->	IrishPrime (~IrishPrim@74.202.224.66) has joined #haskell
2015-08-21 10:25:46	<--	hmrm (~hmrm@198.244.104.109) has quit (Ping timeout: 250 seconds)
2015-08-21 10:25:47	<--	xinming (~xinming@125.86.86.68) has quit (Ping timeout: 244 seconds)
2015-08-21 10:25:55	-->	rfmind (~ruslan@250.105-64-87.adsl-dyn.isp.belgacom.be) has joined #haskell
2015-08-21 10:26:05	-->	poincare101 (~dhaivat@cpe-174-103-231-209.new.res.rr.com) has joined #haskell
2015-08-21 10:26:13	-->	jellie (~luv_panda@unaffiliated/zipper) has joined #haskell
2015-08-21 10:26:29	<--	pt1 (~pt1@c-89-160-58-119.cust.bredband2.com) has quit (Remote host closed the connection)
2015-08-21 10:26:35	--	zipper is now known as Guest41417
2015-08-21 10:26:50	--	jellie is now known as zipper
2015-08-21 10:27:06	<--	gfixler (~gfixler@cpe-108-185-238-241.socal.res.rr.com) has quit (Quit: WeeChat 1.0.1)
2015-08-21 10:27:49	-->	xinming (~xinming@222.180.235.147) has joined #haskell
2015-08-21 10:29:06	<--	Guest41417 (~luv_panda@unaffiliated/zipper) has quit (Ping timeout: 260 seconds)
2015-08-21 10:29:10	-->	jp_rider (~Adium@2601:152:4103:4410:b535:a908:cabc:355c) has joined #haskell
2015-08-21 10:29:22	agocorona	numbers combine because there is an algebra defined.
2015-08-21 10:29:29	<--	r6ku (~r6ku@ddj45ryjpcng6m1jjzp6y-3.rev.dnainternet.fi) has left #haskell
2015-08-21 10:29:55	-->	rasen (~rasen@193.239.74.126) has joined #haskell
2015-08-21 10:30:03	-->	georgesebastian (~georgeseb@unaffiliated/georgesebastian) has joined #haskell
2015-08-21 10:30:20	<--	rasen (~rasen@193.239.74.126) has quit (Client Quit)
2015-08-21 10:30:22	agocorona	and i suppose that function composition, monadic appllicative etc combinators are part of a non commutative algebra
2015-08-21 10:30:33	<--	obb (~user@HSI-KBW-085-216-105-176.hsi.kabelbw.de) has quit (Quit: Leaving)
2015-08-21 10:31:03	<--	javjarfer (~javjarfer@9.Red-83-54-168.dynamicIP.rima-tde.net) has quit (Quit: Leaving)
2015-08-21 10:31:07	-->	osa1 (~omer@ip-64-134-175-210.public.wayport.net) has joined #haskell
2015-08-21 10:31:15	-->	rossm (~rossm@host-92-26-123-212.as13285.net) has joined #haskell
2015-08-21 10:31:25	-->	p0a (ade134da@gateway/web/freenode/ip.173.225.52.218) has joined #haskell
2015-08-21 10:32:04	-->	BlackJackAc3 (~Juup@81.95.5.39) has joined #haskell
2015-08-21 10:32:28	<--	David (~David@unaffiliated/david) has quit (Remote host closed the connection)
2015-08-21 10:32:30	<--	Rainb (~rainb@181.50.148.224) has quit (Ping timeout: 245 seconds)
2015-08-21 10:32:47	<--	jeadre (~jeadre@li1421-113.members.linode.com) has quit (Remote host closed the connection)
2015-08-21 10:33:02	<--	PPpyg2 (~Juup@81.95.5.39) has quit (Read error: Connection reset by peer)
2015-08-21 10:33:07	<--	xinming (~xinming@222.180.235.147) has quit (Ping timeout: 252 seconds)
2015-08-21 10:33:18	<--	L8D (~L8D@cpe-70-123-155-208.austin.res.rr.com) has quit (Ping timeout: 260 seconds)
2015-08-21 10:33:43	-->	foreignFunction (~ai@ip-4761.sunline.net.ua) has joined #haskell
2015-08-21 10:33:50	<--	zipper (~luv_panda@unaffiliated/zipper) has quit (Quit: I want to die but I don't have the courage to kill myself. If you can kill me, contact me. http://bit.ly/1ULMdsp)
2015-08-21 10:33:52	p0a	lpaste down for anyone else?
2015-08-21 10:34:06	-->	xinming (~xinming@219.152.162.244) has joined #haskell
2015-08-21 10:34:08	-->	javjarfer (~javjarfer@9.Red-83-54-168.dynamicIP.rima-tde.net) has joined #haskell
2015-08-21 10:34:13	<--	poincare101 (~dhaivat@cpe-174-103-231-209.new.res.rr.com) has quit (Quit: poincare101)
2015-08-21 10:34:23	-->	petersr (~PeterSR@87-58-53-250-static.dk.customer.tdc.net) has joined #haskell
2015-08-21 10:34:36	p0a	I'm trying to load some code that has 'import Data.List' but I get this error: http://pastie.org/10366803
2015-08-21 10:34:44	p0a	what am I doing wrong?
2015-08-21 10:34:45	-->	jeadre (~jeadre@li1421-113.members.linode.com) has joined #haskell
2015-08-21 10:34:53	-->	Ven (~textual@163.5.245.253) has joined #haskell
2015-08-21 10:35:20	<--	doodlehaus (~doodlehau@h69-128-47-52.mdsnwi.dedicated.static.tds.net) has quit (Remote host closed the connection)
2015-08-21 10:35:23	-->	poincare101 (~dhaivat@cpe-174-103-231-209.new.res.rr.com) has joined #haskell
2015-08-21 10:35:25	hodapp	agocorona: I read https://www.fpcomplete.com/user/agocorona/EDSL-for-hard-working-IT-programmers?show=tutorials months back; what epiphany atop that and related work did you just have?
2015-08-21 10:35:39	geekosaur	p0a, pastebin the code as well
2015-08-21 10:35:41	-->	doelie (~tom@24-176-6-198.dhcp.klmz.mi.charter.com) has joined #haskell
2015-08-21 10:35:46	Ankhers	p0a: Can you show the file, at least from the top to the imports.
2015-08-21 10:35:52	geekosaur	and lpaste just loaded here
2015-08-21 10:35:54	<--	BlackJackAc3 (~Juup@81.95.5.39) has quit (Remote host closed the connection)
2015-08-21 10:36:06	Ankhers	lpaste also working here.
2015-08-21 10:36:30	p0a	It may be caught in a network filter then, here's my code plaintext http://pastie.org/10366814
2015-08-21 10:36:34	hodapp	ummm, 
2015-08-21 10:36:35	doelie	hi.  if  a -> m b  is called a Kleisli arrow, how would you call  a -> b -> m c ?
2015-08-21 10:36:44	hodapp	did anyone catch zipper's quit message?
2015-08-21 10:36:54	Ankhers	p0a: There is nothing above the import?
2015-08-21 10:36:56	p0a	hodapp: hope he's joking
2015-08-21 10:36:59	<--	rfmind (~ruslan@250.105-64-87.adsl-dyn.isp.belgacom.be) has quit (Quit: Lost terminal)
2015-08-21 10:36:59	-->	mkster_ (~mkster@i577B478E.versanet.de) has joined #haskell
2015-08-21 10:37:08	p0a	Ankhers: I snipped that stuff, it wasn't relevant
2015-08-21 10:37:17	geekosaur	um
2015-08-21 10:37:40	-->	obb (~user@HSI-KBW-085-216-105-176.hsi.kabelbw.de) has joined #haskell
2015-08-21 10:37:44	 *	hackagebot dependent-sum 0.3.2.0 - Dependent sum type  https://hackage.haskell.org/package/dependent-sum-0.3.2.0 (JamesCook)
2015-08-21 10:43:41	--	irc: disconnected from server
2015-08-21 10:44:09	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-21 10:44:09	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-21 10:44:09	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-21 10:44:09	--	Channel #haskell: 1505 nicks (1 op, 0 voices, 1504 normals)
2015-08-21 10:44:09	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-21 10:44:09	--	URL for #haskell: http://www.haskell.org/
2015-08-21 10:44:15	-->	X67r (user@gateway/vpn/mullvad/x-icjgyjmtbuknoisb) has joined #haskell
2015-08-21 10:44:16	<--	EunChe (~eunche@221.154.182.251) has quit (Remote host closed the connection)
2015-08-21 10:44:29	-->	Avonis (~Avonis@unaffiliated/avonis) has joined #haskell
2015-08-21 11:52:52	--	irc: disconnected from server
2015-08-21 11:53:16	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-21 11:53:16	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-21 11:53:16	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-21 11:53:17	--	Channel #haskell: 1514 nicks (1 op, 0 voices, 1513 normals)
2015-08-21 11:53:18	--	URL for #haskell: http://www.haskell.org/
2015-08-21 11:53:18	<--	anler (~user@188.87.155.20) has quit (Remote host closed the connection)
2015-08-21 11:53:18	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-21 11:53:31	-->	superturrican_ (~chatzilla@7.53.61.188.dynamic.wline.res.cust.swisscom.ch) has joined #haskell
2015-08-21 11:59:30	-->	Durz0 (~Durz0@ip4d1568cd.dynamic.kabel-deutschland.de) has joined #haskell
2015-08-21 11:59:30	-->	thkoch (~thkoch@141.70.75.163) has joined #haskell
2015-08-21 11:59:30	<--	takle (~takle@188.228.85.218) has quit (Remote host closed the connection)
2015-08-21 11:59:30	-->	rcosta (~rcosta@217.38.105.114) has joined #haskell
2015-08-21 11:59:30	<--	superturrican (~chatzilla@7.53.61.188.dynamic.wline.res.cust.swisscom.ch) has quit (Ping timeout: 244 seconds)
2015-08-21 11:59:30	--	superturrican_ is now known as superturrican
2015-08-21 11:59:30	<--	biglama (~Day_dream@fon75-2-78-192-179-102.fbxo.proxad.net) has quit (Remote host closed the connection)
2015-08-21 11:59:30	<--	poincare101 (~dhaivat@cpe-174-103-231-209.new.res.rr.com) has quit (Quit: poincare101)
2015-08-21 11:59:30	-->	nikki93 (~nikki93@c-73-170-253-64.hsd1.ca.comcast.net) has joined #haskell
2015-08-21 11:59:30	-->	doelie (~tom@24-176-6-198.dhcp.klmz.mi.charter.com) has joined #haskell
2015-08-21 11:59:30	-->	takle (~takle@188.228.85.218) has joined #haskell
2015-08-21 11:59:30	<--	rfmind (~ruslan@250.105-64-87.adsl-dyn.isp.belgacom.be) has quit (Client Quit)
2015-08-21 11:59:30	<--	doelie (~tom@24-176-6-198.dhcp.klmz.mi.charter.com) has quit (Client Quit)
2015-08-21 11:59:30	<--	darenthis (~darenthis@cpc76742-dals23-2-0-cust353.20-2.cable.virginm.net) has quit (Remote host closed the connection)
2015-08-21 11:59:30	<--	conal (~textual@104.255.240.10) has quit (Quit: Computer has gone to sleep.)
2015-08-21 11:59:30	<--	NeverDie (~NeverDie@cpe-184-152-22-98.nyc.res.rr.com) has quit (Quit: I'm off to sleep. ZZZzzz…)
2015-08-21 11:59:30	-->	conal (~textual@104.255.240.10) has joined #haskell
2015-08-21 11:59:30	<--	fabianvf (~fabianvf@216.30.185.217) has quit (Remote host closed the connection)
2015-08-21 11:59:30	tulcod	is reflex considered "state of the art" when it comes to FRP?
2015-08-21 11:59:30	-->	rfmind (~ruslan@250.105-64-87.adsl-dyn.isp.belgacom.be) has joined #haskell
2015-08-21 11:59:30	Gurkenglas	@define data UnaryType a = a :- a -- Welkin
2015-08-21 11:59:30	lambdabot	 .L.hs:152:20:
2015-08-21 11:59:30	lambdabot	     Multiple declarations of ‘:-’
2015-08-21 11:59:30	lambdabot	     Declared at: .L.hs:150:26
2015-08-21 11:59:31	-->	poincare101 (~dhaivat@cpe-174-103-231-209.new.res.rr.com) has joined #haskell
2015-08-21 11:59:31	-->	jinblack (~jinblack@128.111.48.6) has joined #haskell
2015-08-21 11:59:31	Gurkenglas	Oops, that's cause I testwisely defined UnaryTypeasdasd to that.
2015-08-21 11:59:31	<--	emanuelz (~emanuel@fsf/member/emanuelz) has quit (Quit: emanuelz)
2015-08-21 11:59:31	<--	broma0 (~androirc@ool-182e260d.dyn.optonline.net) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2015-08-21 11:59:31	-->	cognominal (~cognomina@87-231-91-9.rev.numericable.fr) has joined #haskell
2015-08-21 11:59:31	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-21 11:59:31	<--	nikki93 (~nikki93@c-73-170-253-64.hsd1.ca.comcast.net) has quit (Ping timeout: 255 seconds)
2015-08-21 11:59:39	<--	irrequietus (~irqus@unaffiliated/irrequietus) has quit (Ping timeout: 260 seconds)
2015-08-21 12:00:06	<--	teclo- (42@unaffiliated/teclo) has quit (Ping timeout: 240 seconds)
2015-08-21 12:00:06	<--	cow_2001 (~un@unaffiliated/wabisabi) has quit (Remote host closed the connection)
2015-08-21 12:00:27	<--	joco42__ (~joco42@dsl-hkibrasgw4-58c03a-80.dhcp.inet.fi) has quit (Remote host closed the connection)
2015-08-21 12:00:40	-->	teclo- (42@unaffiliated/teclo) has joined #haskell
2015-08-21 12:02:50	<--	Laserbear (~Laserbear@c-73-223-160-142.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2015-08-21 12:02:50	-->	siwica (~user@193.197.86.27) has joined #haskell
2015-08-21 12:02:50	-->	joco42__ (~joco42@dsl-hkibrasgw4-58c03a-80.dhcp.inet.fi) has joined #haskell
2015-08-21 12:02:50	siwica	How do I find out the type signature of the <- Operator?
2015-08-21 12:02:50	Gurkenglas	:k (<-)
2015-08-21 12:02:50	lambdabot	    parse error on input ‘<-’
2015-08-21 12:02:50	lambdabot	    Perhaps this statement should be within a 'do' block?
2015-08-21 12:02:50	<--	asciiascetic (~user@2602:304:cc19:5e0:d467:2531:d42b:c363) has quit (Ping timeout: 246 seconds)
2015-08-21 12:02:50	tulcod	siwica: <- isn't really an operator, I think. it's just part of the "do" syntax that we use for monads
2015-08-21 12:02:50	Gurkenglas	:k (->) -- Wait, I thought you meant this.
2015-08-21 12:02:50	lambdabot	* -> * -> *
2015-08-21 12:02:54	<--	kmels (~kmels@186.64.110.122) has quit (Ping timeout: 244 seconds)
2015-08-21 12:03:13	siwica	No, the other direction ,)
2015-08-21 12:03:15	tulcod	siwica: in the end it is all translated to complicated compositions of (>>=) and 'return'
2015-08-21 12:03:50	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Ping timeout: 240 seconds)
2015-08-21 12:03:57	-->	Tinchos- (martin@gateway/shell/openshells.net/x-fznrtlhhtmpyffte) has joined #haskell
2015-08-21 12:03:58	siwica	tulcod: Yes, I just wanted to find out how this is done precisely and thought <- was a well defined operator
2015-08-21 12:03:59	-->	MasterPiece (~MasterPie@unaffiliated/masterpiece) has joined #haskell
2015-08-21 12:04:14	<--	SubZeroFX (~SubZeroFX@unaffiliated/subzerofx) has quit (Quit: Leaving)
2015-08-21 12:04:22	<--	rfmind (~ruslan@250.105-64-87.adsl-dyn.isp.belgacom.be) has quit (Quit: Lost terminal)
2015-08-21 12:04:31	<--	vlatkoB (~IRC_clien@unaffiliated/vlatkob) has quit (Remote host closed the connection)
2015-08-21 12:04:51	<--	BlackJackAc3 (~Juup@81.95.5.39) has quit (Remote host closed the connection)
2015-08-21 12:05:16	tulcod	siwica: http://lpaste.net/139371
2015-08-21 12:05:23	-->	BlackJackAc3 (~Juup@81.95.5.39) has joined #haskell
2015-08-21 12:05:41	-->	Laserbear (~Laserbear@c-73-223-160-142.hsd1.ca.comcast.net) has joined #haskell
2015-08-21 12:05:50	tulcod	probably a few things not quite right there. but that's the gist of it.
2015-08-21 12:06:15	<--	adek (~adek@199.201.64.2) has quit (Ping timeout: 255 seconds)
2015-08-21 12:06:36	siwica	tulcod: oh ok, thank you!
2015-08-21 12:06:56	-->	twanvl (~twanvl@dhcp-077-250-086-217.chello.nl) has joined #haskell
2015-08-21 12:07:09	<--	takle (~takle@188.228.85.218) has quit (Remote host closed the connection)
2015-08-21 12:07:14	<--	teclo- (42@unaffiliated/teclo) has quit (Ping timeout: 272 seconds)
2015-08-21 12:07:19	ahihi	https://en.wikibooks.org/wiki/Haskell/do_notation
2015-08-21 12:07:50	tulcod	siwica: ghc first "desugars" haskell into "core"
2015-08-21 12:07:53	-->	jo__ (uid41683@gateway/web/irccloud.com/x-bddyouhkgrqpkqic) has joined #haskell
2015-08-21 12:07:59	<--	pleax (~user@77.88.2.214-spb.dhcp.yndx.net) has quit (Ping timeout: 246 seconds)
2015-08-21 12:08:08	tulcod	siwica: maybe you should try compiling a few programs into that
2015-08-21 12:08:15	-->	teclo- (42@unaffiliated/teclo) has joined #haskell
2015-08-21 12:08:21	<--	lodin_ (~lodin@c-31-209-2-44.cust.bredband2.com) has quit (Ping timeout: 256 seconds)
2015-08-21 12:08:37	<--	BlackJackAc3 (~Juup@81.95.5.39) has quit (Remote host closed the connection)
2015-08-21 12:08:46	tulcod	nevermind that. seems ghc cannot do that.
2015-08-21 12:08:51	siwica	tulcod: Do you know how to just remove the sugar using ghc?
2015-08-21 12:08:58	siwica	oh ok
2015-08-21 12:09:10	siwica	Would be instructive though
2015-08-21 12:09:15	<--	conal (~textual@104.255.240.10) has quit (Quit: Computer has gone to sleep.)
2015-08-21 12:09:15	<--	cita (~cita@unaffiliated/cita) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-08-21 12:09:33	-->	takle (~takle@2a00:fd00:fff1:5768:c93e:e6cf:f6df:2a09) has joined #haskell
2015-08-21 12:09:48	-->	prsteele (~prsteele@en-or-aprs233-b.orie.cornell.edu) has joined #haskell
2015-08-21 12:10:01	-->	reubensammut (~reubensam@c23-14.i05-6.onvol.net) has joined #haskell
2015-08-21 12:10:05	Hijiri	lambdabot has @undo
2015-08-21 12:10:14	siwica	But there should me a tool for unsugaring (saltening?!) I guess
2015-08-21 12:10:29	<--	sigma914 (~sigma@host86-135-77-130.range86-135.btcentralplus.com) has quit (Remote host closed the connection)
2015-08-21 12:10:49	-->	gothicsouth (~gothicsou@cpe-76-177-66-223.natcky.res.rr.com) has joined #haskell
2015-08-21 12:10:56	<--	avocado (~avocado@unaffiliated/avocado) has quit (Quit: WeeChat 1.0.1)
2015-08-21 12:11:07	tulcod	siwica: http://www.scs.stanford.edu/11au-cs240h/notes/ghc-slides.html
2015-08-21 12:11:09	Ankhers	siwica: I would go with sugaring. Salting is already a fairly defined term in cryptography.
2015-08-21 12:11:21	Welkin	`a <- as` is the same as `as >>= \a -> ...`
2015-08-21 12:11:31	-->	fujimura (~fujimura@ngn1-ppp1259.tokyo.sannet.ne.jp) has joined #haskell
2015-08-21 12:12:27	siwica	The link speaks of going to vanilla haskell
2015-08-21 12:12:30	-->	conal (~textual@104.255.240.10) has joined #haskell
2015-08-21 12:12:43	-->	nycs (~nycs@gw.hq.meetup.com) has joined #haskell
2015-08-21 12:12:44	-->	avocado (~avocado@unaffiliated/avocado) has joined #haskell
2015-08-21 12:12:46	tulcod	siwica: (hence the name "desugaring"?)
2015-08-21 12:12:52	-->	pavonia (~user@dslb-094-222-228-165.094.222.pools.vodafone-ip.de) has joined #haskell
2015-08-21 12:13:04	-->	irrequietus (~irqus@unaffiliated/irrequietus) has joined #haskell
2015-08-21 12:13:06	-->	chreekat (~b@unaffiliated/chreekat) has joined #haskell
2015-08-21 12:13:08	<--	fujimura (~fujimura@ngn1-ppp1259.tokyo.sannet.ne.jp) has quit (Remote host closed the connection)
2015-08-21 12:13:09	siwica	maybe one could turn that into a verb
2015-08-21 12:13:09	siwica	vannilaing?
2015-08-21 12:13:29	siwica	yeah, desugaring is fine, thought there had to be something more creative ;)
2015-08-21 12:13:32	tulcod	"english cooking", ie removing all taste?
2015-08-21 12:13:33	-->	rhovland (~chatzilla@71.198.74.82) has joined #haskell
2015-08-21 12:13:36	siwica	thanks for the links!
2015-08-21 12:13:42	-->	codepete (~codepete@47.sub-70-199-169.myvzw.com) has joined #haskell
2015-08-21 12:13:53	siwica	but vanilla still has taste right?
2015-08-21 12:13:59	tulcod	hmm
2015-08-21 12:14:10	<--	`^_^v (~nycs@gw.hq.meetup.com) has quit (Ping timeout: 245 seconds)
2015-08-21 12:14:11	johnw	I think "desugaring", in many contexts, is fermentation
2015-08-21 12:14:19	-->	sepp2k (~Sepp2k@x55b3e8c4.dyn.telefonica.de) has joined #haskell
2015-08-21 12:14:22	tulcod	nice one
2015-08-21 12:15:45	-->	oish (~charlie@159.22.169.217.in-addr.arpa) has joined #haskell
2015-08-21 12:16:07	geekosaur	"austere"?
2015-08-21 12:16:14	-->	glguy (~glguy@haskell/developer/glguy) has joined #haskell
2015-08-21 12:16:15	tulcod	johnw: "fermenting" also suggests that the value is improved, but it might not be good for everyone
2015-08-21 12:16:20	geekosaur	not that it's very austere
2015-08-21 12:16:21	-->	mea-culp` (~user@95.73.212.112) has joined #haskell
2015-08-21 12:16:39	geekosaur	but more so than the version with do, if then else, where, ...
2015-08-21 12:16:53	-->	rohansumant (~rohansuma@116.75.145.2) has joined #haskell
2015-08-21 12:17:21	siwica	somebody should dedicate a paper to this question!
2015-08-21 12:17:24	-->	zcourts (~zcourts@cpc5-croy18-2-0-cust555.croy.cable.virginm.net) has joined #haskell
2015-08-21 12:17:35	-->	tmtwd (~tmtwd@38.122.185.194) has joined #haskell
2015-08-21 12:17:40	Ankhers	tulcod: ferment can actually have a negative connotation to it.
2015-08-21 12:17:43	rohansumant	> map id [1..5]
2015-08-21 12:17:45	-->	BlackJackAc3 (~Juup@81.95.5.39) has joined #haskell
2015-08-21 12:17:45	lambdabot	 [1,2,3,4,5]
2015-08-21 12:18:02	-->	takle_ (~takle@188.228.85.218) has joined #haskell
2015-08-21 12:18:18	rohansumant	map id [3]
2015-08-21 12:18:23	<--	takle_ (~takle@188.228.85.218) has quit (Remote host closed the connection)
2015-08-21 12:18:28	<--	reubensammut (~reubensam@c23-14.i05-6.onvol.net) has quit (Quit: reubensammut)
2015-08-21 12:18:33	--	mea-culp` is now known as mea-culpa`
2015-08-21 12:18:38	<--	mea-culpa (~user@95.72.147.43) has quit (Ping timeout: 272 seconds)
2015-08-21 12:18:48	Ankhers	You forgot the `>'
2015-08-21 12:19:05	rohansumant	Indeed!
2015-08-21 12:19:15	<--	rohansumant (~rohansuma@116.75.145.2) has quit (Read error: Connection reset by peer)
2015-08-21 12:19:43	-->	ralu (~ralu@188-230-233-174.dynamic.t-2.net) has joined #haskell
2015-08-21 12:26:01	--	irc: disconnected from server
2015-08-21 12:26:25	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-21 12:26:25	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-21 12:26:25	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-21 12:26:25	--	Channel #haskell: 1518 nicks (1 op, 0 voices, 1517 normals)
2015-08-21 12:26:25	--	URL for #haskell: http://www.haskell.org/
2015-08-21 12:26:26	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-21 12:26:28	glguy	knupfer: Try to use methods from Foldable to implement a generic scanr
2015-08-21 13:26:49	--	irc: disconnected from server
2015-08-21 13:27:14	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-21 13:27:14	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-21 13:27:14	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-21 13:27:15	--	Channel #haskell: 1499 nicks (1 op, 0 voices, 1498 normals)
2015-08-21 13:27:15	--	URL for #haskell: http://www.haskell.org/
2015-08-21 13:27:15	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-21 13:27:20	-->	poincare101 (~dhaivat@cpe-174-103-231-209.new.res.rr.com) has joined #haskell
2015-08-21 14:27:57	--	irc: disconnected from server
2015-08-21 14:28:25	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-21 14:28:25	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-21 14:28:25	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-21 14:28:25	--	Channel #haskell: 1494 nicks (1 op, 0 voices, 1493 normals)
2015-08-21 14:28:25	--	URL for #haskell: http://www.haskell.org/
2015-08-21 14:28:25	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-21 14:37:09	--	irc: disconnected from server
2015-08-21 14:37:36	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-21 14:37:36	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-21 14:37:36	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-21 14:37:36	--	Channel #haskell: 1498 nicks (1 op, 0 voices, 1497 normals)
2015-08-21 14:37:36	--	URL for #haskell: http://www.haskell.org/
2015-08-21 14:37:36	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-21 14:37:48	-->	yzq (~yzq@113.81.230.64) has joined #haskell
2015-08-21 14:37:57	 *	hackagebot dtab 1.0.0.1 - Harmonix (Guitar Hero, Rock Band) DTA/DTB metadata library  https://hackage.haskell.org/package/dtab-1.0.0.1 (mtolly)
2015-08-21 14:38:33	--	irc: disconnected from server
2015-08-21 14:39:00	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-21 14:39:00	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-21 14:39:00	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-21 14:39:01	--	Channel #haskell: 1501 nicks (1 op, 0 voices, 1500 normals)
2015-08-21 14:39:01	--	URL for #haskell: http://www.haskell.org/
2015-08-21 14:39:01	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-21 14:39:09	<--	Rainb (~rainb@181.50.148.224) has quit (Ping timeout: 252 seconds)
2015-08-21 14:39:11	<--	blackbart (~sv@ool-3f8fe2b3.dyn.optonline.net) has quit (Ping timeout: 246 seconds)
2015-08-21 14:39:38	--	irc: disconnected from server
2015-08-21 14:40:05	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-21 14:40:05	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-21 14:40:05	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-21 14:40:06	--	Channel #haskell: 1497 nicks (1 op, 0 voices, 1496 normals)
2015-08-21 14:40:06	--	URL for #haskell: http://www.haskell.org/
2015-08-21 14:40:06	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-21 14:40:39	-->	dgpratt (~dpratt71@pool-72-65-102-32.ptldme.east.myfairpoint.net) has joined #haskell
2015-08-21 14:41:13	-->	blackbart (~sv@ool-3f8fe2b3.dyn.optonline.net) has joined #haskell
2015-08-21 14:41:21	<--	conal (~textual@104.255.240.10) has quit (Quit: Computer has gone to sleep.)
2015-08-21 14:41:50	<--	yzq (~yzq@113.81.230.64) has quit (Ping timeout: 240 seconds)
2015-08-21 14:42:22	-->	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has joined #haskell
2015-08-21 14:42:33	-->	conal (~textual@104.255.240.10) has joined #haskell
2015-08-21 14:42:34	<--	juanpaucar (~juanpauca@181.39.194.178) has quit (Remote host closed the connection)
2015-08-21 14:42:58	 *	hackagebot conduit-audio 0.2 - Combinators to efficiently slice and dice audio streams  https://hackage.haskell.org/package/conduit-audio-0.2 (mtolly)
2015-08-21 15:00:59	--	irc: disconnected from server
2015-08-21 15:13:59	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-21 15:13:59	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-21 15:13:59	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-21 15:13:59	--	Channel #haskell: 1497 nicks (1 op, 0 voices, 1496 normals)
2015-08-21 15:13:59	--	URL for #haskell: http://www.haskell.org/
2015-08-21 15:13:59	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-21 15:14:00	-->	rodlogic (~rodlogic@71.235.61.168) has joined #haskell
2015-08-21 16:01:00	--	irc: disconnected from server
2015-08-21 16:01:25	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-21 16:01:25	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-21 16:01:25	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-21 16:01:25	--	Channel #haskell: 1465 nicks (1 op, 0 voices, 1464 normals)
2015-08-21 16:01:25	--	URL for #haskell: http://www.haskell.org/
2015-08-21 16:01:25	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-21 17:01:49	--	irc: disconnected from server
2015-08-21 17:02:15	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-21 17:02:16	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-21 17:02:16	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-21 17:02:16	--	Channel #haskell: 1444 nicks (1 op, 0 voices, 1443 normals)
2015-08-21 17:02:16	--	URL for #haskell: http://www.haskell.org/
2015-08-21 17:02:16	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-21 17:02:22	<--	viszu (~viszu@89-70-53-243.dynamic.chello.pl) has quit (Client Quit)
2015-08-21 17:02:32	-->	sdothum (~sdothum@108.63.182.82) has joined #haskell
2015-08-21 17:02:39	-->	jp_rider (~Adium@2601:152:4103:4410:b411:639f:ed78:d2cc) has joined #haskell
2015-08-21 17:17:43	--	irc: disconnected from server
2015-08-21 19:49:51	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-21 19:49:51	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-21 19:49:51	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-21 19:49:51	--	Channel #haskell: 1430 nicks (1 op, 0 voices, 1429 normals)
2015-08-21 19:49:51	--	URL for #haskell: http://www.haskell.org/
2015-08-21 19:49:51	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-21 20:50:06	--	irc: disconnected from server
2015-08-21 20:50:30	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-21 20:50:30	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-21 20:50:30	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-21 20:50:31	--	Channel #haskell: 1431 nicks (1 op, 0 voices, 1430 normals)
2015-08-21 20:50:31	--	URL for #haskell: http://www.haskell.org/
2015-08-21 20:50:31	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-21 20:50:37	shachaf	IP bans don't work against determined people.
2015-08-21 20:50:43	shachaf	Neither does any other kind of ban, really.
2015-08-21 23:04:37	--	irc: disconnected from server
2015-08-21 23:04:55	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:15d3:f641:d339:61ee) has joined #haskell
2015-08-21 23:04:55	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-21 23:04:55	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-21 23:04:55	--	Channel #haskell: 1421 nicks (1 op, 0 voices, 1420 normals)
2015-08-21 23:04:55	--	URL for #haskell: http://www.haskell.org/
2015-08-21 23:04:55	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-21 23:06:16	<--	DanielDiaz (~smuxi@70.Red-80-24-244.staticIP.rima-tde.net) has quit (Read error: Connection reset by peer)
2015-08-21 23:06:31	-->	DanielDiaz (~smuxi@70.Red-80-24-244.staticIP.rima-tde.net) has joined #haskell
2015-08-21 23:06:33	-->	jp_rider (~Adium@c-73-134-205-106.hsd1.md.comcast.net) has joined #haskell
2015-08-21 23:06:45	<--	Literphor (~alfred@209.237.92.139) has quit (Quit: Literphor)
2015-08-21 23:08:06	<--	brunoalano (~brunoalan@200.138.80.211) has quit (Ping timeout: 240 seconds)
2015-08-21 23:08:13	-->	brunoala_ (~brunoalan@201-89-215-161.ctaje701.dsl.brasiltelecom.net.br) has joined #haskell
2015-08-21 23:08:51	<--	glguy (~glguy@haskell/developer/glguy) has quit (Ping timeout: 260 seconds)
2015-08-21 23:08:54	-->	Zekka (~zekka@ip24-251-69-145.ph.ph.cox.net) has joined #haskell
2015-08-21 23:09:23	-->	mizu_no_oto (~textual@c-73-219-2-228.hsd1.ma.comcast.net) has joined #haskell
2015-08-21 23:10:06	-->	rejuvyesh1 (~rejuvyesh@unaffiliated/rejuvyesh) has joined #haskell
2015-08-21 23:11:26	rhovland	ever since I updated things, using {-# OPTIONS_GHC -O2 #-} at the top of my files makes me get a panic when I load the file in ghci.. is it just me? should I not be using that?
2015-08-21 23:12:08	<--	melter (~Melter@dyn182.morrill-116.ndsu.NoDak.edu) has quit (Remote host closed the connection)
2015-08-21 23:13:10	-->	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has joined #haskell
2015-08-21 23:14:10	-->	Ayey_ (~rune@0135301590.0.fullrate.dk) has joined #haskell
2015-08-21 23:14:57	<--	thedodd (~thedodd@2602:306:b817:a2b0:c840:5ed5:5d5:4abb) has quit (Remote host closed the connection)
2015-08-22 09:01:02	--	irc: disconnected from server
2015-08-22 09:01:25	-->	RouxTheDay (~RouxTheDa@199.21.87.214) has joined #haskell
2015-08-22 09:01:25	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-22 09:01:25	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-22 09:01:25	--	Channel #haskell: 1477 nicks (1 op, 0 voices, 1476 normals)
2015-08-22 09:01:25	--	URL for #haskell: http://www.haskell.org/
2015-08-22 09:01:26	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-22 09:01:30	-->	Hugehead (~Hugehead@184.101.31.115) has joined #haskell
2015-08-22 09:03:15	-->	thkoch (~thkoch@client-nat.dc15.debconf.org) has joined #haskell
2015-08-22 09:03:21	RageYL	can anyone help me with the signature of this function: filterNull = filter (not . null)
2015-08-22 09:03:33	<--	armyriad (~armyriad@184.75.214.163) has quit (Ping timeout: 255 seconds)
2015-08-22 09:03:37	RageYL	for me it should be something like (Iterable a) => a -> a
2015-08-22 09:03:50	liste	there's no Iterable
2015-08-22 09:03:55	Gurkenglas	:t filter
2015-08-22 09:03:57	lambdabot	(a -> Bool) -> [a] -> [a]
2015-08-22 09:04:06	RageYL	in ghci it say something about foldable
2015-08-22 09:04:15	RageYL	but i can't make it works
2015-08-22 09:04:20	liste	:t null
2015-08-22 09:04:22	lambdabot	Foldable t => t a -> Bool
2015-08-22 09:04:35	liste	lists are Foldable
2015-08-22 09:04:35	-->	Meow-J (uid69628@gateway/web/irccloud.com/x-joaabuadexbjcyxr) has joined #haskell
2015-08-22 09:04:44	mniip	is there some sort of comonoid class
2015-08-22 09:04:57	liste	mniip it's useless in Haskell
2015-08-22 09:05:03	mniip	it is
2015-08-22 09:05:15	liste	a -> () and a -> (a, a)
2015-08-22 09:05:19	mniip	no
2015-08-22 09:05:22	mniip	not that
2015-08-22 09:05:33	mniip	I mean a typeclass identical to Monoid
2015-08-22 09:05:38	<--	rgrinberg1 (~rgrinberg@66.49.184.39) has quit (Ping timeout: 244 seconds)
2015-08-22 09:05:40	mniip	but co- in some way
2015-08-22 09:05:41	<--	zipper (~luv_panda@unaffiliated/zipper) has quit (Ping timeout: 250 seconds)
2015-08-22 09:05:44	liste	it is
2015-08-22 09:05:49	-->	zxq9 (~ceverett@FL1-119-244-160-115.okn.mesh.ad.jp) has joined #haskell
2015-08-22 09:06:07	<--	pine1234 (~pine@94.6.186.217) has quit (Ping timeout: 250 seconds)
2015-08-22 09:06:09	liste	just flip the arrows
2015-08-22 09:06:19	mniip	I mean I have some generic structure
2015-08-22 09:06:25	mniip	a `mappend` b `mappend` c
2015-08-22 09:06:29	liste	you need some uncurrying tho
2015-08-22 09:06:48	mniip	now I want to extend it to a different kind of mappend
2015-08-22 09:07:04	mniip	a `mappend` (b `comappend` b' `comappend` b'') `mappend` c
2015-08-22 09:07:07	<--	LonZealot (~IceChat9@p5B2BE9EF.dip0.t-ipconnect.de) has quit (Ping timeout: 265 seconds)
2015-08-22 09:07:13	mniip	if that makes sense
2015-08-22 09:07:15	<--	catgocat (5d6649e4@gateway/web/freenode/ip.93.102.73.228) has quit (Ping timeout: 246 seconds)
2015-08-22 09:07:37	-->	tromp (~tromp@ool-18be0bd8.dyn.optonline.net) has joined #haskell
2015-08-22 09:07:54	-->	AaronFriel (~AaronFrie@67.212.119.147) has joined #haskell
2015-08-22 09:07:57	-->	L8D (~L8D@cpe-70-123-155-208.austin.res.rr.com) has joined #haskell
2015-08-22 09:07:58	<--	chris2 (~chris@vuxu.org) has quit (Ping timeout: 252 seconds)
2015-08-22 09:08:39	-->	EunChe (~eunche@221.154.182.251) has joined #haskell
2015-08-22 09:09:15	Gurkenglas	How did you come to want that?
2015-08-22 09:09:30	liste	do you want a typeclass with two binary operators?
2015-08-22 09:09:35	mniip	yes
2015-08-22 09:09:42	mniip	preferably one that builds on top of Monoid
2015-08-22 09:10:44	-->	rrbm238 (~rrbm823@97-106-138-233.res.bhn.net) has joined #haskell
2015-08-22 09:11:01	mniip	Gurkenglas, think about Writer
2015-08-22 09:11:06	<--	HarveyPwca (~HarveyPwc@50-196-205-130-static.hfc.comcastbusiness.net) has quit (Ping timeout: 240 seconds)
2015-08-22 09:11:11	-->	andjjj23 (~irc@ic.andj.net) has joined #haskell
2015-08-22 09:11:38	liste	seminearring?
2015-08-22 09:11:59	<--	justintv90 (~justin@42.113.159.124) has quit (Remote host closed the connection)
2015-08-22 09:12:02	-->	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-22 09:12:30	mniip	instance Applicative ((,) w) where pure x = (x, ???); (f, x) <*> (k, y) = (f k, x ??? y)
2015-08-22 09:12:31	-->	ndrei (~avo@37.161.49.21) has joined #haskell
2015-08-22 09:12:33	-->	georgesebastian (~georgeseb@unaffiliated/georgesebastian) has joined #haskell
2015-08-22 09:12:47	mniip	the first ??? is some identity element, and the second ??? is an associative operation
2015-08-22 09:12:54	kqr	if I'm writing code inside an "EitherT [String] IO a", how can I append to the strings that already exist in the Left value?
2015-08-22 09:12:58	mniip	Monoid comes to mind, so you slap a Monoid w => on that
2015-08-22 09:13:06	kqr	uh
2015-08-22 09:13:07	-->	Myrl (~myrl@unaffiliated/myrl) has joined #haskell
2015-08-22 09:13:10	kqr	let me formulate myself more clearly
2015-08-22 09:13:14	mniip	through similar reasoning I deduced a need for a second operation
2015-08-22 09:13:19	kqr	I want to add a string to the list of Left strings
2015-08-22 09:13:20	Gurkenglas	(Your pairs are flipped, but go on)
2015-08-22 09:13:36	kqr	with the "left" function from either I can simply overwrite that list, which is not what I want
2015-08-22 09:13:36	Myrl	mniip: How the hell do you survive with Gentoo + Haskell
2015-08-22 09:13:45	mniip	what's the issue
2015-08-22 09:13:53	Myrl	mniip: Everything's the issue.
2015-08-22 09:13:57	Myrl	mniip: Outdated packages, etc. etc.
2015-08-22 09:14:06	 *	hackagebot streaming 0.1.0.7 - A free monad transformer optimized for streaming applications.  https://hackage.haskell.org/package/streaming-0.1.0.7 (MichaelThompson)
2015-08-22 09:14:22	Myrl	mniip: I decided to just nuke my Haskell environment and downloaded stack.
2015-08-22 09:14:26	<--	sqram (~resio@c-50-128-219-252.hsd1.fl.comcast.net) has quit (Ping timeout: 246 seconds)
2015-08-22 09:14:35	Gurkenglas	kqr, ordinarily any Left value ends the whole calculation, there is no point at which to add further Strings. If you want to continue the computation afterwards, use WriterT
2015-08-22 09:14:38	mniip	I have 2 ghcs
2015-08-22 09:14:47	mniip	one from portage, one from git
2015-08-22 09:14:51	<--	rrbm823 (~rrbm823@97-106-138-233.res.bhn.net) has quit (Ping timeout: 265 seconds)
2015-08-22 09:14:54	-->	armyriad (~armyriad@184.75.214.163) has joined #haskell
2015-08-22 09:15:15	<--	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 255 seconds)
2015-08-22 09:15:31	kqr	Gurkenglas, haha, yeah, that's what I'd expect too. heist keeps surprising me
2015-08-22 09:16:07	kqr	Gurkenglas, the default (perhaps only?) monad you do your stuff in there is the EitherT [String] IO a monad, and it seems as though it collects errors in the [String], with one string per error
2015-08-22 09:16:12	<--	EvilMachine (~evi1m4chi@xdsl-81-173-158-167.netcologne.de) has quit (Remote host closed the connection)
2015-08-22 09:16:31	Myrl	mniip: I decided to taint gentoo with binaries. :|
2015-08-22 09:17:03	-->	EvilMachine (~evi1m4chi@xdsl-81-173-158-167.netcologne.de) has joined #haskell
2015-08-22 09:17:05	Gurkenglas	Guessing at its internals, either a single error already is a list of Strings, or it internally uses WriterT and at the end returns all errors in a Left, discarding the result. I find the second option unlikely.
2015-08-22 09:17:07	<--	k0001 (~k0001@unaffiliated/k0001) has quit (Ping timeout: 256 seconds)
2015-08-22 09:17:38	kqr	I guess that's possible
2015-08-22 09:17:55	-->	nshepperd (~nshepperd@168.1.75.55-static.reverse.softlayer.com) has joined #haskell
2015-08-22 09:18:33	-->	Crypto-dmtized (~Crypto-dm@99-100-84-15.lightspeed.cicril.sbcglobal.net) has joined #haskell
2015-08-22 09:18:47	Gurkenglas	Looking at the source, ah.
2015-08-22 09:18:49	<--	favonia (~favonia@pdpc/supporter/student/favonia) has quit (Ping timeout: 256 seconds)
2015-08-22 09:19:06	Gurkenglas	allErrors :: [Either String (TPath, v)] -> EitherT [String] IO (HashMap TPath v)
2015-08-22 09:19:09	-->	poincare101 (~dhaivat@cpe-174-103-231-209.new.res.rr.com) has joined #haskell
2015-08-22 09:19:10	<--	jcreekmore (~jcreekmor@23-124-69-74.lightspeed.brhmal.sbcglobal.net) has quit (Quit: jcreekmore)
2015-08-22 09:19:32	Gurkenglas	It does many things, returns all errors if there's any, or returns all results if there are no errors.
2015-08-22 09:19:38	-->	zariuq (~zar@214.233.164.82.customer.cdi.no) has joined #haskell
2015-08-22 09:19:49	kqr	hm
2015-08-22 09:19:58	Gurkenglas	(Meaning it effectively does internal WriterT)
2015-08-22 09:20:07	-->	justintv90 (~justin@42.113.159.124) has joined #haskell
2015-08-22 09:20:08	kqr	yeah that's what it looked like
2015-08-22 09:21:03	<--	Crypto-dmtized (~Crypto-dm@99-100-84-15.lightspeed.cicril.sbcglobal.net) has quit (Client Quit)
2015-08-22 09:21:08	-->	jgcoded (~jgcoded@2602:306:3a87:8af0:8980:49aa:ed6c:584) has joined #haskell
2015-08-22 09:21:26	kqr	oh well, that helped. thanks
2015-08-22 09:21:37	jgcoded	When are we going to get hoogle.com?
2015-08-22 09:21:38	-->	pine1234 (~pine@94.6.186.217) has joined #haskell
2015-08-22 09:21:47	-->	lethjakman (~lethjakma@71.56.221.51) has joined #haskell
2015-08-22 09:21:52	Gurkenglas	Although the author blundered on allErrors, it should return Either [String] (HashMap TPath v), without involving IO.
2015-08-22 09:22:05	-->	chris2 (~chris@vuxu.org) has joined #haskell
2015-08-22 09:22:16	<--	mizu_no_oto (~textual@c-73-219-2-228.hsd1.ma.comcast.net) has quit (Quit: Computer has gone to sleep.)
2015-08-22 09:22:32	<--	carlosgaldino (~textual@179.228.14.124) has quit (Read error: Connection reset by peer)
2015-08-22 09:22:59	-->	carlosgaldino (~textual@179.228.14.124) has joined #haskell
2015-08-22 09:24:36	-->	Crypto-dmtized (~Crypto-dm@45.56.148.26) has joined #haskell
2015-08-22 09:24:54	<--	poincare101 (~dhaivat@cpe-174-103-231-209.new.res.rr.com) has quit (Quit: poincare101)
2015-08-22 09:25:54	-->	kaoskorobase (~kaoskorob@77.231.156.100) has joined #haskell
2015-08-22 09:25:58	<--	whiteline (~whiteline@unaffiliated/whiteline) has quit (Ping timeout: 265 seconds)
2015-08-22 09:26:07	-->	comprehension (~patrick@99-112-125-117.lightspeed.cicril.sbcglobal.net) has joined #haskell
2015-08-22 09:26:21	<--	f1u77y (~f1u77y@85.174.209.47) has quit (Remote host closed the connection)
2015-08-22 09:26:23	<--	fuzzyhorns (~fuzzyhorn@73.38.57.191) has quit (Remote host closed the connection)
2015-08-22 09:26:29	-->	thedodd (~thedodd@2602:306:b817:a2b0:45b0:ae23:c71b:d1b9) has joined #haskell
2015-08-22 09:26:43	<--	lethjakman (~lethjakma@71.56.221.51) has quit (Ping timeout: 260 seconds)
2015-08-22 09:26:45	-->	Wizek (~Wizek@catv-5-148-245-217.catv.broadband.hu) has joined #haskell
2015-08-22 09:26:46	-->	poincare101 (~dhaivat@cpe-174-103-231-209.new.res.rr.com) has joined #haskell
2015-08-22 09:26:55	<--	fengshaun (~fengshaun@unaffiliated/fengshaun) has quit (Ping timeout: 250 seconds)
2015-08-22 09:26:58	-->	f1u77y (~f1u77y@85.174.209.47) has joined #haskell
2015-08-22 09:27:15	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-22 09:27:42	-->	fujimura (~fujimura@ngn6-ppp935.tokyo.sannet.ne.jp) has joined #haskell
2015-08-22 09:27:51	<--	thkoch (~thkoch@client-nat.dc15.debconf.org) has quit (Ping timeout: 255 seconds)
2015-08-22 09:28:28	<--	kaoskorobase (~kaoskorob@77.231.156.100) has quit (Client Quit)
2015-08-22 09:28:34	<--	Noldorin (~noldorin@unaffiliated/noldorin) has quit (Read error: No route to host)
2015-08-22 09:28:34	-->	thkoch (~thkoch@client-nat.dc15.debconf.org) has joined #haskell
2015-08-22 09:28:41	Crypto-dmtized	Does anybody know about the exploit code for stagefright android?
2015-08-22 09:29:02	-->	fengshaun (~fengshaun@unaffiliated/fengshaun) has joined #haskell
2015-08-22 09:29:09	<--	armyriad (~armyriad@184.75.214.163) has quit (Quit: Leaving)
2015-08-22 09:29:36	liste	Crypto-dmtized that's off-topic here
2015-08-22 09:29:42	-->	sqram (~resio@c-50-128-219-252.hsd1.fl.comcast.net) has joined #haskell
2015-08-22 09:30:02	<--	jgcoded (~jgcoded@2602:306:3a87:8af0:8980:49aa:ed6c:584) has quit (Ping timeout: 246 seconds)
2015-08-22 09:30:04	Crypto-dmtized	O ok.
2015-08-22 09:30:08	-->	j201 (~j201@CPE7cb21bcc3740-CM7cb21bcc373d.cpe.net.cable.rogers.com) has joined #haskell
2015-08-22 09:30:08	<--	j201 (~j201@CPE7cb21bcc3740-CM7cb21bcc373d.cpe.net.cable.rogers.com) has quit (Changing host)
2015-08-22 09:30:08	-->	j201 (~j201@unaffiliated/j201) has joined #haskell
2015-08-22 09:30:59	<--	f1u77y (~f1u77y@85.174.209.47) has quit (Remote host closed the connection)
2015-08-22 09:31:20	<--	AaronFriel (~AaronFrie@67.212.119.147) has quit (Quit: Leaving)
2015-08-22 09:31:22	-->	f1u77y (~f1u77y@85.174.209.47) has joined #haskell
2015-08-22 09:32:04	-->	mjouk (~textual@82-68-90-198.dsl.in-addr.zen.co.uk) has joined #haskell
2015-08-22 09:32:16	<--	Crypto-dmtized (~Crypto-dm@45.56.148.26) has quit (Quit: Bye)
2015-08-22 09:32:18	<--	fujimura (~fujimura@ngn6-ppp935.tokyo.sannet.ne.jp) has quit (Ping timeout: 260 seconds)
2015-08-22 09:32:19	<--	blue_deref (~blue_dere@cpe-74-77-246-241.buffalo.res.rr.com) has quit (Quit: bbn)
2015-08-22 09:34:03	<--	thkoch (~thkoch@client-nat.dc15.debconf.org) has quit (Ping timeout: 244 seconds)
2015-08-22 09:34:38	--	jrslepak_ is now known as jrslepak
2015-08-22 09:35:07	<--	magneticduck (~magneticd@pool-64-222-89-30.burl.east.myfairpoint.net) has quit (Ping timeout: 260 seconds)
2015-08-22 09:35:27	-->	OmnipotentEntity (~omnipoten@unaffiliated/omnipotententity) has joined #haskell
2015-08-22 09:36:03	-->	c_wraith (~c_wraith@28d244188882.click-network.com) has joined #haskell
2015-08-22 09:37:27	<--	f1u77y (~f1u77y@85.174.209.47) has quit (Ping timeout: 260 seconds)
2015-08-22 09:39:19	-->	mada (~mariano@181.170.72.150) has joined #haskell
2015-08-22 09:39:21	<--	julesjacobs (~Jules@535283F7.cm-6-3c.dynamic.ziggo.nl) has quit (Quit: Leaving)
2015-08-22 09:39:26	-->	thkoch (~thkoch@client-nat.dc15.debconf.org) has joined #haskell
2015-08-22 09:39:27	-->	f1u77y (~f1u77y@85.174.209.47) has joined #haskell
2015-08-22 09:39:39	<--	poincare101 (~dhaivat@cpe-174-103-231-209.new.res.rr.com) has quit (Quit: poincare101)
2015-08-22 09:43:23	--	irc: disconnected from server
2015-08-22 11:43:29	-->	RouxTheDay (~RouxTheDa@199.21.87.214) has joined #haskell
2015-08-22 11:43:29	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-22 11:43:29	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-22 11:43:29	--	Channel #haskell: 1491 nicks (1 op, 0 voices, 1490 normals)
2015-08-22 11:43:30	--	URL for #haskell: http://www.haskell.org/
2015-08-22 11:43:30	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-22 11:43:36	<--	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has quit (Ping timeout: 264 seconds)
2015-08-22 11:43:45	<--	thedodd (~thedodd@2602:306:b817:a2b0:45b0:ae23:c71b:d1b9) has quit (Ping timeout: 246 seconds)
2015-08-22 11:43:55	-->	thedodd (~thedodd@2602:306:b817:a2b0:8cc4:fd83:ba7d:b291) has joined #haskell
2015-08-22 11:44:10	-->	codedmart (~codedmart@c-174-52-158-160.hsd1.ut.comcast.net) has joined #haskell
2015-08-23 07:52:04	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:10f1:59c7:8735:5c8) has joined #haskell
2015-08-23 07:52:04	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-23 07:52:04	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-23 07:52:04	--	Channel #haskell: 1490 nicks (1 op, 0 voices, 1489 normals)
2015-08-23 07:52:04	--	URL for #haskell: http://www.haskell.org/
2015-08-23 07:52:05	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-23 07:52:08	erisco	well, I can take a look
2015-08-23 07:52:49	-->	bamboo (~bamboo@189-47-125-82.dsl.telesp.net.br) has joined #haskell
2015-08-23 07:52:50	c_wraith	erisco: tokens don't always match the text lexed over.  Syntactical lexemes like "begin" or "end" are often just represented with data values that aren't character-oriented.
2015-08-23 07:53:30	<--	hmrm (~hmrm@198.244.104.109) has quit (Ping timeout: 265 seconds)
2015-08-23 07:53:32	c_wraith	erisco: (I'm only pointing this out because sometimes the position of every character in the lexeme isn't something that makes sense in the output of the lexer)
2015-08-23 07:53:40	erisco	c_wraith, that is true but you can save where the token started and the length in the token itself
2015-08-23 07:53:42	-->	mjs2600 (~mjs2600@c-50-156-203-132.hsd1.tn.comcast.net) has joined #haskell
2015-08-23 07:54:03	erisco	c_wraith, that is just the information that goes into whatever generates the token
2015-08-23 07:54:09	-->	triliyn (~lioneyes@c-24-6-242-177.hsd1.ca.comcast.net) has joined #haskell
2015-08-23 07:54:09	erisco	you can keep all or none of it
2015-08-23 07:54:10	<--	hiroakip (~hiroaki@5.147.58.148) has quit (Ping timeout: 240 seconds)
2015-08-23 07:54:16	-->	Hugehead (~Hugehead@184.101.31.115) has joined #haskell
2015-08-23 07:54:21	<--	fuzzyhorns (~fuzzyhorn@73.38.57.191) has quit (Read error: Connection reset by peer)
2015-08-23 07:54:32	<--	Soft (~soft@unaffiliated/soft) has quit (Ping timeout: 252 seconds)
2015-08-23 07:54:49	-->	fuzzyhorns (~fuzzyhorn@73.38.57.191) has joined #haskell
2015-08-23 07:55:23	<--	mjs2600 (~mjs2600@c-50-156-203-132.hsd1.tn.comcast.net) has quit (Client Quit)
2015-08-23 07:55:24	-->	sunwukong (~androirc@om126161020119.8.openmobile.ne.jp) has joined #haskell
2015-08-23 07:55:52	<--	Ayey__ (~rune@0135301590.0.fullrate.dk) has quit (Ping timeout: 260 seconds)
2015-08-23 08:26:32	--	irc: disconnected from server
2015-08-23 08:26:50	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:316b:4c83:6995:cadb) has joined #haskell
2015-08-23 08:26:50	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-23 08:26:50	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-23 08:26:51	--	Channel #haskell: 1492 nicks (1 op, 0 voices, 1491 normals)
2015-08-23 08:26:51	--	URL for #haskell: http://www.haskell.org/
2015-08-23 08:26:51	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-23 08:27:05	<--	dolio (~dolio@haskell/developer/dolio) has quit (Ping timeout: 250 seconds)
2015-08-23 08:27:06	<--	kranius (~kranius@abo-243-129-68.bdx.modulonet.fr) has quit (Ping timeout: 260 seconds)
2015-08-23 08:27:31	<--	hamid (~nithp@unaffiliated/hamid) has quit (Quit: leaving)
2015-08-23 08:27:50	<--	yqt (~yqt@81.88.230.28) has quit (Ping timeout: 240 seconds)
2015-08-23 08:28:04	-->	viszu1 (~viszu@89-70-53-243.dynamic.chello.pl) has joined #haskell
2015-08-23 08:28:04	erisco	actually interesting, if you look at the benchmark posted here https://wiki.haskell.org/Performance#Data.Sequence_vs._lists the difference is stunning
2015-08-23 08:28:09	-->	gienah (~mwright@gentoo/developer/gienah) has joined #haskell
2015-08-23 08:28:11	erisco	happens to be entirely related
2015-08-23 08:28:47	-->	foreignFunction (~ai@ip-4761.sunline.net.ua) has joined #haskell
2015-08-23 08:28:54	<--	foreignFunction1 (~ai@ip-4761.sunline.net.ua) has quit (Read error: Connection reset by peer)
2015-08-23 08:29:25	<--	viszu (~viszu@89-70-53-243.dynamic.chello.pl) has quit (Ping timeout: 256 seconds)
2015-08-23 08:29:35	myname_	@pl composition a b = do
2015-08-23 08:29:36	lambdabot	composition = const (const do)
2015-08-23 08:29:36	myname_	    foldl' (\(x, y) (ax, ay) -> (x + ax, (y * ay) `mod` m)) (0, 1) $ map (\n -> value n $ goldbach n) $ [a..b]
2015-08-23 08:29:44	<--	myname_ (~dhananjoy@104.132.24.66) has quit (Quit: leaving)
2015-08-23 08:29:56	codehero	jdt: you're the one who made brick?
2015-08-23 08:30:05	erisco	and I wager if you wanted to go faster still you'd use an ArrayList
2015-08-23 08:30:35	-->	myname_ (~dhananjoy@104.132.24.66) has joined #haskell
2015-08-23 08:30:38	myname_	@pl composition a b = foldl' (\(x, y) (ax, ay) -> (x + ax, (y * ay) `mod` (10^9+7))) (0, 1) $ map (\n -> value n $ goldbach n) $ [a..b]
2015-08-23 08:30:39	lambdabot	composition = ((foldl' (uncurry (flip flip snd . (ap .) . flip flip fst . ((.) .) . (. flip (flip . (mod .) . (*)) 1000000007) . flip . (((.) . (,)) .) . (+))) (0, 1) . map (ap value goldbach)) .) . enumFromTo
2015-08-23 08:30:52	<--	Zariel (~chris@149.18.24.66) has quit (Ping timeout: 260 seconds)
2015-08-23 08:30:53	codehero	oO
2015-08-23 08:31:00	<--	doomlord (~textual@host86-157-65-192.range86-157.btcentralplus.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-23 08:31:21	<--	Gurkenglas (5dd56acc@gateway/web/freenode/ip.93.213.106.204) has quit (Quit: Page closed)
2015-08-23 08:32:26	-->	skore_de (~skore@aftr-5-146-248-191.unity-media.net) has joined #haskell
2015-08-23 08:32:38	 *	hackagebot pcre-heavy 0.2.5 - A regexp library on top of pcre-light you can actually use.  https://hackage.haskell.org/package/pcre-heavy-0.2.5 (myfreeweb)
2015-08-23 08:33:25	-->	Zariel (~chris@149.18.24.66) has joined #haskell
2015-08-23 08:33:40	<--	sebleblanc (~seb@unaffiliated/sebleblanc) has quit (Remote host closed the connection)
2015-08-23 08:33:57	-->	fujimura (~fujimura@ngn6-ppp935.tokyo.sannet.ne.jp) has joined #haskell
2015-08-23 08:34:40	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-23 08:34:43	<--	nkhodyunya1 (~Adium@dnm.208.0.188.95.dsl.krasnet.ru) has quit (Quit: Leaving.)
2015-08-23 08:34:47	-->	Paradisee (~quassel@2.239.28.120) has joined #haskell
2015-08-23 08:34:47	-->	awesomehaircut (~jesus@67-1-241-145.tcso.qwest.net) has joined #haskell
2015-08-23 08:34:50	<--	Coldblackice (~Coldblack@unaffiliated/coldblackice) has quit (Ping timeout: 272 seconds)
2015-08-23 08:35:12	<--	jp_rider (~Adium@c-73-134-205-106.hsd1.md.comcast.net) has quit (Quit: Leaving.)
2015-08-23 08:35:12	<--	justintv90 (~justin@42.114.228.244) has quit (Ping timeout: 250 seconds)
2015-08-23 08:35:33	erisco	hm, using the quasi quoting for compile time checking is smart
2015-08-23 08:35:36	-->	hiptobecubic_ (~john@unaffiliated/hiptobecubic) has joined #haskell
2015-08-23 08:35:55	<--	bycn82 (~bycn82_3@138.75.255.57) has quit (Read error: Connection reset by peer)
2015-08-23 08:36:01	-->	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has joined #haskell
2015-08-23 08:36:44	-->	nkhodyunya (~Adium@dnm.208.0.188.95.dsl.krasnet.ru) has joined #haskell
2015-08-23 08:36:55	erisco	myfreeweb, hey you
2015-08-23 08:37:12	-->	mizu_no_oto (~textual@c-73-219-2-228.hsd1.ma.comcast.net) has joined #haskell
2015-08-23 08:37:29	-->	carlosgaldino (~textual@179.228.14.124) has joined #haskell
2015-08-23 08:37:33	myfreeweb	erisco: ?
2015-08-23 08:37:39	 *	hackagebot digestive-bootstrap 0.1.0.1 - Speed up form designing using digestive functors and bootstrap  https://hackage.haskell.org/package/digestive-bootstrap-0.1.0.1 (AlexanderThiemann)
2015-08-23 08:37:41	erisco	thanks for the lib
2015-08-23 08:38:01	erisco	does it work with the Text.Regex.Base stuff at all?
2015-08-23 08:38:27	myfreeweb	nope
2015-08-23 08:38:34	myfreeweb	I've explicitly said "none of that regex-compat-pluggable-backend stuff" in the README
2015-08-23 08:38:45	<--	myname_ (~dhananjoy@104.132.24.66) has quit (Quit: leaving)
2015-08-23 08:38:53	<--	teclo- (42@unaffiliated/teclo) has quit (Ping timeout: 252 seconds)
2015-08-23 08:39:03	erisco	I don't actually know what regex-compat-pluggable-backend is
2015-08-23 08:39:35	-->	jp_rider (~Adium@c-73-134-205-106.hsd1.md.comcast.net) has joined #haskell
2015-08-23 08:39:42	myfreeweb	that's how I called regex-base
2015-08-23 08:39:46	erisco	if you are using regex-pcre then it depends on regex-base
2015-08-23 08:39:52	myfreeweb	I'm using pcre-light
2015-08-23 08:39:55	indiagreen	Gurkenglas_: ha, I found a simpler way by noticing that splitAt is essentially a State action
2015-08-23 08:40:10	myfreeweb	that's why it's called pcre-heavy
2015-08-23 08:40:32	-->	teclo- (42@unaffiliated/teclo) has joined #haskell
2015-08-23 08:40:34	erisco	oh I see, so pcre-light is a standalone regexp engine
2015-08-23 08:40:56	<--	emc2 (~emc2@2001:470:1f11:617:5ef7:830:9e60:2038) has quit (Ping timeout: 246 seconds)
2015-08-23 08:41:19	Gurkenglas_	indiagreen: Don't forget uncons for the singular case
2015-08-23 08:41:41	-->	Soft (~soft@unaffiliated/soft) has joined #haskell
2015-08-23 08:41:46	<--	nsuke (~nsuke@p73a3d16f.kngwnt01.ap.so-net.ne.jp) has quit (Remote host closed the connection)
2015-08-23 08:42:01	erisco	myfreeweb, or is it calling out to a native C lib? seems like it might, I'm curious
2015-08-23 08:42:22	erisco	I have been working with regex-tdfa for a few days and released regex-tdfa-pipes
2015-08-23 08:42:31	myfreeweb	it's a binding to, obviously, PCRE
2015-08-23 08:42:32	erisco	I like that you've got the quasi quoters to check the regexp at compile time
2015-08-23 08:43:01	<--	razvanc87 (~razvanc87@79.97.80.96) has quit (Ping timeout: 256 seconds)
2015-08-23 08:43:23	<--	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has quit (Remote host closed the connection)
2015-08-23 08:43:23	<--	Abd4llA (~Abd4llA@197.36.72.134) has quit (Ping timeout: 244 seconds)
2015-08-23 08:43:51	-->	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has joined #haskell
2015-08-23 08:44:03	-->	f1u77y_ (~f1u77y@46.158.21.164) has joined #haskell
2015-08-23 08:44:29	-->	Literphor (~alfred@209.237.92.139) has joined #haskell
2015-08-23 08:44:39	<--	Peaker (~Peaker@87.68.36.130.cable.012.net.il) has quit (Ping timeout: 255 seconds)
2015-08-23 08:45:01	erisco	myfreeweb, what are your reasons for disliking regex-base stuff?
2015-08-23 08:45:23	-->	dolio (~dolio@haskell/developer/dolio) has joined #haskell
2015-08-23 08:45:52	<--	f1u77y (~f1u77y@46.158.21.164) has quit (Ping timeout: 252 seconds)
2015-08-23 08:46:44	erisco	myfreeweb, a redeeming quality is uncons, which means it will request more chars as it needs them
2015-08-23 08:46:49	erisco	which allowed me to make it work with pipes
2015-08-23 08:46:53	myfreeweb	I just don't like it? it seems too complicated
2015-08-23 08:47:08	-->	etqqkoiflwhb (~etqqkoifl@106.51.241.44) has joined #haskell
2015-08-23 08:47:09	<--	etqqkoiflwhb (~etqqkoifl@106.51.241.44) has quit (Remote host closed the connection)
2015-08-23 08:47:11	erisco	I am looking at pcre-light and while it looks much simpler (that is a good thing) it seems I have to give it an entire bytestring up front
2015-08-23 08:47:29	-->	etqqkoiflwhb (~etqqkoifl@106.51.241.44) has joined #haskell
2015-08-23 08:47:38	erisco	which means I can't stream data to it
2015-08-23 08:48:10	myfreeweb	PCRE (the C library) doesn't do stream matching
2015-08-23 08:48:15	-->	tnks (~tnks@104-185-183-178.lightspeed.austtx.sbcglobal.net) has joined #haskell
2015-08-23 08:48:25	erisco	yeah evidently so
2015-08-23 08:48:25	myfreeweb	I don't think stream regex matching is useful anyway
2015-08-23 08:48:36	erisco	well it is useful if you're working with pipes :)
2015-08-23 08:48:42	-->	justintv90 (~justin@42.113.158.112) has joined #haskell
2015-08-23 08:49:06	<--	Soft (~soft@unaffiliated/soft) has quit (Ping timeout: 240 seconds)
2015-08-23 08:49:10	erisco	I really want to use the compile timed checked expressions
2015-08-23 08:49:39	myfreeweb	that quasiquoter is 3 short lines of code, lol
2015-08-23 08:49:42	erisco	so... I might take a looksie at your work and implement it for tdfa if you don't mind
2015-08-23 08:49:58	myfreeweb	I stole the idea from regexqq :D
2015-08-23 08:50:03	myfreeweb	and others
2015-08-23 08:50:07	erisco	best artists steal
2015-08-23 08:50:15	<--	Zariel (~chris@149.18.24.66) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-23 08:50:22	<--	passy (uid11981@gateway/web/irccloud.com/x-kosvjeuegpvmcsfv) has quit (Quit: Connection closed for inactivity)
2015-08-23 08:50:33	myfreeweb	I saw https://github.com/dag/vim2hs#quasi-quoting syntax highlighting for regexps in quasiquoters
2015-08-23 08:50:37	-->	tabemann (~travisb@172-13-49-137.lightspeed.milwwi.sbcglobal.net) has joined #haskell
2015-08-23 08:50:50	<--	fresheyeball (~Isaac@c-98-245-121-255.hsd1.co.comcast.net) has quit (Ping timeout: 245 seconds)
2015-08-23 08:50:55	<--	saulzar_ (~oliver@121-74-241-215.telstraclear.net) has quit (Ping timeout: 260 seconds)
2015-08-23 08:50:55	-->	fresheyeball1 (~Isaac@c-98-245-121-255.hsd1.co.comcast.net) has joined #haskell
2015-08-23 08:51:01	erisco	oh yeah, cool
2015-08-23 08:51:24	erisco	we'll you're spot on that Haskell needs some renovations in the regexp department
2015-08-23 08:51:43	<--	mizu_no_oto (~textual@c-73-219-2-228.hsd1.ma.comcast.net) has quit (Quit: Computer has gone to sleep.)
2015-08-23 08:51:51	erisco	I'm not totally convinced by the -base stuff either
2015-08-23 08:52:07	erisco	it seems too optimistic to try and classify all regexp engines
2015-08-23 08:52:22	erisco	it tries to do this with half a dozen type classes or so
2015-08-23 08:52:27	<--	concept (52d4530a@gateway/web/freenode/ip.82.212.83.10) has quit (Ping timeout: 246 seconds)
2015-08-23 08:53:57	<--	ndrei (~avo@83.142.149.227) has quit (Ping timeout: 250 seconds)
2015-08-23 08:54:38	erisco	I have a working theory that optimistic generalisations are not a good thing
2015-08-23 08:54:52	-->	hmrm (~hmrm@198.244.104.109) has joined #haskell
2015-08-23 08:54:59	<--	vikaton (uid59278@gateway/web/irccloud.com/x-pruktvizyoafyzkm) has quit (Quit: Connection closed for inactivity)
2015-08-23 08:57:23	<--	teclo- (42@unaffiliated/teclo) has quit (Ping timeout: 246 seconds)
2015-08-23 08:57:24	<--	oish (~charlie@94.242.210.194) has quit (Ping timeout: 264 seconds)
2015-08-23 08:57:38	<--	knupfer (~user@089144237120.atnat0046.highway.webapn.at) has quit (Ping timeout: 272 seconds)
2015-08-23 08:58:02	--	paf31_away is now known as paf31
2015-08-23 08:58:52	<--	ScRaMbLe (~S@unaffiliated/scramble) has quit (Ping timeout: 244 seconds)
2015-08-23 08:59:02	-->	ulfdoz (~mary@2.166.170.153) has joined #haskell
2015-08-23 08:59:06	<--	hmrm (~hmrm@198.244.104.109) has quit (Ping timeout: 240 seconds)
2015-08-23 08:59:20	-->	teclo- (42@unaffiliated/teclo) has joined #haskell
2015-08-23 08:59:35	<--	SubZeroFX (~SubZeroFX@unaffiliated/subzerofx) has quit (Quit: Leaving)
2015-08-23 08:59:43	<--	f1u77y_ (~f1u77y@46.158.21.164) has quit (Quit: Konversation terminated!)
2015-08-23 09:00:06	-->	f1u77y (~f1u77y@46.158.21.164) has joined #haskell
2015-08-23 09:00:34	-->	raichoo (~raichoo@mue-88-130-62-169.dsl.tropolys.de) has joined #haskell
2015-08-23 09:01:15	<--	rfmind (~ruslan@2a02:a03f:425:6400:28c:faff:fe88:26cf) has quit (Ping timeout: 245 seconds)
2015-08-23 09:01:37	-->	zslothy (~zslothy@126.186.233.220.static.exetel.com.au) has joined #haskell
2015-08-23 09:01:41	<--	Literphor (~alfred@209.237.92.139) has quit (Quit: Literphor)
2015-08-23 09:02:06	-->	somepunk (~rohinpate@cpe-104-175-72-113.socal.res.rr.com) has joined #haskell
2015-08-23 09:02:30	-->	rpfun (~user@ool-44c4b163.dyn.optonline.net) has joined #haskell
2015-08-23 09:02:37	-->	rfmind (~ruslan@2a02:a03f:425:6400:28c:faff:fe88:26cf) has joined #haskell
2015-08-23 09:02:44	<--	ceii (~ceii@2a02:1205:c69a:b6f0:c685:8ff:fe30:8ca2) has quit (Ping timeout: 252 seconds)
2015-08-23 09:03:06	rpfun	ghc is complaining that it cannot deduce (using TypeLits) that n ~ (n + 1) -1
2015-08-23 09:03:22	<--	edsko (~edsko@46.7.106.187) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-08-23 09:03:23	-->	macsaund (~teflor@84-226-127-58.static.adslpremium.ch) has joined #haskell
2015-08-23 09:03:34	rpfun	is there a way to convince it otherwise without introducing a constraint (as that would force me to use undecidableinstances)?
2015-08-23 09:03:47	-->	akegalj (~akegalj@dh207-106-192.xnet.hr) has joined #haskell
2015-08-23 09:04:10	-->	S (~S@unaffiliated/scramble) has joined #haskell
2015-08-23 09:04:13	-->	ceii (~ceii@2a02:1205:c69a:b6f0:c685:8ff:fe30:8ca2) has joined #haskell
2015-08-23 09:04:25	-->	k0001 (~k0001@unaffiliated/k0001) has joined #haskell
2015-08-23 09:04:30	--	S is now known as Guest34723
2015-08-23 09:05:22	-->	kranius (~kranius@abo-243-129-68.bdx.modulonet.fr) has joined #haskell
2015-08-23 09:05:30	nitrix	Does category theory allows you to have multiple morphisms with the same source and target objects?
2015-08-23 09:05:42	nitrix	Also, is it possible to get recursive compositions and is there a notation for that?
2015-08-23 09:06:13	-->	tristanp (~tristanp@c-98-203-232-39.hsd1.wa.comcast.net) has joined #haskell
2015-08-23 09:06:15	akegalj	Hey. I have sandboxed project in folder A and in folder B. I would like to tell project A to use installed stuff from project B so I did 'cd A; cabal sandbox add-source B'. Do I have to put project B as a dependency in A.cabal ?
2015-08-23 09:06:19	-->	fuzzyhorns (~fuzzyhorn@73.38.57.191) has joined #haskell
2015-08-23 09:06:24	<--	zslothy (~zslothy@126.186.233.220.static.exetel.com.au) has quit (Ping timeout: 264 seconds)
2015-08-23 09:06:36	rpfun	nitrix: yes to the first question
2015-08-23 09:06:41	tulcod	nitrix: most categories have many (usually infinitely many) morphisms between any two fixed objects
2015-08-23 09:06:49	<--	joneshf-laptop (~joneshf@98.208.35.89) has quit (Ping timeout: 260 seconds)
2015-08-23 09:06:59	rpfun	akegalj: yes
2015-08-23 09:07:15	tulcod	nitrix: not quite sure what recursive composition is. are you looking for fixed point operators? are you looking for the composition of a list of functions?
2015-08-23 09:07:37	-->	oish (~charlie@159.22.169.217.in-addr.arpa) has joined #haskell
2015-08-23 09:07:40	 *	hackagebot microformats2-parser 1.0.1 - A Microformats 2 parser.  https://hackage.haskell.org/package/microformats2-parser-1.0.1 (myfreeweb)
2015-08-23 09:07:42	akegalj	rpfun: but when I do so, it is trying to install and get project B from hackage (which is there also)
2015-08-23 09:07:45	tulcod	nitrix: like, are you looking for [a -> a] -> (a -> a)  ?
2015-08-23 09:08:23	Gurkenglas_	:t ala Endo foldMap
2015-08-23 09:08:24	lambdabot	Foldable t => t (a -> a) -> a -> a
2015-08-23 09:08:28	nitrix	tulcod: I'm thinking, if you have the morphism  f: A -> B, and another g: B -> C, and one more h: C -> A, when composed, f*g*c they form a recursive definition. Is there a notation for that?
2015-08-23 09:08:47	-->	hoknamahn (~hoknamahn@cpc5-croy21-2-0-cust722.19-2.cable.virginm.net) has joined #haskell
2015-08-23 09:09:26	-->	chpatrick1 (~chpatrick@217.155.192.24) has joined #haskell
2015-08-23 09:09:29	tulcod	nitrix: f.g.h
2015-08-23 09:09:38	tulcod	but that's probably not what you're looking for
2015-08-23 09:10:08	<--	f1u77y (~f1u77y@46.158.21.164) has quit (Remote host closed the connection)
2015-08-23 09:10:12	nitrix	tulcod: And that's it? Simple composition dot, no extra notation?
2015-08-23 09:10:40	-->	glguy (~glguy@haskell/developer/glguy) has joined #haskell
2015-08-23 09:10:50	<--	tristanp (~tristanp@c-98-203-232-39.hsd1.wa.comcast.net) has quit (Ping timeout: 240 seconds)
2015-08-23 09:10:56	nitrix	This stuff is fairly new to me and I was afraid learning the notation would be hard, but so far, it seems the theory is what's the most complicated.
2015-08-23 09:11:07	nitrix	I appreciate.
2015-08-23 09:11:13	rpfun	akegalj: ah, i see. you could run cabal install on the directory B from directory A, that should install in the sandbox. 
2015-08-23 09:11:15	tulcod	nitrix: oops, the composition is actually the other way around
2015-08-23 09:11:35	tulcod	nitrix: if f:A->B, and g:B->C, and h:C->D, then the composition is h.g.f
2015-08-23 09:11:36	-->	hiroakip (~hiroaki@5.147.58.148) has joined #haskell
2015-08-23 09:11:37	tulcod	("reverse")
2015-08-23 09:11:52	-->	f1u77y (~f1u77y@46.158.21.164) has joined #haskell
2015-08-23 09:11:55	tulcod	and that composition is a function: h.g.f : A -> D
2015-08-23 09:12:04	nitrix	D ?
2015-08-23 09:12:13	tulcod	well i dunno, just introducing a new variable
2015-08-23 09:12:23	Gurkenglas_	Mnemonically, h.g.f = \x -> h(g(f(x))), complain to whoever decided to put function names in front of the arguments
2015-08-23 09:12:43	nitrix	tulcod: Okay, yours isn't mutually recursive though.
2015-08-23 09:12:49	tulcod	"mutually recursive"?
2015-08-23 09:13:08	-->	humanoyd (~humanoyd@p548BED09.dip0.t-ipconnect.de) has joined #haskell
2015-08-23 09:13:25	nitrix	I'm not sure if there's a term for that, but in my example, the h morphism had a definition of C -> A, not C -> D, forming a loop.
2015-08-23 09:13:33	tulcod	nitrix: okay, so what?
2015-08-23 09:13:34	Gurkenglas_	You want special notation for a morphism having its domain and codomain equal?
2015-08-23 09:13:45	-->	danimad (~danimad@3EC96876.catv.pool.telekom.hu) has joined #haskell
2015-08-23 09:13:56	tulcod	nitrix: in that case, you would get h.g.f : A -> A
2015-08-23 09:13:56	nitrix	Gurkenglas_: I'm asking if there's one.
2015-08-23 09:13:58	tulcod	so?
2015-08-23 09:14:06	-->	HolyGarbage (HolyGarbag@c83-254-36-175.bredband.comhem.se) has joined #haskell
2015-08-23 09:14:17	-->	lethjakman (~lethjakma@71.56.221.51) has joined #haskell
2015-08-23 09:14:38	<--	kranius (~kranius@abo-243-129-68.bdx.modulonet.fr) has quit (Ping timeout: 250 seconds)
2015-08-23 09:14:40	nitrix	tulcod: Ah sorry. That actually makes sense.
2015-08-23 09:14:43	tulcod	nitrix: mathematicians would call it an endomorphism (where "morphism" is just their fancy word for "function", and "endo" means "something to itself")
2015-08-23 09:15:09	nitrix	Great <3
2015-08-23 09:15:45	nitrix	Now I have something substantial to continue my googling spree :p
2015-08-23 09:15:53	HolyGarbage	I just arrived. Endomorphism is the mathematical way of saying "recursive function"?
2015-08-23 09:16:00	<--	sba (~sba@c-98-217-1-114.hsd1.ma.comcast.net) has quit (Ping timeout: 272 seconds)
2015-08-23 09:16:15	<--	mkusher (~mkusher@93.170.184.174) has quit (Ping timeout: 245 seconds)
2015-08-23 09:16:31	-->	trism (~jconti@unaffiliated/trism) has joined #haskell
2015-08-23 09:16:37	akegalj	rpfun: hm, i can't find how to do that with cabal. It is always building the current directory
2015-08-23 09:16:41	-->	urodna (~urodna@unaffiliated/urodna) has joined #haskell
2015-08-23 09:16:54	-->	Soft (~soft@unaffiliated/soft) has joined #haskell
2015-08-23 09:16:57	--	paf31 is now known as paf31_away
2015-08-23 09:16:57	tulcod	HolyGarbage: "recursive" in nitrix' sense
2015-08-23 09:17:12	srhb	Which is not commonly what is meant by recursive.
2015-08-23 09:17:18	nshepperd	there's nothing particularly recursive about a morphism that goes back to the same point
2015-08-23 09:17:30	<--	f1u77y (~f1u77y@46.158.21.164) has quit (Remote host closed the connection)
2015-08-23 09:17:36	<--	teclo- (42@unaffiliated/teclo) has quit (Ping timeout: 265 seconds)
2015-08-23 09:17:47	HolyGarbage	Right
2015-08-23 09:18:32	<--	lethjakman (~lethjakma@71.56.221.51) has quit (Ping timeout: 246 seconds)
2015-08-23 09:18:58	<--	Welkin (~Welkin@rrcs-97-78-71-196.se.biz.rr.com) has quit (Ping timeout: 250 seconds)
2015-08-23 09:19:01	HolyGarbage	We're learning Haskell in our next CS class. This is our course literature: http://learnyouahaskell.com/ Anyone had any experience with it? Any good?
2015-08-23 09:19:22	-->	teclo- (42@unaffiliated/teclo) has joined #haskell
2015-08-23 09:19:39	rpfun	akegalj: i just tested out what I said
2015-08-23 09:19:49	tulcod	HolyGarbage: was my main reference while learning it, i'd say
2015-08-23 09:19:53	-->	joneshf-laptop (~joneshf@98.208.35.89) has joined #haskell
2015-08-23 09:20:03	nitrix	HolyGarbage: It's in my experience the best resource for begineers and the one I used. It does half the work for you, which is already huge.
2015-08-23 09:20:06	tulcod	well that and Real World Haskell
2015-08-23 09:20:08	c_wraith	HolyGarbage: it's a decent intro up until it starts getting into higher-kinded type classes.
2015-08-23 09:20:11	rpfun	akegalj: go into directory "A", then in directory "A" run "cabal install B" where "B" is the path to the local project you want to install in the sandbox
2015-08-23 09:20:17	c_wraith	HolyGarbage: I don't think it handles them very well
2015-08-23 09:20:27	<--	hiroakip (~hiroaki@5.147.58.148) has quit (Quit: Ex-Chat)
2015-08-23 09:20:42	-->	benneh (~benneh@97e00282.skybroadband.com) has joined #haskell
2015-08-23 09:20:49	-->	f1u77y (~f1u77y@46.158.21.164) has joined #haskell
2015-08-23 09:21:07	HolyGarbage	Ah, thanks for your info. Always good to know if I'm wasting my time or should look for something else to learn from.
2015-08-23 09:21:09	bergey	HolyGarbage: I find the tone / writing style grating.  But if the style works for you, the content's fine.
2015-08-23 09:21:10	nitrix	HolyGarbage: As with anything, it's always good to learn something from multiple perspectives; so ideally you'd supplement that book with other books; but it definitely proposes a good intro.
2015-08-23 09:21:23	rpfun	ghc is complaining that it cannot deduce (using TypeLits) that n ~ (n + 1) -1 . is there some trick known to get it to see this?
2015-08-23 09:21:32	HolyGarbage	Ah, true
2015-08-23 09:21:37	-->	kranius (~kranius@abo-243-129-68.bdx.modulonet.fr) has joined #haskell
2015-08-23 09:21:44	akegalj	rpfun: oh, i didn't know you can give path to local repository to cabal install. Thnx
2015-08-23 09:22:02	tulcod	HolyGarbage: in general, i'd say people read too much stuff about haskell, instead of just programming with it. try to find a way to solve a weird problem (e.g. how would YOU design an API for IO in a purely functional language?)
2015-08-23 09:22:07	<--	jwm224_ (~My_user_n@c-73-174-21-132.hsd1.pa.comcast.net) has quit (Ping timeout: 256 seconds)
2015-08-23 09:22:27	glguy	rpfun: There's work incorporating a smarter solver into GHC by Iavor Diatchki, but it's not incoporated into released GHC currently (AFAIK)
2015-08-23 09:22:33	tulcod	usually, if you don't invent the real thing, you'll invent an older version of it
2015-08-23 09:22:40	 *	hackagebot utf8-string 1.0.1.1 - Support for reading and writing UTF8 Strings  https://hackage.haskell.org/package/utf8-string-1.0.1.1 (EricMertens)
2015-08-23 09:22:42	-->	rcyr (~rcyr@modemcable204.138-163-184.mc.videotron.ca) has joined #haskell
2015-08-23 09:22:46	<--	jp_rider (~Adium@c-73-134-205-106.hsd1.md.comcast.net) has quit (Quit: Leaving.)
2015-08-23 09:23:03	glguy	rpfun: Starting point: https://github.com/yav/type-nat-solver
2015-08-23 09:23:06	HolyGarbage	akegalj: good point!
2015-08-23 09:23:21	<--	jiang42 (~jiang42@116.237.86.109) has quit (Remote host closed the connection)
2015-08-23 09:23:45	nitrix	Think you meant tulcod :P
2015-08-23 09:24:08	benneh	how do I access a screen or window's pixel data? (i'm using linux) I've looked at the x11 package, but it seems to miss some important functions, including getImage and getPixel
2015-08-23 09:24:36	rpfun	glguy: thanks, but I know about that. the only issue in my project is the particular case (n - 1) + 1 ~ n, and I would rather not add a whole dependency for that single constraint. I was hoping there was a short way I could enforce it myself
2015-08-23 09:24:39	rpfun	even if just locally
2015-08-23 09:25:17	-->	razvanc87 (~razvanc87@188-141-101-127.dynamic.upc.ie) has joined #haskell
2015-08-23 09:25:25	<--	Soft (~soft@unaffiliated/soft) has quit (Ping timeout: 245 seconds)
2015-08-23 09:25:40	-->	gds (~user@2001:41c8:10:5d::10) has joined #haskell
2015-08-23 09:25:58	-->	Soft (~soft@unaffiliated/soft) has joined #haskell
2015-08-23 09:26:48	<--	xinming (~xinming@125.84.139.194) has quit (Ping timeout: 264 seconds)
2015-08-23 09:27:00	<--	fujimura (~fujimura@ngn6-ppp935.tokyo.sannet.ne.jp) has quit (Remote host closed the connection)
2015-08-23 09:27:29	-->	xinming (~xinming@125.84.139.194) has joined #haskell
2015-08-23 09:27:57	-->	rotaerk1 (~rotaerk_t@c-73-187-161-141.hsd1.pa.comcast.net) has joined #haskell
2015-08-23 09:28:50	<--	justintv90 (~justin@42.113.158.112) has quit (Remote host closed the connection)
2015-08-23 09:29:25	-->	sba (~sba@c-98-217-1-114.hsd1.ma.comcast.net) has joined #haskell
2015-08-23 09:29:27	<--	gds (~user@2001:41c8:10:5d::10) has left #haskell ("ERC (IRC client for Emacs 24.5.2)")
2015-08-23 09:29:50	<--	kranius (~kranius@abo-243-129-68.bdx.modulonet.fr) has quit (Ping timeout: 240 seconds)
2015-08-23 09:30:50	<--	Soft (~soft@unaffiliated/soft) has quit (Ping timeout: 245 seconds)
2015-08-23 09:31:20	-->	hmrm (~hmrm@198.244.104.109) has joined #haskell
2015-08-23 09:31:34	<--	darkf (~darkf___@unaffiliated/darkf) has quit (Quit: Leaving)
2015-08-23 09:32:26	-->	zipper (~luv_panda@unaffiliated/zipper) has joined #haskell
2015-08-23 10:06:05	--	irc: disconnected from server
2015-08-23 10:06:23	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:75b8:14fb:24d2:f0d2) has joined #haskell
2015-08-23 10:06:23	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-23 10:06:23	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-23 10:06:24	--	Channel #haskell: 1495 nicks (1 op, 0 voices, 1494 normals)
2015-08-23 10:06:24	--	URL for #haskell: http://www.haskell.org/
2015-08-23 10:06:24	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-23 10:06:34	tulcod	erisco: you might be interested in http://www.ncbi.nlm.nih.gov/pubmed/12507336
2015-08-23 10:07:01	-->	siwica (~user@88.130.207.132) has joined #haskell
2015-08-23 10:07:23	<--	ap01 (~anshu@ool-457c0ba3.dyn.optonline.net) has quit (Ping timeout: 265 seconds)
2015-08-23 10:07:41	siwica	What is the name of a function a -> [a], wrapping an element in a list?
2015-08-23 10:07:56	Cale	(:[])
2015-08-23 10:08:08	<--	sdfgsdfg (~sdfgsdfg@unaffiliated/sdfgsdfg) has quit (Remote host closed the connection)
2015-08-23 10:08:20	-->	qubitnerd (~neutrino@unaffiliated/electron/x-8286743) has joined #haskell
2015-08-23 10:08:35	zipper	How do you guys handle subdirectories in your images/ directory when using hakyll?
2015-08-23 10:08:36	siwica	cool, thanks!
2015-08-23 10:08:37	Cale	> map (:[]) [1..10]
2015-08-23 10:08:39	lambdabot	 [[1],[2],[3],[4],[5],[6],[7],[8],[9],[10]]
2015-08-23 10:08:48	-->	hmrm (~hmrm@198.244.104.109) has joined #haskell
2015-08-23 10:08:57	<--	rohan (~rohan@116.75.145.2) has left #haskell
2015-08-23 10:09:09	<--	ceii (~ceii@2a02:1205:c69a:b6f0:c685:8ff:fe30:8ca2) has quit (Ping timeout: 256 seconds)
2015-08-23 10:09:44	-->	rohan (~rohan@116.75.145.2) has joined #haskell
2015-08-23 10:09:51	erisco	I don't get how to use dataToExpQ
2015-08-23 10:09:55	erisco	what is the first parameter even?
2015-08-23 10:09:58	erisco	:t dataToExpQ
2015-08-23 10:10:00	lambdabot	Not in scope: ‘dataToExpQ’
2015-08-23 10:10:00	<--	Soft (~soft@unaffiliated/soft) has quit (Ping timeout: 245 seconds)
2015-08-23 10:10:14	erisco	@hoogle dataToExpQ
2015-08-23 10:10:14	lambdabot	Language.Haskell.TH.Quote dataToExpQ :: Data a => (forall b. Data b => b -> Maybe (Q Exp)) -> a -> Q Exp
2015-08-23 10:10:36	<--	macsaund (~teflor@84-226-127-58.static.adslpremium.ch) has quit (Ping timeout: 264 seconds)
2015-08-23 10:10:50	erisco	going to guess 'const Nothing'
2015-08-23 10:11:04	-->	rofer (~rofer@rofer.me) has joined #haskell
2015-08-23 10:12:06	-->	bucaran (~b@FL1-125-197-146-120.stm.mesh.ad.jp) has joined #haskell
2015-08-23 10:12:15	<--	kmels (~kmels@184.62.151.186.static.intelnet.net.gt) has quit (Ping timeout: 244 seconds)
2015-08-23 10:12:21	<--	f1u77y (~f1u77y@46.158.21.164) has quit (Remote host closed the connection)
2015-08-23 17:15:04	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:8499:bf9a:209b:fded) has joined #haskell
2015-08-23 17:15:04	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-23 17:15:04	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-23 17:15:04	--	Channel #haskell: 1466 nicks (1 op, 0 voices, 1465 normals)
2015-08-23 17:15:04	--	URL for #haskell: http://www.haskell.org/
2015-08-23 17:15:04	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-23 17:15:50	-->	dmj (~user@24.219.67.158) has joined #haskell
2015-08-23 17:16:19	brtmr	huh. i didn't know about cabal freeze. I was just about to do this manually for a project. nice.
2015-08-23 17:17:00	-->	rcyr (~rcyr@modemcable204.138-163-184.mc.videotron.ca) has joined #haskell
2015-08-23 17:17:42	wkmanire	Looks like this is going to be a mile long swim in the deep end for me. Normally I come into a language I don't know and it's familiar enough.. learning the tools is not so difficult. In this case, the language is completely alien to me. 
2015-08-23 17:17:53	wkmanire	I just want to get to a point where my dev environment is solid and I can start hacking on stuff.
2015-08-23 17:17:56	-->	ddere (~Adium@pa49-195-148-164.pa.nsw.optusnet.com.au) has joined #haskell
2015-08-23 17:18:00	-->	rpfun (~user@ool-44c4b163.dyn.optonline.net) has joined #haskell
2015-08-23 17:18:09	-->	Ayey_ (~rune@0135301590.0.fullrate.dk) has joined #haskell
2015-08-23 17:19:11	Lokathor	wkmanire, cabal and cabal sandboxes can get things working for you
2015-08-23 17:19:24	Lokathor	"cabal repl" runs ghci using your local cabal config so you can load packages
2015-08-23 17:19:35	<--	irrequietus (~irqus@unaffiliated/irrequietus) has quit
2015-08-23 17:19:39	Lokathor	after that it's a lot of learning to think new ways
2015-08-23 17:20:13	dfeuer	chpatrick, I don't remember the details.
2015-08-23 17:20:19	wkmanire	Is it possible to get a nice immediate feedback loop thing going in emacs like you can with clojure (or most lisps for that matter)?
2015-08-23 17:21:16	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Ping timeout: 250 seconds)
2015-08-23 17:21:27	Welkin	wkmanire: ghc-mod
2015-08-23 17:21:29	<--	eeLieAh (~quasar@host6-14-dynamic.2-87-r.retail.telecomitalia.it) has quit (Ping timeout: 260 seconds)
2015-08-23 17:21:44	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-23 17:21:49	dfeuer	wkmanire, flycheck comes into it somehow too, I think.
2015-08-23 17:21:59	Welkin	I don't use anything fancy though
2015-08-23 17:22:00	monochrom	yes IMO. https://github.com/haskell/haskell-mode . scroll down to the README.md, use the melpa-stable one.
2015-08-23 17:22:02	Welkin	just haskell-mode
2015-08-23 17:22:26	<--	pie_ (~pie_@unaffiliated/pie-/x-0787662) has quit (Ping timeout: 246 seconds)
2015-08-23 17:22:26	monochrom	"IMO" because, clearly, YMMV.
2015-08-23 17:22:30	wkmanire	Awesome.
2015-08-23 17:23:02	<--	fuzzyhorns (~fuzzyhorn@73.38.57.191) has quit (Remote host closed the connection)
2015-08-23 17:23:10	Lokathor	wkmanire, you can also split the window and open a shell and run ghci within that shell of course, similar to using slime
2015-08-23 17:23:13	<--	Ayey_ (~rune@0135301590.0.fullrate.dk) has quit (Ping timeout: 256 seconds)
2015-08-23 17:23:18	dfeuer	Time for me to try to work or something.
2015-08-23 17:23:21	monochrom	also, I have no idea what "like you can with clojure (or most lisps for that matter)" means, because I don't care about them.
2015-08-23 17:23:26	<--	johtso (uid563@gateway/web/irccloud.com/x-nlxlfyzoqmgmhqdq) has quit (Quit: Connection closed for inactivity)
2015-08-23 17:23:34	wkmanire	Lokathor: Can you send functions and regions too?
2015-08-23 17:23:38	-->	fuzzyhorns (~fuzzyhorn@73.38.57.191) has joined #haskell
2015-08-23 17:23:55	Lokathor	ahhh, not that i know of
2015-08-23 17:23:59	-->	ohpesky (~ohpesky@DHCP-23105.iis.sinica.edu.tw) has joined #haskell
2015-08-23 17:24:07	Lokathor	you can save the file, switch buffers, and then load the file in ghci
2015-08-23 17:24:18	wkmanire	monochrom: Well then.
2015-08-23 17:24:21	Lokathor	but nothing fancy like doing it as a single keypress like with slime
2015-08-23 17:24:30	Lokathor	at least, not that i know of
2015-08-23 17:24:38	wkmanire	Ah ok. No big deal.
2015-08-23 17:24:51	Lokathor	:l or :load <modulename>
2015-08-23 17:25:00	Lokathor	:r or :reload to refresh stuff
2015-08-23 17:25:19	Lokathor	:t <expression> to see the type signature of an expression
2015-08-23 17:25:19	Welkin	:t or :type to see the type of something
2015-08-23 17:25:20	lambdabot	parse error on input ‘<’
2015-08-23 17:25:20	lambdabot	parse error on input ‘type’
2015-08-23 17:25:26	Welkin	the most important one :)
2015-08-23 17:25:28	-->	jiang42 (~jiang42@116.237.86.109) has joined #haskell
2015-08-23 17:25:30	Lokathor	those are the major ghci commands
2015-08-23 17:25:33	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-23 17:25:37	 *	Welkin pats lambdabot 
2015-08-23 17:25:44	Lokathor	it tries so hard
2015-08-23 17:26:33	Welkin	wkmanire: you may also want to set the ghci prompt using :set prompt "your-new-prompt"
2015-08-23 17:26:53	<--	ceii (~ceii@2a02:1205:c69a:b6f0:c685:8ff:fe30:8ca2) has quit (Ping timeout: 252 seconds)
2015-08-23 17:27:00	wkmanire	Welkin: I've worked from a few different tutorials inside of ghci.
2015-08-23 17:27:04	Welkin	you can have a .ghci file inside your ~/ghc directory
2015-08-23 17:27:06	<--	fengshaun (~fengshaun@unaffiliated/fengshaun) has quit (Ping timeout: 240 seconds)
2015-08-23 17:27:06	OutlawStar	so i have something really weird going on. I have the following "modifyIORef' ref (\old -> old + alpha)" and alpha is defined in a where as "alpha = 2/(200+1)". Old of type "Double". When i get to that calculation, the entire program stops
2015-08-23 17:27:09	wkmanire	So some of these things I already know, not that I don't appreciate the help :)
2015-08-23 17:27:09	-->	pie_ (~pie_@unaffiliated/pie-/x-0787662) has joined #haskell
2015-08-23 17:27:10	OutlawStar	any ideas?
2015-08-23 17:27:12	Welkin	it loads when you use ghci or cabal repl
2015-08-23 17:27:40	monochrom	but I am unconvinced that you can start "hacking" (I read that as "developing") any time soon, even if someone has already magically set up the ideal IDE for you. this is precisely because haskell is an alien language.
2015-08-23 17:27:41	wkmanire	I'm just finally getting serious about it, so that's why I've been spending the afternoon trying to get a good dev env set up.
2015-08-23 17:27:47	<--	jeadre (~jeadre@li1421-113.members.linode.com) has quit (Remote host closed the connection)
2015-08-23 17:27:49	-->	cognominal (~cognomina@87-231-91-9.rev.numericable.fr) has joined #haskell
2015-08-23 17:27:59	monochrom	P.S. the ideal IDE already exists. it's FP Complete.
2015-08-23 17:28:09	OutlawStar	actually the type is of "Scientific"
2015-08-23 17:28:26	monochrom	https://www.fpcomplete.com/business/haskell-center/overview/
2015-08-23 17:28:26	-->	tommah (~tommah@67-210-179-56.fidnet.com) has joined #haskell
2015-08-23 17:28:42	<--	pie_ (~pie_@unaffiliated/pie-/x-0787662) has quit (Read error: error:1408F10B:SSL routines:SSL3_GET_RECORD:wrong version number)
2015-08-23 17:29:07	-->	fengshaun (~fengshaun@unaffiliated/fengshaun) has joined #haskell
2015-08-23 17:29:12	wkmanire	monochrom: Writing software inside of a web browser? yuck.
2015-08-23 17:29:15	<--	MrScout (~MrScout@unaffiliated/mrscout) has quit (Remote host closed the connection)
2015-08-23 17:29:17	Welkin	OutlawStar: you'll need to paste the code and error
2015-08-23 17:29:18	monochrom	https://ro-che.info/ccc/26
2015-08-23 17:29:24	Welkin	@lpaste
2015-08-23 17:29:25	lambdabot	Haskell pastebin: http://lpaste.net/
2015-08-23 17:29:26	<--	dmj (~user@24.219.67.158) has quit (Ping timeout: 240 seconds)
2015-08-23 17:29:29	OutlawStar	k give me sec
2015-08-23 17:29:38	-->	pie_ (~pie_@unaffiliated/pie-/x-0787662) has joined #haskell
2015-08-23 17:29:45	-->	jeadre (~jeadre@li1421-113.members.linode.com) has joined #haskell
2015-08-23 17:29:51	<--	jiang42 (~jiang42@116.237.86.109) has quit (Ping timeout: 244 seconds)
2015-08-23 17:29:54	-->	delphinas__ (~delphinas@cpc23-seve21-2-0-cust98.13-3.cable.virginm.net) has joined #haskell
2015-08-23 17:29:57	<--	AfC (~andrew@120.18.91.217) has quit (Read error: Connection reset by peer)
2015-08-23 17:30:00	<--	rpfun (~user@ool-44c4b163.dyn.optonline.net) has quit (Ping timeout: 272 seconds)
2015-08-23 17:30:04	Lokathor	monochrom, fpcomplete is far from ideal
2015-08-23 17:30:12	<--	brtmr (~brtmr@x4d0030ac.dyn.telefonica.de) has quit (Remote host closed the connection)
2015-08-23 17:30:18	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 260 seconds)
2015-08-23 17:30:55	wkmanire	monochrom: To be honest, I'm not much of a fan of IDEs to begin with. Haven't used one seriously in yaers.
2015-08-23 17:30:56	wkmanire	years*
2015-08-23 17:31:04	Welkin	emacs :)
2015-08-23 17:31:12	Welkin	no mouse
2015-08-23 17:31:24	wkmanire	Yup.
2015-08-23 17:31:30	Lokathor	1) when i hover my mouse over a symbol, i don't get a popup that tells me its type and source of definition and any possible doc comment.
2015-08-23 17:31:32	OutlawStar	welkin: http://lpaste.net/4972634099320619008
2015-08-23 17:31:42	OutlawStar	once i hid that modifyIO statement, things just pause
2015-08-23 17:31:43	Lokathor	any ideal IDE could clearly do such a thing
2015-08-23 17:32:03	Lokathor	2) i don't think i could develop graphical programs with fpcomplete, could i?
2015-08-23 17:32:04	OutlawStar	i would think alpha would act as constant. When i hard code the value stuff works
2015-08-23 17:32:44	Welkin	OutlawStar: where is the error?
2015-08-23 17:32:47	-->	lilred (~lilred@c-73-36-251-172.hsd1.il.comcast.net) has joined #haskell
2015-08-23 17:32:54	OutlawStar	there is no compile error, but line 6
2015-08-23 17:32:57	OutlawStar	is the problem
2015-08-23 17:33:01	-->	hyy1 (~hyper_ecx@107-219-209-120.lightspeed.snantx.sbcglobal.net) has joined #haskell
2015-08-23 17:33:18	erisco	pretty sure with fp complete you're tied to their cloud service thingie
2015-08-23 17:33:19	<--	fujimura (~fujimura@ngn6-ppp935.tokyo.sannet.ne.jp) has quit (Remote host closed the connection)
2015-08-23 17:33:38	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-23 17:34:12	<--	erisco (~erisco@198-84-154-240.cpe.teksavvy.com) has quit (Quit: Leaving)
2015-08-23 17:34:33	Lokathor	also i cloned one of their example projects
2015-08-23 17:34:35	<--	hmrm (~hmrm@198.244.104.109) has quit (Ping timeout: 245 seconds)
2015-08-23 17:34:36	<--	delphinas__ (~delphinas@cpc23-seve21-2-0-cust98.13-3.cable.virginm.net) has quit (Ping timeout: 264 seconds)
2015-08-23 17:34:39	Lokathor	and the build instantly failed
2015-08-23 17:34:41	<--	dfeuer (~dfeuer@wikimedia/Dfeuer) has quit (Ping timeout: 246 seconds)
2015-08-23 17:34:59	-->	hmrm (~hmrm@198.244.104.109) has joined #haskell
2015-08-23 17:35:04	wkmanire	Welkin: https://www.refheap.com/c581a592a1ef2059b7546104e
2015-08-23 17:35:09	wkmanire	I was able to install everything except for present
2015-08-23 17:35:17	wkmanire	So definitely, things are way better this time around than before. Thank you!
2015-08-23 17:35:21	Welkin	wkmanire: I recommend the upenn haskell course to start
2015-08-23 17:35:24	wkmanire	And everyone else that offered advice.
2015-08-23 17:35:26	Welkin	@where learnhaskell
2015-08-23 17:35:26	lambdabot	https://github.com/bitemyapp/learnhaskell
2015-08-23 17:35:52	<--	chpatrick1 (~chpatrick@217.155.192.24) has quit (Ping timeout: 246 seconds)
2015-08-23 17:36:28	wkmanire	Cool. I'll hang out in #haskell-beginners and work from that doc you linked Welkin
2015-08-23 17:36:34	-->	lethjakman (~lethjakma@71.56.221.51) has joined #haskell
2015-08-23 17:37:35	-->	kmels (~kmels@184.62.151.186.static.intelnet.net.gt) has joined #haskell
2015-08-23 17:37:59	-->	AaronFriel (~AaronFrie@67.212.119.147) has joined #haskell
2015-08-23 17:38:55	--	paf31_away is now known as paf31
2015-08-23 17:39:41	<--	hmrm (~hmrm@198.244.104.109) has quit (Ping timeout: 260 seconds)
2015-08-23 17:39:53	-->	eazar001_ (~ebrahim@99-151-0-118.lightspeed.snrmca.sbcglobal.net) has joined #haskell
2015-08-23 17:40:45	<--	lethjakman (~lethjakma@71.56.221.51) has quit (Ping timeout: 240 seconds)
2015-08-23 17:41:13	<--	eazar001 (~ebrahim@99-151-0-118.lightspeed.snrmca.sbcglobal.net) has quit (Ping timeout: 244 seconds)
2015-08-23 17:41:17	--	eazar001_ is now known as eazar001
2015-08-23 17:42:41	wkmanire	Welkin: http://i.imgur.com/2IN9Hvp.png  http://i.imgur.com/DNPeDiq.png Ta dah!
2015-08-23 17:42:48	wkmanire	Everything is working just fine.
2015-08-23 17:43:47	<--	Welkin (~Welkin@rrcs-97-78-71-196.se.biz.rr.com) has quit (Ping timeout: 246 seconds)
2015-08-23 17:44:02	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Remote host closed the connection)
2015-08-23 17:44:36	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-23 17:45:27	-->	tennix (~ztennix@unaffiliated/tennix) has joined #haskell
2015-08-23 17:45:59	-->	Literphor (~alfred@209.237.92.139) has joined #haskell
2015-08-23 17:47:13	-->	darkbolt_ (~darkbolt@23.252.55.57) has joined #haskell
2015-08-23 17:47:57	<--	marcus-aurelius (~quassel@p20030073AF0E9A373CFA8ABF895120CE.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2015-08-23 17:48:03	 *	hackagebot courier 0.1.1.1 - A message-passing library for simplifying network applications  https://hackage.haskell.org/package/courier-0.1.1.1 (PhilHargett)
2015-08-23 17:48:16	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-23 17:48:35	-->	marcus-aurelius (~quassel@p20030073AF0CA5113CFA8ABF895120CE.dip0.t-ipconnect.de) has joined #haskell
2015-08-23 17:48:37	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Read error: Connection reset by peer)
2015-08-23 17:50:08	-->	mjs2600 (~mjs2600@c-50-156-203-132.hsd1.tn.comcast.net) has joined #haskell
2015-08-23 17:50:37	-->	cbaatz_ (~cb@46-127-141-225.dynamic.hispeed.ch) has joined #haskell
2015-08-23 17:51:06	<--	fullofcaffeine (~fullofcaf@201.164.208.68) has quit (Ping timeout: 240 seconds)
2015-08-23 17:52:35	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 250 seconds)
2015-08-23 17:53:07	<--	marcus-aurelius (~quassel@p20030073AF0CA5113CFA8ABF895120CE.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2015-08-23 17:53:27	<--	cbaatz (cb@gateway/vpn/mullvad/x-xjnqbpygxlxgotad) has quit (Ping timeout: 250 seconds)
2015-08-23 17:54:04	<--	mjs2600 (~mjs2600@c-50-156-203-132.hsd1.tn.comcast.net) has quit (Client Quit)
2015-08-23 17:54:05	<--	yqt (~yqt@81.88.230.28) has quit (Ping timeout: 240 seconds)
2015-08-23 17:54:06	<--	ap01 (~anshu@ool-457c0ba3.dyn.optonline.net) has quit (Ping timeout: 255 seconds)
2015-08-23 17:54:42	-->	somepunk (~rohinpate@pool-71-160-20-236.lsanca.dsl-w.verizon.net) has joined #haskell
2015-08-23 17:54:50	-->	sku1d (~freenode@typesafe.de) has joined #haskell
2015-08-23 17:55:10	-->	wildlander (~wild@unaffiliated/wildlander) has joined #haskell
2015-08-23 17:55:22	-->	AfC (~andrew@120.18.182.87) has joined #haskell
2015-08-23 17:55:30	<--	Sornaensis (~Sornaensi@vs2352.corenetworks.net) has quit (Excess Flood)
2015-08-23 17:55:38	-->	Sornaensis (~Sornaensi@vs2352.corenetworks.net) has joined #haskell
2015-08-23 17:56:25	<--	acidjnk (acid@p4FDFC0B4.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2015-08-23 17:56:48	<--	nolrai66 (~HWSoD@c-73-190-72-21.hsd1.or.comcast.net) has quit (Quit: Leaving)
2015-08-23 17:57:25	<--	plucas (~plucas@c-67-188-43-50.hsd1.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-23 17:57:31	<--	sku1d (~freenode@typesafe.de) has quit (Read error: Connection reset by peer)
2015-08-23 17:57:36	<--	echo-area (~user@123.112.239.196) has quit (Remote host closed the connection)
2015-08-23 17:58:06	-->	ap01 (~anshu@ool-457c0ba3.dyn.optonline.net) has joined #haskell
2015-08-23 17:58:55	-->	sku1d (~freenode@typesafe.de) has joined #haskell
2015-08-23 18:01:35	<--	dgonyeo (~dgonyeo@2620:8d:8000:e50:9905:c421:2b29:6e99) has quit (Quit: ZNC - http://znc.in)
2015-08-23 18:02:06	<--	jeadre (~jeadre@li1421-113.members.linode.com) has quit (Remote host closed the connection)
2015-08-23 18:02:56	-->	lritter (~lritter@f053081101.adsl.alicedsl.de) has joined #haskell
2015-08-23 18:03:04	 *	hackagebot libmpd 0.9.0.3 - An MPD client library.  https://hackage.haskell.org/package/libmpd-0.9.0.3 (JoachimFasting)
2015-08-23 18:04:04	-->	jeadre (~jeadre@li1421-113.members.linode.com) has joined #haskell
2015-08-23 18:04:35	-->	griotspeak (~textual@c-73-43-185-207.hsd1.ga.comcast.net) has joined #haskell
2015-08-23 18:04:57	-->	darenthis (~darenthis@cpc76742-dals23-2-0-cust353.20-2.cable.virginm.net) has joined #haskell
2015-08-23 18:05:02	<--	enaqx (~enaqx@188.163.69.11) has quit (Remote host closed the connection)
2015-08-23 18:05:16	-->	enaqx (~enaqx@188.163.69.11) has joined #haskell
2015-08-23 18:05:35	<--	sku1d (~freenode@typesafe.de) has quit (Ping timeout: 250 seconds)
2015-08-23 18:05:37	<--	d3lxa (~d3lxa@vneko.ch) has quit (Ping timeout: 246 seconds)
2015-08-23 18:05:47	<--	enaqx (~enaqx@188.163.69.11) has quit (Remote host closed the connection)
2015-08-23 18:06:33	<--	kranius (~kranius@abo-243-129-68.bdx.modulonet.fr) has quit (Read error: Connection reset by peer)
2015-08-23 18:06:38	-->	sku1d (~freenode@typesafe.de) has joined #haskell
2015-08-23 18:08:14	--	urodna_ is now known as urodna
2015-08-23 18:08:18	<--	urodna (~urodna@cpe-68-174-17-78.si.res.rr.com) has quit (Changing host)
2015-08-23 18:08:18	-->	urodna (~urodna@unaffiliated/urodna) has joined #haskell
2015-08-23 18:08:20	<--	codesoup (~codesoup@CPE68b6fcf580d3-CM68b6fcf580d0.cpe.net.cable.rogers.com) has quit (Read error: Connection timed out)
2015-08-23 18:09:01	-->	fujimura (~fujimura@ngn6-ppp935.tokyo.sannet.ne.jp) has joined #haskell
2015-08-23 18:09:05	<--	Noldorin (~noldorin@unaffiliated/noldorin) has quit (Ping timeout: 260 seconds)
2015-08-23 18:09:10	<--	darenthis (~darenthis@cpc76742-dals23-2-0-cust353.20-2.cable.virginm.net) has quit (Ping timeout: 240 seconds)
2015-08-23 18:09:45	<--	caconym_ (~caconym@c-174-61-225-27.hsd1.wa.comcast.net) has quit (Ping timeout: 265 seconds)
2015-08-23 18:10:08	<--	rcyr (~rcyr@modemcable204.138-163-184.mc.videotron.ca) has quit (Quit: Bye!)
2015-08-23 18:10:24	-->	fullofcaffeine (~fullofcaf@201.164.208.68) has joined #haskell
2015-08-23 18:10:29	-->	sdfgsdfg (~sdfgsdfg@unaffiliated/sdfgsdfg) has joined #haskell
2015-08-23 18:10:43	<--	caconym (~caconym@unaffiliated/caconym) has quit (Ping timeout: 265 seconds)
2015-08-23 18:10:51	<--	fuzzyhorns (~fuzzyhorn@73.38.57.191) has quit (Remote host closed the connection)
2015-08-23 18:10:54	<--	kmels (~kmels@184.62.151.186.static.intelnet.net.gt) has quit (Ping timeout: 260 seconds)
2015-08-23 18:11:05	-->	fuzzyhorns (~fuzzyhorn@73.38.57.191) has joined #haskell
2015-08-23 18:11:05	<--	favonia (~favonia@pdpc/supporter/student/favonia) has quit (Ping timeout: 246 seconds)
2015-08-23 18:11:13	-->	rotaerk1 (~rotaerk@c-73-187-161-141.hsd1.pa.comcast.net) has joined #haskell
2015-08-23 18:11:37	-->	javjarfer__ (~javjarfer@6.Red-79-154-31.dynamicIP.rima-tde.net) has joined #haskell
2015-08-23 18:12:09	<--	JoWie (uid93456@gateway/web/irccloud.com/x-dmxyanqiqvlsydvl) has quit (Quit: Connection closed for inactivity)
2015-08-23 18:12:21	-->	kranius (~kranius@abo-243-129-68.bdx.modulonet.fr) has joined #haskell
2015-08-23 18:13:19	<--	fujimura (~fujimura@ngn6-ppp935.tokyo.sannet.ne.jp) has quit (Ping timeout: 246 seconds)
2015-08-23 18:13:22	-->	EunChe (~eunche@59.29.232.172) has joined #haskell
2015-08-23 18:14:11	<--	EunChe (~eunche@59.29.232.172) has quit (Remote host closed the connection)
2015-08-23 18:14:18	-->	EunChe (~eunche@59.29.232.172) has joined #haskell
2015-08-23 18:14:22	<--	javjarfer_ (~javjarfer@228.Red-88-3-105.dynamicIP.rima-tde.net) has quit (Ping timeout: 246 seconds)
2015-08-23 18:14:31	-->	ttt_fff (c01f699a@gateway/web/freenode/ip.192.31.105.154) has joined #haskell
2015-08-23 18:14:38	<--	sku1d (~freenode@typesafe.de) has quit (Ping timeout: 260 seconds)
2015-08-23 18:15:06	ttt_fff	is there any webframework that uses both ghc + ghcjs? I really like the way where in haste, you can write the entire wbapp (server + client) part as a single app, where there is a Server monad and a Client monad
2015-08-23 18:15:57	<--	Lis (~Lis@p5B2CE976.dip0.t-ipconnect.de) has quit (Quit: http://www.youtube.com/user/warnermusicde?v=IcoqJCJlHbQ)
2015-08-23 18:16:20	-->	rpfun (~user@ool-44c4b163.dyn.optonline.net) has joined #haskell
2015-08-23 18:16:27	<--	rpfun (~user@ool-44c4b163.dyn.optonline.net) has left #haskell
2015-08-23 18:16:29	<--	comprehension (~patrick@99-112-125-117.lightspeed.cicril.sbcglobal.net) has quit (Ping timeout: 256 seconds)
2015-08-23 18:16:53	-->	OrangeShark (~OrangeSha@2602:306:c5c9:a3e0:6c04:1b68:1da:3301) has joined #haskell
2015-08-23 18:17:08	-->	doodlehaus (~doodlehau@97-83-255-237.dhcp.stpt.wi.charter.com) has joined #haskell
2015-08-23 18:17:26	-->	sku1d (~freenode@typesafe.de) has joined #haskell
2015-08-23 18:18:04	 *	hackagebot leksah 0.15.1.4 - Haskell IDE written in Haskell  https://hackage.haskell.org/package/leksah-0.15.1.4 (HamishMackenzie)
2015-08-23 18:18:15	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined #haskell
2015-08-23 18:19:06	-->	codesoup (~codesoup@CPE68b6fcf580d3-CM68b6fcf580d0.cpe.net.cable.rogers.com) has joined #haskell
2015-08-23 18:20:44	<--	kranius (~kranius@abo-243-129-68.bdx.modulonet.fr) has quit (Read error: Connection reset by peer)
2015-08-23 18:20:45	<--	mgsloan_ (~mgsloan@97-113-58-178.tukw.qwest.net) has quit (Ping timeout: 250 seconds)
2015-08-23 18:21:07	-->	tmtwd (~tmtwd@CPE0c473da71813-CM0c473da71810.cpe.net.cable.rogers.com) has joined #haskell
2015-08-23 18:21:10	<--	mgsloan (~mgsloan@97-113-58-178.tukw.qwest.net) has quit (Ping timeout: 260 seconds)
2015-08-23 18:23:00	<--	ybian (~ybian@119.254.120.72) has quit (Remote host closed the connection)
2015-08-23 18:23:03	-->	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has joined #haskell
2015-08-23 18:23:34	<--	carlosgaldino (~textual@179.228.14.124) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-23 18:24:16	-->	ybian (~ybian@119.254.120.72) has joined #haskell
2015-08-23 18:24:36	<--	doodlehaus (~doodlehau@97-83-255-237.dhcp.stpt.wi.charter.com) has quit (Remote host closed the connection)
2015-08-23 18:24:48	-->	dimday (~amcvega@119.81.31.30-static.reverse.softlayer.com) has joined #haskell
2015-08-23 18:26:29	-->	kranius (~kranius@abo-243-129-68.bdx.modulonet.fr) has joined #haskell
2015-08-23 18:26:29	<--	sku1d (~freenode@typesafe.de) has quit (Ping timeout: 246 seconds)
2015-08-23 18:26:51	<--	hzjd (~Adium@c-50-177-23-40.hsd1.ma.comcast.net) has quit (Quit: Leaving.)
2015-08-23 18:27:04	cj3kim	wkmanire: which terminal are you using?
2015-08-23 18:27:04	<--	fullofcaffeine (~fullofcaf@201.164.208.68) has quit (Remote host closed the connection)
2015-08-23 18:27:24	<--	bob_twinkles (~bob_twink@2607:b400:a4:4210:6e62:6dff:fe40:f3b4) has quit (Quit: WeeChat 1.3)
2015-08-23 18:29:02	<--	ohpesky (~ohpesky@DHCP-23105.iis.sinica.edu.tw) has quit (Quit: leaving)
2015-08-23 18:29:22	<--	horatiohb (~horatiohb@c-73-141-74-133.hsd1.pa.comcast.net) has quit (Quit: leaving)
2015-08-23 18:29:53	-->	rodlogic_ (~rodlogic@71.235.61.168) has joined #haskell
2015-08-23 18:29:56	-->	sku1d (~freenode@typesafe.de) has joined #haskell
2015-08-23 18:30:23	-->	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has joined #haskell
2015-08-23 18:30:55	-->	delphinas__ (~delphinas@cpc23-seve21-2-0-cust98.13-3.cable.virginm.net) has joined #haskell
2015-08-23 18:31:36	<--	rodlogic (~rodlogic@71.235.61.168) has quit (Ping timeout: 264 seconds)
2015-08-23 18:32:52	<--	tempname11 (~tempname1@79.165.104.134) has quit (Read error: Connection reset by peer)
2015-08-23 18:33:01	-->	rodlogic (~rodlogic@71.235.61.168) has joined #haskell
2015-08-23 18:33:05	<--	junmin (~junmin@189-210-226-30.static.axtel.net) has quit (Remote host closed the connection)
2015-08-23 18:33:08	-->	tempname11 (~tempname1@79.165.104.134) has joined #haskell
2015-08-23 18:33:11	-->	Laserbear (~Laserbear@c-73-223-160-142.hsd1.ca.comcast.net) has joined #haskell
2015-08-23 18:34:10	<--	sku1d (~freenode@typesafe.de) has quit (Ping timeout: 240 seconds)
2015-08-23 18:34:25	<--	rodlogic_ (~rodlogic@71.235.61.168) has quit (Read error: Connection reset by peer)
2015-08-23 18:34:46	<--	jomg (~jomg@ip5f5ad5bc.dynamic.kabel-deutschland.de) has quit (Quit: Leaving)
2015-08-23 18:35:32	<--	indiagreen (~indiagree@95-28-74-227.broadband.corbina.ru) has quit (Remote host closed the connection)
2015-08-23 18:35:33	-->	sku1d (~freenode@typesafe.de) has joined #haskell
2015-08-23 18:35:41	<--	delphinas__ (~delphinas@cpc23-seve21-2-0-cust98.13-3.cable.virginm.net) has quit (Ping timeout: 260 seconds)
2015-08-23 18:35:49	<--	somepunk (~rohinpate@pool-71-160-20-236.lsanca.dsl-w.verizon.net) has quit (Ping timeout: 252 seconds)
2015-08-23 18:35:54	<--	kranius (~kranius@abo-243-129-68.bdx.modulonet.fr) has quit (Read error: Connection reset by peer)
2015-08-23 18:36:02	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-23 18:36:06	<--	lilred (~lilred@c-73-36-251-172.hsd1.il.comcast.net) has quit (Remote host closed the connection)
2015-08-23 18:36:21	-->	fullofcaffeine (~fullofcaf@201.164.208.68) has joined #haskell
2015-08-23 18:36:31	-->	Welkin (~Welkin@rrcs-97-78-71-196.se.biz.rr.com) has joined #haskell
2015-08-23 18:37:00	<--	piezoid (~piezoid@tsv35-1-78-232-144-90.fbx.proxad.net) has quit (Ping timeout: 264 seconds)
2015-08-23 18:37:11	-->	spopejoy (~stuart@ool-45785f12.dyn.optonline.net) has joined #haskell
2015-08-23 18:37:47	-->	kolko (~kolko@46.48.58.17) has joined #haskell
2015-08-23 18:38:23	<--	jp_rider (~Adium@2601:152:4103:4410:1895:eae6:d5cc:4966) has quit (Quit: Leaving.)
2015-08-23 18:39:28	<--	DrAwesomeClaws (~DrAwesome@104.156.228.92) has quit (Read error: Connection reset by peer)
2015-08-23 18:39:52	-->	jp_rider (~Adium@c-73-134-205-106.hsd1.md.comcast.net) has joined #haskell
2015-08-23 18:40:05	-->	DrAwesomeClaws (~DrAwesome@104.156.228.92) has joined #haskell
2015-08-23 18:40:37	-->	FreeBirdLjj (~freebirdl@180.110.7.116) has joined #haskell
2015-08-23 18:40:48	Welkin	why would you ever use StateT and State together?
2015-08-23 18:41:20	<--	swgillespie (~textual@104.232.112.57) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-23 18:41:39	-->	kranius (~kranius@abo-243-129-68.bdx.modulonet.fr) has joined #haskell
2015-08-23 18:41:41	<--	jp_rider (~Adium@c-73-134-205-106.hsd1.md.comcast.net) has quit (Client Quit)
2015-08-23 18:42:03	<--	jdt (~user@208.85.233.130) has quit (Remote host closed the connection)
2015-08-23 18:42:47	-->	Goplat (~goplat@reactos/developer/Goplat) has joined #haskell
2015-08-23 18:43:33	<--	kranius (~kranius@abo-243-129-68.bdx.modulonet.fr) has quit (Client Quit)
2015-08-23 18:44:10	<--	doomlord (~textual@host86-157-65-192.range86-157.btcentralplus.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-23 18:45:47	<--	rgr (~user@f054134236.adsl.alicedsl.de) has quit (Ping timeout: 250 seconds)
2015-08-23 18:48:23	<--	AaronFriel (~AaronFrie@67.212.119.147) has quit (Ping timeout: 244 seconds)
2015-08-23 18:48:23	<--	k0001 (~k0001@unaffiliated/k0001) has quit (Read error: Connection reset by peer)
2015-08-23 18:48:48	-->	k0001 (~k0001@host194.186-108-120.telecom.net.ar) has joined #haskell
2015-08-23 18:49:13	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-23 18:50:02	jle`	in the scalable situation you wouldn't probably use State
2015-08-23 18:50:16	jle`	you'd probably always use Monad m => StateT s m a in place of State s a
2015-08-23 18:50:20	kristof	When you want to keep track of two different States in a big ol' Monad.
2015-08-23 18:51:00	jle`	so if your program is in `StateT s IO a`, but you want to write a subroutine that only manipulates the state and doesn't use IO (and want to statically guaruntee that it doesn't use IO), you can write that subroutine in Monad m => StateT s m a
2015-08-23 18:51:01	kristof	oh, that could just be one big state. I dunno, then.
2015-08-23 18:51:15	<--	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has quit (Ping timeout: 255 seconds)
2015-08-23 18:51:28	<--	tsani (~tsani@jerrington.me) has quit (Remote host closed the connection)
2015-08-23 18:51:29	jle`	that way you can mix state-involving-IO with state-not-involving-IO in the same computation, and be able to statically demonstrate that latter doesn't involve IO
2015-08-23 18:51:43	jle`	whereas if you wrote your state-not-involving-IO in StateT s IO a, you wouldn't be able to guaruntee for sure from the type alone
2015-08-23 18:51:54	<--	ddere (~Adium@pa49-195-148-164.pa.nsw.optusnet.com.au) has quit (Quit: Leaving.)
2015-08-23 18:52:26	<--	cdidd (~cdidd@unaffiliated/cdidd) has quit (Ping timeout: 260 seconds)
2015-08-23 18:52:45	-->	tomberek_ (64244d9a@gateway/web/freenode/ip.100.36.77.154) has joined #haskell
2015-08-23 18:52:59	-->	mgsloan (~mgsloan@172.56.32.146) has joined #haskell
2015-08-23 18:53:03	-->	mgsloan_ (~mgsloan@172.56.32.146) has joined #haskell
2015-08-23 18:53:27	-->	rodlogic_ (~rodlogic@71.235.61.168) has joined #haskell
2015-08-23 18:53:38	-->	stass (stas@ssh.deglitch.com) has joined #haskell
2015-08-23 18:54:02	-->	rcyr (~rcyr@modemcable204.138-163-184.mc.videotron.ca) has joined #haskell
2015-08-23 18:54:15	Welkin	jle`: good explanation
2015-08-23 18:54:15	-->	Abd4llA (~Abd4llA@41.45.34.60) has joined #haskell
2015-08-23 18:54:18	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 260 seconds)
2015-08-23 18:55:05	jle`	so if you know you might eventually use StateT one day or are using it at the moment, there probably really isn't any good reason to use State
2015-08-23 18:55:09	tomberek_	bimapM :: Monad m => (t -> m a) -> (s -> m b) -> (t,s) -> m (a,b)
2015-08-23 18:55:15	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-23 18:55:26	jle`	considering `runState` and `execState` etc. all run on Monad m => StateT s m a
2015-08-23 18:55:30	<--	rodlogic (~rodlogic@71.235.61.168) has quit (Ping timeout: 272 seconds)
2015-08-23 18:55:39	Welkin	jle`: I'm just filling my knowledge gaps in haskell, and tonight is monad transformers
2015-08-23 18:55:49	tomberek_	does this exist anywhere? seems to be perhaps Applicative?
2015-08-23 18:56:26	<--	mkster_ (~mkster@i577B498C.versanet.de) has quit (Read error: Connection reset by peer)
2015-08-23 18:57:25	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Read error: Connection reset by peer)
2015-08-23 18:57:31	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-23 18:57:34	Welkin	tomberek_: like a monadic version of (***)?
2015-08-23 18:57:56	tomberek_	yeah
2015-08-23 18:58:02	tomberek_	exactly
2015-08-23 18:58:33	--	paf31 is now known as paf31_away
2015-08-23 18:58:37	jle`	looks like (***) for the Kleisli newtype wrapper
2015-08-23 18:58:44	jle`	but there's also
2015-08-23 18:58:45	tempname11	http://hackage.haskell.org/package/bifunctors-5/docs/Data-Bitraversable.html#v:bimapM ?
2015-08-23 18:58:52	jle`	:t uncurry (liftA2 (,))
2015-08-23 18:58:53	lambdabot	Applicative f => (f a, f b) -> f (a, b)
2015-08-23 18:59:13	tomberek_	Welkin: i'm working with effectful arrows...  arrM f *** arrM g ===>>    arrM ( bimapM f g) would be an optimization
2015-08-23 19:00:03	jle`	it looks like exactly what tempname11 posted, with the same name too, heh
2015-08-23 19:00:24	tomberek_	:t (uncurry (liftA2 (,)) . bimap
2015-08-23 19:00:27	<--	drbean (~drbean@124.219.83.107) has quit (Quit: ZNC - http://znc.in)
2015-08-23 19:00:31	lambdabot	    parse error (possibly incorrect indentation or mismatched brackets)
2015-08-23 19:00:47	-->	chpatrick1 (~chpatrick@217.155.192.24) has joined #haskell
2015-08-23 19:01:05	<--	Sindriava (~textual@250.99.broadband10.iol.cz) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-23 19:01:17	jle`	:t \f g -> uncurry (liftA2 (,)) . bimap f g
2015-08-23 19:01:18	lambdabot	Applicative f => (a1 -> f a) -> (c -> f b) -> (a1, c) -> f (a, b)
2015-08-23 19:01:19	tomberek_	bitraverse is good too
2015-08-23 19:01:40	<--	bergey (~user@pool-71-175-195-73.phlapa.east.verizon.net) has quit (Quit: ERC (IRC client for Emacs 24.5.1))
2015-08-23 19:01:50	<--	kristof (~kristof@unaffiliated/kristof) has quit (Ping timeout: 272 seconds)
2015-08-23 19:01:51	jle`	not a savory usage of uncurry
2015-08-23 19:01:51	tomberek_	in fact, bitraverse is probably what I want to use the optimal Applicative instance
2015-08-23 19:02:50	<--	michaelneale (~textual@ppp121-44-158-193.lns20.syd7.internode.on.net) has quit (Quit: Back later)
2015-08-23 19:02:54	-->	cads (~M@104-9-5-196.lightspeed.tukrga.sbcglobal.net) has joined #haskell
2015-08-23 19:03:09	<--	Literphor (~alfred@209.237.92.139) has quit (Quit: Literphor)
2015-08-23 19:03:27	-->	fujimura (~fujimura@ngn6-ppp935.tokyo.sannet.ne.jp) has joined #haskell
2015-08-23 19:03:32	-->	saulzar_ (~oliver@121-74-241-215.telstraclear.net) has joined #haskell
2015-08-23 19:06:08	-->	hucksy (~hucksy@p549FC42D.dip0.t-ipconnect.de) has joined #haskell
2015-08-23 19:06:18	-->	Herogx_ (~Herogx@109.77.232.168) has joined #haskell
2015-08-23 19:06:33	--	hucksy is now known as Guest66600
2015-08-23 19:07:24	-->	michel_slm (uid16025@gateway/web/irccloud.com/x-ulnwsyzbwxlbigyi) has joined #haskell
2015-08-23 19:07:40	tomberek_	jle`: actually https://hackage.haskell.org/package/monad-parallel-0.7.1.4/docs/Control-Monad-Parallel.html#v:bindM2 seems to be very applicable to what I want, and it already has instances defined
2015-08-23 19:07:47	<--	osa1 (~omer@2601:801:1:4a07:2ab2:bdff:fedf:fa66) has quit (Ping timeout: 246 seconds)
2015-08-23 19:07:58	<--	fujimura (~fujimura@ngn6-ppp935.tokyo.sannet.ne.jp) has quit (Ping timeout: 250 seconds)
2015-08-23 19:08:14	-->	jp_rider (~Adium@c-73-134-205-106.hsd1.md.comcast.net) has joined #haskell
2015-08-23 19:08:16	<--	astupididiot (~sv@ool-3f8fe4df.dyn.optonline.net) has quit (Ping timeout: 246 seconds)
2015-08-23 19:09:41	<--	Herogx (~Herogx@109.77.98.52) has quit (Ping timeout: 265 seconds)
2015-08-23 19:09:54	-->	osa1 (~omer@2601:801:1:4a07:2ab2:bdff:fedf:fa66) has joined #haskell
2015-08-23 19:09:55	<--	Guest64297 (~hucksy@p5B375873.dip0.t-ipconnect.de) has quit (Ping timeout: 252 seconds)
2015-08-23 19:10:15	-->	astupididiot (~sv@ool-3f8fe4df.dyn.optonline.net) has joined #haskell
2015-08-23 19:11:39	<--	latro`a (~latro`a@2601:14a:4002:86bb:31e4:896c:b570:a66d) has quit (Ping timeout: 244 seconds)
2015-08-23 19:12:09	<--	Eric-K1 (Eric-K@gateway/vpn/mullvad/x-doqxnyenvtdntdgx) has quit (Remote host closed the connection)
2015-08-23 19:12:24	-->	mizu_no_oto (~textual@c-73-219-2-228.hsd1.ma.comcast.net) has joined #haskell
2015-08-23 19:12:44	<--	jp_rider (~Adium@c-73-134-205-106.hsd1.md.comcast.net) has quit (Client Quit)
2015-08-23 19:13:01	-->	jp_rider (~Adium@2601:152:4103:4410:b8fa:88db:6d23:26dc) has joined #haskell
2015-08-23 19:13:11	<--	chpatrick1 (~chpatrick@217.155.192.24) has quit (Ping timeout: 244 seconds)
2015-08-23 19:14:27	-->	AaronFriel (~AaronFrie@67.212.119.147) has joined #haskell
2015-08-23 19:14:29	-->	kristof (~kristof@unaffiliated/kristof) has joined #haskell
2015-08-23 19:14:41	<--	teclo- (42@unaffiliated/teclo) has quit (Ping timeout: 252 seconds)
2015-08-23 19:15:30	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-23 19:15:37	-->	ddere (~Adium@pa49-195-148-164.pa.nsw.optusnet.com.au) has joined #haskell
2015-08-23 19:15:46	--	hattusili_III_ is now known as hattusili_III
2015-08-23 19:15:54	-->	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has joined #haskell
2015-08-23 19:15:59	<--	hattusili_III (~mark@c-98-226-100-250.hsd1.in.comcast.net) has quit (Changing host)
2015-08-23 19:15:59	-->	hattusili_III (~mark@unaffiliated/hattusili-iii/x-8359377) has joined #haskell
2015-08-23 19:15:59	-->	teclo- (42@unaffiliated/teclo) has joined #haskell
2015-08-23 19:16:21	<--	int-index (~int-index@31.42.47.99) has quit (Quit: Leaving)
2015-08-23 19:16:39	<--	kriwil (~kriwil@irc.kriwil.id) has quit (Ping timeout: 250 seconds)
2015-08-23 19:17:05	-->	juiko (~user@pc-208-163-120-200.cm.vtr.net) has joined #haskell
2015-08-23 19:17:50	<--	RegEchse (~regechse@ipbcc0bf64.dynamic.kabel-deutschland.de) has quit (Quit: <3 WeeChat (v1.4-dev))
2015-08-23 20:37:21	--	irc: disconnected from server
2015-08-23 20:37:39	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:8499:bf9a:209b:fded) has joined #haskell
2015-08-23 20:37:39	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-23 20:37:39	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-23 20:37:39	--	Channel #haskell: 1447 nicks (1 op, 0 voices, 1446 normals)
2015-08-23 20:37:39	--	URL for #haskell: http://www.haskell.org/
2015-08-23 20:37:40	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-23 20:37:52	-->	refefer (~astanton@c-67-169-79-199.hsd1.ca.comcast.net) has joined #haskell
2015-08-23 20:37:59	tomberek_	my thought was to use bindM2 whenever I come across that *** expression.  Hence my question about the cost of synchronization. ie. how big of a computation would benefit? 10 clock cycles, 100? 1000?
2015-08-23 20:38:17	<--	junmin (~junmin@189-210-226-30.static.axtel.net) has quit (Ping timeout: 252 seconds)
2015-08-23 20:38:27	tomberek_	assuming a simple combining function like (,)
2015-08-23 20:39:20	-->	solatis (~user@49.156.41.254) has joined #haskell
2015-08-23 20:39:50	<--	cyphase (~cyphase@unaffiliated/cyphase) has quit (Ping timeout: 246 seconds)
2015-08-23 20:39:51	<--	d3lxa (~d3lxa@vneko.ch) has quit (Ping timeout: 256 seconds)
2015-08-23 20:40:19	<--	hmrm (~hmrm@198.244.104.109) has quit (Ping timeout: 246 seconds)
2015-08-23 20:41:04	kristof	:t ($)
2015-08-23 20:41:05	lambdabot	(a -> b) -> a -> b
2015-08-23 20:41:07	--	paf31 is now known as paf31_away
2015-08-23 20:43:31	<--	creichert (~creichert@c-50-162-14-193.hsd1.tx.comcast.net) has quit (Quit: Leaving)
2015-08-23 20:44:04	<--	mac10688 (~mac10688@c-69-180-251-120.hsd1.tn.comcast.net) has quit (Ping timeout: 250 seconds)
2015-08-23 20:45:05	<--	dramforever (~wang_rk@unaffiliated/dramforever) has quit (Quit: Leaving.)
2015-08-23 20:49:19	--	irc: disconnected from server
2015-08-23 20:49:37	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:8499:bf9a:209b:fded) has joined #haskell
2015-08-23 20:49:37	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-23 20:49:37	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-23 20:49:38	--	Channel #haskell: 1438 nicks (1 op, 0 voices, 1437 normals)
2015-08-23 20:49:38	--	URL for #haskell: http://www.haskell.org/
2015-08-23 20:49:38	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-23 20:49:40	<--	wedens (~wedens@unaffiliated/wedens) has quit (Quit: WeeChat 1.2)
2015-08-23 20:50:58	-->	jack_rabbit (~jack_rabb@2601:240:8200:2380:6a17:29ff:fef6:76d8) has joined #haskell
2015-08-23 20:51:14	<--	i-amd3 (~i_amd3@125x102x70x118.ap125.ftth.ucom.ne.jp) has quit (Remote host closed the connection)
2015-08-23 20:51:22	-->	hmrm (~hmrm@198.244.104.109) has joined #haskell
2015-08-23 20:51:22	<--	W1nd5urf (~B04rd@unaffiliated/w1nd5urf) has quit (Read error: Connection reset by peer)
2015-08-23 20:51:44	<--	vili (~nick@2605:a000:ffc0:44:1da3:8295:212f:ece1) has quit (Ping timeout: 246 seconds)
2015-08-23 20:51:48	-->	fujimura (~fujimura@ngn6-ppp935.tokyo.sannet.ne.jp) has joined #haskell
2015-08-23 20:52:05	<--	lethjakman (~lethjakma@71.56.221.51) has quit (Ping timeout: 246 seconds)
2015-08-23 20:52:15	-->	W1nd5urf (~B04rd@unaffiliated/w1nd5urf) has joined #haskell
2015-08-23 20:52:39	<--	W1nd5urf (~B04rd@unaffiliated/w1nd5urf) has quit (Read error: Connection reset by peer)
2015-08-23 20:53:16	-->	xacktm (xacktm@unaffiliated/xacktm) has joined #haskell
2015-08-23 20:54:10	-->	vili (~nick@2605:a000:ffc0:44:1da3:8295:212f:ece1) has joined #haskell
2015-08-23 20:54:39	-->	lethjakman (~lethjakma@71.56.221.51) has joined #haskell
2015-08-23 20:54:42	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-23 20:54:50	-->	Or1 (~ori@c-50-167-211-105.hsd1.ga.comcast.net) has joined #haskell
2015-08-23 20:55:25	<--	hmrm (~hmrm@198.244.104.109) has quit (Ping timeout: 245 seconds)
2015-08-23 20:55:50	<--	fujimura (~fujimura@ngn6-ppp935.tokyo.sannet.ne.jp) has quit (Ping timeout: 240 seconds)
2015-08-23 20:56:19	-->	lilred (~lilred@c-73-36-251-172.hsd1.il.comcast.net) has joined #haskell
2015-08-23 20:56:53	jle`	hm, according to algebra and stuff, Bool -> Either a b is equivalent to Either (Bool -> a) (Either (Bool -> b) (Bool, a b))
2015-08-23 20:57:01	jle`	that wasn't too obvious
2015-08-23 20:57:04	<--	Guest5857 (~Abd4llA@41.45.34.60) has quit (Ping timeout: 250 seconds)
2015-08-23 20:57:05	-->	emc2 (~emc2@2001:470:1f11:617:5ef7:830:9e60:2038) has joined #haskell
2015-08-23 20:57:21	jle`	* (Boo, a, b) as the last one
2015-08-23 20:57:58	-->	gothicsouth (~gothicsou@cpe-76-177-66-223.natcky.res.rr.com) has joined #haskell
2015-08-23 20:58:33	jle`	@djinn (Bool -> Either a b) -> Either (Bool -> a) (Either (Bool -> b) (Bool, a, b))
2015-08-23 20:58:34	lambdabot	f a =
2015-08-23 20:58:34	lambdabot	    case a False of
2015-08-23 20:58:34	lambdabot	    Left b -> case a True of
2015-08-23 20:58:34	lambdabot	              Left c -> Left (\ _ -> c)
2015-08-23 20:58:34	lambdabot	              Right d -> Right (Right (False, b, d))
2015-08-23 20:58:36	lambdabot	    Right e -> case a True of
2015-08-23 20:58:38	lambdabot	               Left f -> Right (Right (False, f, e))
2015-08-23 20:58:40	lambdabot	               Right g -> Right (Left (\ h ->
2015-08-23 20:58:42	lambdabot	                                       case h of
2015-08-23 20:58:44	lambdabot	                                       False -> g
2015-08-23 20:58:46	lambdabot	                                       True -> e))
2015-08-23 20:59:05	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 246 seconds)
2015-08-23 20:59:10	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-23 20:59:37	<--	gothicso_ (~gothicsou@gateway/vpn/privateinternetaccess/gothicsouth) has quit (Ping timeout: 244 seconds)
2015-08-23 21:00:12	shachaf	I think it's pretty straightforward.
2015-08-23 21:00:34	shachaf	(Either a b, Either a b) -- either you have two as, or two bs, or one a and one b, in two possible orders.
2015-08-23 21:00:42	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-23 21:01:29	-->	hzjd (~Adium@c-50-177-23-40.hsd1.ma.comcast.net) has joined #haskell
2015-08-23 21:02:17	jle`	ah, in that form it's a lot more clear ><
2015-08-23 21:02:18	<--	c_wraith (~c_wraith@28d244188882.click-network.com) has quit (Quit: Leaving)
2015-08-23 21:02:26	nitrix	Type permutations! Comming in a GHC near you...
2015-08-23 21:02:40	-->	cyphase (~cyphase@2601:640:c400:b560:1965:b90e:5216:23e5) has joined #haskell
2015-08-23 21:02:41	<--	cyphase (~cyphase@2601:640:c400:b560:1965:b90e:5216:23e5) has quit (Changing host)
2015-08-23 21:02:41	-->	cyphase (~cyphase@unaffiliated/cyphase) has joined #haskell
2015-08-23 21:02:41	-->	c_wraith (~c_wraith@28d244188882.click-network.com) has joined #haskell
2015-08-23 21:03:10	-->	jessicah_ (uid33885@awos/contributor/jessicah) has joined #haskell
2015-08-23 21:03:14	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 244 seconds)
2015-08-23 21:03:24	johnw	a^2 + 2ab + b^2
2015-08-23 21:03:33	jle`	now to imagine the corresponding propositional logic statement
2015-08-23 21:04:44	<--	SparkySparkyBoom (~sparky@unaffiliated/nyx114) has quit (Quit: WeeChat 1.2-dev)
2015-08-23 21:04:59	<--	Nylidian (~Nylidian@CPE84948c37ad51-CM84948c37ad50.cpe.net.cable.rogers.com) has quit (Quit: Leaving)
2015-08-23 21:05:07	-->	wedens (~wedens@unaffiliated/wedens) has joined #haskell
2015-08-23 21:05:29	-->	cognominal (~cognomina@87-231-91-9.rev.numericable.fr) has joined #haskell
2015-08-23 21:05:43	-->	kristof (~kristof@unaffiliated/kristof) has joined #haskell
2015-08-23 21:05:47	jle`	hm, the djinn result actually doesn't give the isomorphism
2015-08-23 21:05:49	--	jessicah_ is now known as jessicah`
2015-08-23 21:06:02	-->	jinblack (~jinblack@ip184-189-234-229.sb.sd.cox.net) has joined #haskell
2015-08-23 21:06:28	-->	lambdadoodle (~rohan@116.75.145.2) has joined #haskell
2015-08-23 21:06:32	shachaf	No, it just spams the channel, really.
2015-08-23 21:06:34	<--	dibblego (~dibblego@haskell/developer/dibblego) has quit (Ping timeout: 246 seconds)
2015-08-23 21:06:47	<--	jeadre (~jeadre@li1421-113.members.linode.com) has quit (Remote host closed the connection)
2015-08-23 21:06:50	shachaf	lambdabot ought to have output length limits. Say, a one line limit in this channel.
2015-08-23 21:07:08	<--	lethjakman (~lethjakma@71.56.221.51) has quit (Ping timeout: 246 seconds)
2015-08-23 21:07:15	<--	Francisco (~Fr4n@unaffiliated/fr4n) has quit (Ping timeout: 252 seconds)
2015-08-23 21:07:37	tomberek_	what is the largest number of lines djinn will produce for the shortest statement?
2015-08-23 21:07:40	-->	Bruuuuuno (4637c1e3@gateway/web/freenode/ip.70.55.193.227) has joined #haskell
2015-08-23 21:08:06	-->	dibblego (~dibblego@haskell/developer/dibblego) has joined #haskell
2015-08-23 21:08:25	<--	astupididiot (~sv@ool-3f8fe4df.dyn.optonline.net) has quit (Ping timeout: 244 seconds)
2015-08-23 21:08:36	tomberek_	seems like a Busy Beaver sort of question
2015-08-23 21:08:47	-->	jeadre (~jeadre@li1421-113.members.linode.com) has joined #haskell
2015-08-23 21:08:55	<--	c_wraith (~c_wraith@28d244188882.click-network.com) has quit (Ping timeout: 244 seconds)
2015-08-23 21:11:46	<--	jeadre (~jeadre@li1421-113.members.linode.com) has quit (Remote host closed the connection)
2015-08-23 21:11:48	-->	isenmann (~isenmann@blackhole.science-computing.de) has joined #haskell
2015-08-23 21:11:50	<--	kolko (~kolko@46.48.58.17) has quit (Ping timeout: 240 seconds)
2015-08-23 21:12:20	-->	Francisco (~Fr4n@unaffiliated/fr4n) has joined #haskell
2015-08-23 21:13:12	-->	ttt_fff (c01f699a@gateway/web/freenode/ip.192.31.105.154) has joined #haskell
2015-08-23 21:13:29	ttt_fff	a `b` c `d` e; now, let `b` and `d` have same precedence, let `b` be left-assoc, and `d` be right assoc. What happens?
2015-08-23 21:13:41	ttt_fff	more genrally, how does haskell resolve operator precedence ?
2015-08-23 21:13:50	-->	jeadre (~jeadre@li1421-113.members.linode.com) has joined #haskell
2015-08-23 21:14:33	jle`	ttt_fff: i know a way to find out :)
2015-08-23 21:14:43	jle`	(spoilers: the compiler won't take it)
2015-08-23 21:14:57	jle`	there's a pretty concise statement about what happens in the report, i believe
2015-08-23 21:15:01	ttt_fff	is there a part of the ghc manual or haskell standard whith documents this?
2015-08-23 21:15:02	-->	i-amd3 (~i_amd3@125x102x70x118.ap125.ftth.ucom.ne.jp) has joined #haskell
2015-08-23 21:15:16	ttt_fff	https://www.haskell.org/onlinereport/haskell2010/
2015-08-23 21:15:28	ttt_fff	https://www.haskell.org/onlinereport/haskell2010/haskellch2.html#x7-180002.4 ?
2015-08-23 21:16:08	ttt_fff	"Consecutive unparenthesized operators with the same precedence must both be either left or right associative to avoid a syntax error"
2015-08-23 21:16:10	ttt_fff	page 16 of Consecutive unparenthesized operators with the same precedence must both be either left or right associative to avoid a syntax error
2015-08-23 21:16:12	johnw	shachaf: I think that's a good limit
2015-08-23 21:16:17	ttt_fff	page 16 of https://www.haskell.org/definition/haskell2010.pdf
2015-08-23 21:18:01	ttt_fff	I think, for the first time in my haskell career, I am now smart enough to understand all of the ahskell report
2015-08-23 21:18:19	-->	jinfiesto (~textual@66.214.210.70) has joined #haskell
2015-08-23 21:18:28	<--	lilred (~lilred@c-73-36-251-172.hsd1.il.comcast.net) has quit (Remote host closed the connection)
2015-08-23 21:18:40	<--	jinfiesto (~textual@66.214.210.70) has quit (Client Quit)
2015-08-23 21:18:50	-->	kamatsu (~Adium@123-243-95-236.static.tpgi.com.au) has joined #haskell
2015-08-23 21:19:15	<--	nolrai66 (~HWSoD@96.89.115.3) has quit (Ping timeout: 244 seconds)
2015-08-23 21:19:28	-->	eeLieAh (~quasar@host6-14-dynamic.2-87-r.retail.telecomitalia.it) has joined #haskell
2015-08-23 21:19:39	-->	Ayey_ (~rune@0135301590.0.fullrate.dk) has joined #haskell
2015-08-23 21:20:52	<--	croyd (~croyd@146-115-81-34.c3-0.sbo-ubr1.sbo.ma.cable.rcn.com) has quit (Remote host closed the connection)
2015-08-23 21:20:55	<--	DrAwesom_ (~DrAwesome@208.167.254.242) has quit (Read error: Connection reset by peer)
2015-08-23 21:21:26	-->	DrAwesomeClaws (~DrAwesome@208.167.254.242) has joined #haskell
2015-08-23 21:21:48	<--	lambdadoodle (~rohan@116.75.145.2) has quit (Quit: leaving)
2015-08-23 21:22:19	<--	rgrinberg1 (~rgrinberg@66.49.184.39) has quit (Ping timeout: 246 seconds)
2015-08-23 21:23:17	<--	PatrickRobotham (uid18270@gateway/web/irccloud.com/x-tqexvzmsobeckrbp) has quit (Quit: Connection closed for inactivity)
2015-08-23 21:23:54	<--	mgsloan (~mgsloan@172.56.32.146) has quit (Ping timeout: 244 seconds)
2015-08-23 21:23:57	-->	Abd4llA (~Abd4llA@41.45.34.60) has joined #haskell
2015-08-23 21:24:13	kristof	> (*) <$> Just 2 <*> Just 0 *> Just 2
2015-08-23 21:24:16	-->	BhavyaM (~Bhavya.Ma@122.248.161.142) has joined #haskell
2015-08-23 21:24:34	<--	Ayey_ (~rune@0135301590.0.fullrate.dk) has quit (Ping timeout: 260 seconds)
2015-08-23 21:24:35	<--	mgsloan_ (~mgsloan@172.56.32.146) has quit (Ping timeout: 260 seconds)
2015-08-23 21:24:39	kristof	Did lambdabot break?
2015-08-23 21:24:42	athan	is `map` lazy?
2015-08-23 21:24:51	kristof	athan: Yes.
2015-08-23 21:24:57	athan	thanks kristof :)
2015-08-23 21:25:00	<--	eeLieAh (~quasar@host6-14-dynamic.2-87-r.retail.telecomitalia.it) has quit (Ping timeout: 245 seconds)
2015-08-23 21:25:32	athan	> (*) <$> Just 2 <*> Just 0
2015-08-23 21:25:39	lambdabot	 mueval: ExitFailure 1
2015-08-23 21:25:41	athan	:o
2015-08-23 21:25:47	athan	:t 1
2015-08-23 21:25:48	lambdabot	Num a => a
2015-08-23 21:26:16	athan	> undefined
2015-08-23 21:26:21	lambdabot	 mueval-core: Time limit exceeded
2015-08-23 21:26:25	athan	!_!
2015-08-23 21:26:56	athan	int-e: Hey, I think lambdabot is borky ^
2015-08-23 21:26:57	<--	Welkin (~Welkin@rrcs-97-78-71-196.se.biz.rr.com) has quit (Ping timeout: 255 seconds)
2015-08-23 21:26:58	tomberek_	uh-oh, did someone actually take my suggestion and give it a go?
2015-08-23 21:27:24	<--	DrAwesomeClaws (~DrAwesome@208.167.254.242) has quit (Read error: Connection reset by peer)
2015-08-23 21:27:32	kristof	I'm not really sure what Real World Haskell means when it says that <*> returns both the arguments to its left and right.
2015-08-23 21:27:34	-->	DrAwesomeClaws (~DrAwesome@208.167.254.242) has joined #haskell
2015-08-23 21:28:04	athan	tomberek_: Well, I think the djinn gives results by it's input type linearly
2015-08-23 21:28:10	tomberek_	btw: I'll only accept finite responses to the busy-lambdabot challenge
2015-08-23 21:28:23	kristof	I just see it as, you know, sequential composition of applicative effects
2015-08-23 21:28:27	athan	or really, prenex-polymorphic lambda terms grow linearly with their type signatures
2015-08-23 21:28:27	<--	juhp (~petersen@redhat/juhp) has quit (Quit: Ex-Chat)
2015-08-23 21:28:37	tomberek_	athan: hm... perhaps with pointfree......
2015-08-23 21:28:45	tomberek_	those can get out of hand
2015-08-23 21:28:45	-->	kolko (~kolko@46.48.58.17) has joined #haskell
2015-08-23 21:28:47	-->	Welkin (~Welkin@rrcs-97-78-71-196.se.biz.rr.com) has joined #haskell
2015-08-23 21:29:10	athan	kristof: So, functors give you 1-ary mapping
2015-08-23 21:29:13	athan	:t <$>
2015-08-23 21:29:23	athan	kristof: Applicatives give you n-ary mapping
2015-08-23 21:29:27	athan	:t (<$>)
2015-08-23 21:29:32	athan	D:
2015-08-23 21:29:39	-->	rgrinberg1 (~rgrinberg@66.49.184.39) has joined #haskell
2015-08-23 21:29:43	athan	or really, 0-infinity mapping
2015-08-23 21:29:47	tomberek_	@pl f a b c d e g h i = h (b i a) g i a d c (b i a) (h e e) e
2015-08-23 21:29:50	lambdabot	f = flip flip id . ((flip . (flip .)) .) . (((ap .) .) .) . ((((flip .) .) .) .) . (((((flip .) .) .) .) .) . ((((((flip .) .) .) .) .) .) . flip flip (join (flip . flip id)) . (flip .) . ((flip .) .) . ((((.) .) .) .) . (((flip .) .) .) . ((((ap .) .) .) .) . (((((flip .) .) .) .) .) . ap (ap . (flip .) . ((flip .) .) . (((flip .) .) .) . ((((
2015-08-23 21:29:50	lambdabot	flip .) .) .) .) . (((((ap .) .) .) .) .) . (flip .) . ((flip .) .) . (((flip .) .) .) . ((((flip .) .) .) .) . (flip .) . ((flip .) .) . (((flip .) .) .) . join (flip . (flip .) . ((flip .) .) . (((flip .) .) .) . flip flip id . (flip .) . ((flip .) .) . (((ap .) .) .) . (flip .) . ((flip .) .) . (flip (.) .) . flip flip)) (flip flip)
2015-08-23 21:29:50	lambdabot	optimization suspended, use @pl-resume to continue.
2015-08-23 21:30:02	tomberek_	yeah....
2015-08-23 21:30:11	kristof	Someone sue alonzo church.
2015-08-23 21:30:13	athan	because <*> is kindof like the tape you need to add on more parameters
2015-08-23 21:30:23	athan	tomberek_: This isn't djinn >.>
2015-08-23 21:30:24	ttt_fff	@pl-resume
2015-08-23 21:30:30	lambdabot	f = flip flip id . ((flip . ((flip . ((ap . ((flip . (flip .)) .)) .) . ((((flip .) .) .) .)) .)) .) . flip flip (join (flip . flip id)) . (flip .) . ((flip .) .) . ((((.) .) .) .) . (((flip .) .) .) . ((((ap .) .) .) .) . (((((flip .) .) .) .) .) . ap (ap . (flip .) . ((flip .) .) . (((flip .) .) .) . ((((flip .) .) .) .) . (((((ap .) .) .) .) .)
2015-08-23 21:30:31	lambdabot	 . (flip .) . ((flip .) .) . (((flip .) .) .) . ((((flip .) .) .) .) . (flip .) . ((flip .) .) . (((flip .) .) .) . join (flip . (flip .) . ((flip .) .) . (((flip .) .) .) . flip flip id . (flip .) . ((flip .) .) . (((ap .) .) .) . (flip .) . ((flip .) .) . (flip (.) .) . flip flip)) (flip flip)
2015-08-23 21:30:31	lambdabot	optimization suspended, use @pl-resume to continue.
2015-08-23 21:30:48	SrPx	Is there any fast way to sum all numbers in a range in Haskell? I.e., sum all positions inside the square [0,0] → [4,4] ? The naive solution, I guess, `sum $ do { x <- [0..4]; y <- [0..4]; return (x+y) }` is like 150 times slower than 2 for loops in C
2015-08-23 21:30:59	kristof	athan: That's the way I used to look at it, but I'm working through Real World Haskell and now Brian Sullivan is revealing to me that I can often use applicatives where I would have previously resorted to monads.
2015-08-23 21:31:12	-->	juhp (~petersen@redhat/juhp) has joined #haskell
2015-08-23 21:31:23	ttt_fff	SrPx: you can return (n*(n+1)/2)^2
2015-08-23 21:31:24	johnw	SrPx: you're building that with -O2?
2015-08-23 21:31:35	SrPx	yes
2015-08-23 21:31:37	jmcarthur_	SrPx: surely there is just a closed form solution. no need for loops
2015-08-23 21:31:45	-->	astupididiot (~sv@ool-3f8fe4df.dyn.optonline.net) has joined #haskell
2015-08-23 21:31:48	athan	kristof: That's common :) me too
2015-08-23 21:31:56	athan	because Functor => Applicative => Monad
2015-08-23 21:32:04	ttt_fff	oh wait, it's n * n * (n+1)/2
2015-08-23 21:32:22	SrPx	I don't actually want the sum but to do an action for each position so I'm figuring out the fastest way to simulate two for loops
2015-08-23 21:32:35	SrPx	It is for some 2d drawing stuff
2015-08-23 21:32:45	athan	two folds?
2015-08-23 21:32:50	-->	caconym (~caconym@c-174-61-225-27.hsd1.wa.comcast.net) has joined #haskell
2015-08-23 21:32:54	-->	caconym_ (~caconym@unaffiliated/caconym) has joined #haskell
2015-08-23 21:32:57	SrPx	isn't that what this is doing? let me see
2015-08-23 21:33:04	athan	probably :\
2015-08-23 21:33:15	jmcarthur_	heh, i wrote something similar (a fast blitter) just yesterday
2015-08-23 21:33:26	SrPx	link?
2015-08-23 21:33:42	jmcarthur_	i ended up doing fancy things for speed
2015-08-23 21:33:47	<--	jeadre (~jeadre@li1421-113.members.linode.com) has quit (Remote host closed the connection)
2015-08-23 21:34:07	SrPx	of course I asked this just because you wrote that yesterday... there is a name for this effect isn't it? 
2015-08-23 21:34:11	jmcarthur_	it's not available online right now, but i could paste it somewhere if you want. it's probably not quite what you are looking for though
2015-08-23 21:34:15	tomberek_	SrPx: sequence [ myAction a b | a <- as, b <- bs]
2015-08-23 21:34:43	johnw	or just sequence $ liftA2 myAction a b
2015-08-23 21:34:56	-->	lostalien (~lostalien@101.14.84.149) has joined #haskell
2015-08-23 21:35:12	jmcarthur_	actually, i'm sure you don't want what i wrote. it's highly specialized.
2015-08-23 21:35:35	-->	crodjer (~crodjer@unaffiliated/crodjer) has joined #haskell
2015-08-23 21:35:39	-->	fullofcaffeine (~fullofcaf@201.164.208.68) has joined #haskell
2015-08-23 21:35:39	<--	rpfun (~user@ool-44c4b163.dyn.optonline.net) has quit (Ping timeout: 265 seconds)
2015-08-23 21:35:42	SrPx	no problems
2015-08-23 21:35:45	-->	jeadre (~jeadre@li1421-113.members.linode.com) has joined #haskell
2015-08-23 21:36:07	crodjer	With haskell-mode, is it possible to run multiple targets? Say, one for spec and one the default?
2015-08-23 21:36:14	<--	kolko (~kolko@46.48.58.17) has quit (Ping timeout: 260 seconds)
2015-08-23 21:36:35	SrPx	Something is not right
2015-08-23 21:36:37	<--	fullofcaffeine (~fullofcaf@201.164.208.68) has quit (Remote host closed the connection)
2015-08-23 21:36:49	tomberek_	johnw: i'm not sure what list comprehensions use in the background, looks like they use the Monad instance
2015-08-23 21:36:49	<--	rrbm823 (~rrbm823@97-106-138-233.res.bhn.net) has quit (Ping timeout: 244 seconds)
2015-08-23 21:36:50	-->	kolko (~kolko@46.48.58.17) has joined #haskell
2015-08-23 21:37:31	-->	rpfun (~user@ool-44c4b163.dyn.optonline.net) has joined #haskell
2015-08-23 21:38:03	-->	gem (gem@nat/redhat/x-mltxqrsqseekktdo) has joined #haskell
2015-08-23 21:38:06	-->	TylerLing (~Thunderbi@101.70.134.140) has joined #haskell
2015-08-23 21:38:25	-->	W1nd5urf (~B04rd@unaffiliated/w1nd5urf) has joined #haskell
2015-08-23 21:38:36	<--	ttt_fff (c01f699a@gateway/web/freenode/ip.192.31.105.154) has quit (Ping timeout: 246 seconds)
2015-08-23 21:38:43	-->	cdidd (~cdidd@unaffiliated/cdidd) has joined #haskell
2015-08-23 21:39:01	<--	W1nd5urf (~B04rd@unaffiliated/w1nd5urf) has quit (Read error: Connection reset by peer)
2015-08-23 21:39:22	jmcarthur_	SrPx: i'm assuming there is some IO you're doing in the inner loop. does this go too slow for you?    forM_ [0..4] $ \x -> forM_ [0..4] $ \y -> f x y
2015-08-23 21:39:23	-->	W1nd5urf (~B04rd@unaffiliated/w1nd5urf) has joined #haskell
2015-08-23 21:39:49	SrPx	I tested that too... same perf exactly
2015-08-23 21:40:22	SrPx	Maybe GCC is doing some kind of optimization that wouldn't happen in actual programs and that is why it is so fast in comparison
2015-08-23 21:40:25	jmcarthur_	are you sure the C compiler isn't just optimizing whatever you're benchmarking down to nothing or something?
2015-08-23 21:40:27	jmcarthur_	yeah that
2015-08-23 21:40:32	SrPx	the ghc performance doesn't look bad at all
2015-08-23 21:40:48	<--	awesomehaircut (~jesus@67-1-241-145.tcso.qwest.net) has quit (Ping timeout: 272 seconds)
2015-08-23 21:40:49	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-23 21:41:16	--	paf31_away is now known as paf31
2015-08-23 21:41:54	<--	W1nd5urf (~B04rd@unaffiliated/w1nd5urf) has quit (Read error: Connection reset by peer)
2015-08-23 21:41:57	<--	rpfun (~user@ool-44c4b163.dyn.optonline.net) has left #haskell
2015-08-23 21:42:17	SrPx	I often do those "vs gcc" tests to get an idea of how slow/tolerable is some very high level abstraction I just wrote
2015-08-23 21:42:24	-->	Guest72695 (~daniel@201.190.93.14) has joined #haskell
2015-08-23 21:42:32	-->	aarvar (~foewfoiew@50-47-105-139.evrt.wa.frontiernet.net) has joined #haskell
2015-08-23 21:42:35	jmcarthur_	i got my blitter thing down to 0.8ns per pixel for unboxed blocks of Doubles with (+) as the blending function.
2015-08-23 21:42:55	jmcarthur_	i usually just estimate what i think it should be and investigate if my prediction is wrong
2015-08-23 21:43:34	--	Guest72695 is now known as dan_cas
2015-08-23 21:43:44	<--	dan_cas (~daniel@201.190.93.14) has quit (Client Quit)
2015-08-23 21:43:56	jmcarthur_	i tried using the new-ish simd primops in ghc, but i couldn't get it to build a working binary, so i abandoned that idea :(
2015-08-23 21:44:52	-->	dan_cas (~daniel@201.190.93.14) has joined #haskell
2015-08-23 21:45:12	SrPx	so around 125kk pixels/s? are you sure?
2015-08-23 21:45:42	-->	Sixmsj (~Sixmsj@c-98-210-16-60.hsd1.ca.comcast.net) has joined #haskell
2015-08-23 21:45:43	<--	razvanc87 (~razvanc87@79.97.80.96) has quit (Ping timeout: 250 seconds)
2015-08-23 21:45:50	-->	fujimura (~fujimura@ngn1-ppp2888.tokyo.sannet.ne.jp) has joined #haskell
2015-08-23 21:45:57	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-23 21:46:04	-->	djapo (~archie@unaffiliated/djapo) has joined #haskell
2015-08-23 21:46:20	SrPx	I recall 100kk/s is basically how much an empty for loop ran in javascript 
2015-08-23 21:47:05	SrPx	oh no, it was 1kkk
2015-08-23 21:47:08	<--	Bruuuuuno (4637c1e3@gateway/web/freenode/ip.70.55.193.227) has quit (Quit: Page closed)
2015-08-23 21:47:14	jmcarthur_	i'm not sure i understand your kk notation. you mean 1000000*125?
2015-08-23 21:47:35	SrPx	lol yes, sorry former rpger 
2015-08-23 21:48:08	mniip	I thought everyone knows what 1kk means ...
2015-08-23 21:48:49	jmcarthur_	0.8ns per operation is actually 1_250_000_000 operations per second
2015-08-23 21:48:50	<--	pseudomeme (~wite@cpe-66-68-55-177.austin.res.rr.com) has quit (Ping timeout: 240 seconds)
2015-08-23 21:48:51	-->	dm3 (~dm3@78.60.230.119) has joined #haskell
2015-08-23 21:49:04	SrPx	oh my bad
2015-08-23 21:49:13	-->	justintv90 (~justin@42.113.158.112) has joined #haskell
2015-08-23 21:49:13	-->	monomop (~wite@cpe-66-68-55-177.austin.res.rr.com) has joined #haskell
2015-08-23 21:49:22	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-23 21:49:28	<--	BhavyaM (~Bhavya.Ma@122.248.161.142) has quit (Quit: Quit the channel)
2015-08-23 21:49:32	jmcarthur_	i wouldn't quite call these "pixels", to be fair. they are each a single Double
2015-08-23 21:49:34	-->	DrAwesom_ (~DrAwesome@209.95.50.99) has joined #haskell
2015-08-23 21:49:36	<--	dan_cas (~daniel@201.190.93.14) has quit (Quit: leaving)
2015-08-23 21:49:40	<--	moplove (~wite@cpe-66-68-55-177.austin.res.rr.com) has quit (Ping timeout: 265 seconds)
2015-08-23 21:49:42	jmcarthur_	but yeah, i think the number checks out
2015-08-23 21:50:47	-->	moplove (~wite@cpe-66-68-55-177.austin.res.rr.com) has joined #haskell
2015-08-23 21:50:48	<--	fujimura (~fujimura@ngn1-ppp2888.tokyo.sannet.ne.jp) has quit (Ping timeout: 264 seconds)
2015-08-23 21:50:51	-->	fujimura_ (~fujimura@ngn1-ppp2888.tokyo.sannet.ne.jp) has joined #haskell
2015-08-23 21:50:56	SrPx	I didn't even know people used doubles to represent pixels
2015-08-23 21:50:58	jmcarthur_	there are no allocations or functions calls in the loop. it's just some additions and conditional jumps
2015-08-23 21:51:04	<--	hapislacker (~dagnachew@70.48.138.206) has quit (Quit: WeeChat 1.3)
2015-08-23 21:51:09	--	paf31 is now known as paf31_away
2015-08-23 21:51:15	jmcarthur_	well it's polymorphic code, and i specialized it to doubles for the microbenchmark
2015-08-23 21:51:33	-->	DrAweso__ (~DrAwesome@c-67-189-254-80.hsd1.ct.comcast.net) has joined #haskell
2015-08-23 21:51:58	jmcarthur_	though actually i *am* using doubles in my actual code, for the convenience, until i find that i need something else
2015-08-23 21:52:34	--	monomop is now known as pseudomeme
2015-08-23 21:52:50	<--	moplove (~wite@cpe-66-68-55-177.austin.res.rr.com) has left #haskell
2015-08-23 21:52:55	<--	DrAwesomeClaws (~DrAwesome@208.167.254.242) has quit (Ping timeout: 245 seconds)
2015-08-23 21:53:22	jmcarthur_	using doubles is convenient for working in a linear color space and for working with premultiplied alpha
2015-08-23 21:54:08	wkmanire	cj3kim: guake
2015-08-23 21:54:20	wkmanire	cj3kim: By default it binds to F12 system-wide
2015-08-23 21:54:36	wkmanire	You just press F12 to drop down the terminal whenever you need it. Supports multiple tabs, transparency, etc..
2015-08-23 21:54:49	<--	DrAwesom_ (~DrAwesome@209.95.50.99) has quit (Ping timeout: 250 seconds)
2015-08-23 21:55:45	-->	dented42 (~dented42@97-117-117-161.slkc.qwest.net) has joined #haskell
2015-08-23 21:56:00	-->	comprehension (~patrick@99-112-125-117.lightspeed.cicril.sbcglobal.net) has joined #haskell
2015-08-23 21:56:26	-->	caumeslasal (~Thunderbi@mar92-10-82-239-65-141.fbx.proxad.net) has joined #haskell
2015-08-23 21:57:53	-->	SparkySparkyBoom (~sparky@unaffiliated/nyx114) has joined #haskell
2015-08-23 21:57:55	<--	kristof (~kristof@unaffiliated/kristof) has quit (Ping timeout: 245 seconds)
2015-08-23 21:58:10	<--	Abd4llA (~Abd4llA@41.45.34.60) has quit (Ping timeout: 250 seconds)
2015-08-23 21:58:17	-->	BartAdv (uid90451@gateway/web/irccloud.com/x-uuqefiwsbartbjls) has joined #haskell
2015-08-23 22:02:51	<--	justintv90 (~justin@42.113.158.112) has quit (Read error: Connection reset by peer)
2015-08-23 22:03:02	-->	m104ru (~m104ru@77.241.45.39) has joined #haskell
2015-08-23 22:03:09	<--	caumeslasal (~Thunderbi@mar92-10-82-239-65-141.fbx.proxad.net) has quit (Ping timeout: 256 seconds)
2015-08-23 22:03:27	-->	ketil_ (ketil@engen.priv.no) has joined #haskell
2015-08-23 22:04:14	<--	lostalien (~lostalien@101.14.84.149) has quit (Ping timeout: 260 seconds)
2015-08-23 22:04:54	-->	delphinas__ (~delphinas@cpc23-seve21-2-0-cust98.13-3.cable.virginm.net) has joined #haskell
2015-08-23 22:04:58	--	SparkySparkyBoom is now known as flippant
2015-08-23 22:05:56	<--	carousel (~micwa@c-73-170-241-182.hsd1.ca.comcast.net) has quit (Ping timeout: 246 seconds)
2015-08-23 22:06:23	-->	darenthis (~darenthis@cpc76742-dals23-2-0-cust353.20-2.cable.virginm.net) has joined #haskell
2015-08-23 22:06:24	-->	stultus (~stultus@115.118.31.108) has joined #haskell
2015-08-23 22:06:24	<--	stultus (~stultus@115.118.31.108) has quit (Changing host)
2015-08-23 22:06:24	-->	stultus (~stultus@wikisource/Hrishikesh.kb) has joined #haskell
2015-08-23 22:07:29	<--	dsantiago (~dsantiago@cpe-104-175-220-187.socal.res.rr.com) has quit (Quit: Computer has gone to sleep.)
2015-08-23 22:07:59	<--	sebleblanc (~seb@unaffiliated/sebleblanc) has quit (Ping timeout: 240 seconds)
2015-08-23 22:08:16	<--	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has quit (Remote host closed the connection)
2015-08-23 22:09:18	<--	jinblack (~jinblack@ip184-189-234-229.sb.sd.cox.net) has quit (Ping timeout: 272 seconds)
2015-08-23 22:09:22	<--	delphinas__ (~delphinas@cpc23-seve21-2-0-cust98.13-3.cable.virginm.net) has quit (Ping timeout: 244 seconds)
2015-08-23 22:09:22	<--	AaronFriel (~AaronFrie@67.212.119.147) has quit (Ping timeout: 244 seconds)
2015-08-23 22:09:23	-->	refried_ (~textual@z69-94-206-173.ips.direcpath.com) has joined #haskell
2015-08-24 09:04:01	--	irc: disconnected from server
2015-08-24 09:06:25	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-24 09:06:25	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-24 09:06:25	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:26
2015-08-24 09:06:25	--	Channel #haskell: 1504 nicks (1 op, 0 voices, 1503 normals)
2015-08-24 09:06:25	--	URL for #haskell: http://www.haskell.org/
2015-08-24 09:06:25	<--	fjordrunner (~fjordrunn@ti0045a400-1600.bb.online.no) has quit
2015-08-24 09:06:26	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-24 09:06:37	<--	enaqx (~enaqx@188.163.69.11) has quit (Ping timeout: 244 seconds)
2015-08-24 09:06:54	nitrix	Hi, I'm slowly becoming a Haskell fanboy, I'm sold on most of the aspects of the language, except the tooling. My situation yesterday trying to compile a dependency that uses a C library on windows made me swear my entire vocabulary.
2015-08-24 09:07:02	srhb	Er, take*
2015-08-24 09:07:20	nitrix	I had an error about a missing `ssh2` library but I cannot find where to install that on the haskell platform (on windows).
2015-08-24 09:07:31	f-a	oh I haven't seen nshepperd suggestion, that looks good, thanks
2015-08-24 09:07:33	-->	mmh (~mmh@pD9E9DD0A.dip0.t-ipconnect.de) has joined #haskell
2015-08-24 09:07:42	--	paf31_away is now known as paf31
2015-08-24 09:08:26	<--	catsup (d@ps38852.dreamhost.com) has quit (Ping timeout: 256 seconds)
2015-08-24 09:08:39	srhb	nitrix: Are you using mingw?
2015-08-24 09:08:41	nitrix	Can I do a make/make install from whitin Haskell Platform's MinGW ?
2015-08-24 09:08:48	-->	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has joined #haskell
2015-08-24 09:08:49	geekosaur	nitrix, I would suspect most of your problem there is getting C libraries for Windows... http://stackoverflow.com/questions/22144893/install-libssh2-dll-on-windows maybe
2015-08-24 09:08:52	-->	viitap (osi@kapsi.fi) has joined #haskell
2015-08-24 09:09:00	nitrix	srhb: I think that's what the platform is using, from the folder structure (I got curious).
2015-08-24 09:09:00	ReinH	nitrix: if it's a C library, it won't be on installable via hackage
2015-08-24 09:09:01	-->	takle (~takle@host81-149-50-20.in-addr.btopenworld.com) has joined #haskell
2015-08-24 09:09:08	-->	catsup (d@ps38852.dreamhost.com) has joined #haskell
2015-08-24 09:09:09	<--	Sly1986 (~sly_1986@83.246.218.42) has quit
2015-08-24 09:09:10	ReinH	you need to figure out how to / if you can install it on windows
2015-08-24 09:09:13	geekosaur	oh, no
2015-08-24 09:09:19	nitrix	ReinH: Correct, that's the problem I'm having. I want to install it but the documentation of "how" is terse.
2015-08-24 09:09:37	<--	jp_rider (~Adium@2601:152:4103:4410:944f:40a5:d7a4:b2e2) has quit (Quit: Leaving.)
2015-08-24 09:09:41	<--	favonia (~favonia@pdpc/supporter/student/favonia) has quit (Ping timeout: 244 seconds)
2015-08-24 09:09:44	<--	cleamoon (~cleamoon@c213-89-114-250.bredband.comhem.se) has quit (Ping timeout: 265 seconds)
2015-08-24 09:10:04	nitrix	I already compiled it, I have a fancy static library file as a result... but where do I put that?
2015-08-24 09:10:17	nitrix	I obviously cannot change the dependency's cabal file.
2015-08-24 09:10:18	geekosaur	that's always the problem on windows :/
2015-08-24 09:10:37	geekosaur	unix has standard places
2015-08-24 09:10:56	-->	cleamoon (~cleamoon@c213-89-114-250.bredband.comhem.se) has joined #haskell
2015-08-24 09:11:04	<--	oish_ (~charlie@85.159.94.30) has quit (Ping timeout: 252 seconds)
2015-08-24 09:11:17	<--	conal (~textual@104.255.240.10) has quit (Quit: Computer has gone to sleep.)
2015-08-24 09:11:28	-->	conal (~textual@104.255.240.10) has joined #haskell
2015-08-24 09:11:34	-->	ulfdoz (~mary@2.164.221.216) has joined #haskell
2015-08-24 09:11:35	<--	conal (~textual@104.255.240.10) has quit (Client Quit)
2015-08-24 09:11:36	nitrix	geekosaur: Well, the platform uses MinGW, it probably has a standard folder within that environment? I tried copying it in mingw/lib and mingw/include, no luck :/
2015-08-24 09:11:58	-->	conal (~textual@104.255.240.10) has joined #haskell
2015-08-24 09:12:03	<--	UberLambda (~UberLambd@94.36.13.9) has quit (Quit: GTG)
2015-08-24 09:12:31	<--	codesoup (~codesoup@CPE68b6fcf580d3-CM68b6fcf580d0.cpe.net.cable.rogers.com) has quit (Ping timeout: 245 seconds)
2015-08-24 09:12:50	ocramz	nitrix: /lib is for dynamic libs; do you have .o or .so ?
2015-08-24 09:13:12	geekosaur	er.
2015-08-24 09:13:13	nitrix	I have .a and .la
2015-08-24 09:13:19	geekosaur	windows. I'd expect .dll not .so
2015-08-24 09:13:26	geekosaur	also "fancy static library"
2015-08-24 09:13:26	ocramz	mingw
2015-08-24 09:13:36	nitrix	There's an .la.dll, but I'd prefer if static.
2015-08-24 09:13:51	<--	kognate (~kognate@129.42.208.167) has quit (Remote host closed the connection)
2015-08-24 09:13:55	-->	shahn1 (~shahn@mail.open-projects.net) has joined #haskell
2015-08-24 09:13:57	<--	jwm224_ (~My_user_n@c-73-174-21-132.hsd1.pa.comcast.net) has quit (Quit: WeeChat 1.1.1)
2015-08-24 09:14:07	<--	fuzzyhor_ (~fuzzyhorn@73.38.57.191) has quit (Ping timeout: 240 seconds)
2015-08-24 09:14:08	<--	enaqx_ (~enaqx@188.163.69.11) has quit (Remote host closed the connection)
2015-08-24 09:14:13	<--	triliyn (~lioneyes@c-24-6-242-177.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2015-08-24 09:14:19	ReinH	er
2015-08-24 09:14:34	-->	kognate (~kognate@129.42.208.167) has joined #haskell
2015-08-24 09:14:38	-->	Gurkenglas (5490c12e@gateway/web/freenode/ip.84.144.193.46) has joined #haskell
2015-08-24 09:14:45	<--	kognate (~kognate@129.42.208.167) has quit (Remote host closed the connection)
2015-08-24 09:14:50	-->	enaqx (~enaqx@188.163.69.11) has joined #haskell
2015-08-24 09:14:58	-->	suppi (~suppi@unaffiliated/suppi) has joined #haskell
2015-08-24 09:15:17	-->	kognate (~kognate@129.42.208.167) has joined #haskell
2015-08-24 09:15:22	geekosaur	my (non)familiarity with windows isn't really sufficient to say where to put it though
2015-08-24 09:15:24	nitrix	(actually .dll.a, my bad. .a, .la, .dll.a)
2015-08-24 09:15:49	nitrix	All was great, until yesterday when I had to use windows :(
2015-08-24 09:15:51	geekosaur	(someday I will sort out something vaguely resembling a windows testbed. I do have some play windows installs scattered around...)
2015-08-24 09:15:58	<--	conal (~textual@104.255.240.10) has quit (Client Quit)
2015-08-24 09:16:05	<--	jiang42 (~jiang42@116.237.86.109) has quit (Remote host closed the connection)
2015-08-24 09:16:25	-->	filmackay (~filmackay@cpc42-slam6-2-0-cust176.2-4.cable.virginm.net) has joined #haskell
2015-08-24 09:16:41	<--	tpsinnem (~tpsinnem@dsl-espbrasgw1-50dfbd-112.dhcp.inet.fi) has quit (Ping timeout: 245 seconds)
2015-08-24 09:16:52	ReinH	geekosaur: vm?
2015-08-24 09:17:13	ocramz	nitrix: so these are unix dynlibs
2015-08-24 09:17:19	-->	xcombelle (~xcombelle@AToulouse-657-1-1082-207.w92-146.abo.wanadoo.fr) has joined #haskell
2015-08-24 09:17:26	geekosaur	ocramz, what?
2015-08-24 09:17:49	-->	tempname11 (~tempname1@79.165.104.134) has joined #haskell
2015-08-24 09:17:50	geekosaur	.a is a static library
2015-08-24 09:17:59	ocramz	sorry, you're right
2015-08-24 09:18:06	<--	caumeslasal (~Thunderbi@78.194.128.236) has quit (Ping timeout: 246 seconds)
2015-08-24 09:18:26	ocramz	but I meant, all the build is unix-like
2015-08-24 09:18:29	-->	bucaran (~b@FL1-125-197-146-120.stm.mesh.ad.jp) has joined #haskell
2015-08-24 09:18:30	<--	NeverDie (~NeverDie@cpe-184-152-22-98.nyc.res.rr.com) has quit (Quit: I'm off to sleep. ZZZzzz…)
2015-08-24 09:18:34	ocramz	everything was installed within mingw
2015-08-24 09:18:43	ocramz	"compiled with mingw"
2015-08-24 09:18:47	nitrix	But yeah, unix-like, because the platform uses mingw, so I figured that'd be necessary.
2015-08-24 09:18:55	-->	favonia (~favonia@pdpc/supporter/student/favonia) has joined #haskell
2015-08-24 09:18:59	<--	anRch (~textualma@75-144-144-105-NewEngland.hfc.comcastbusiness.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-08-24 09:19:04	-->	fullofcaffeine (~fullofcaf@201.164.208.68) has joined #haskell
2015-08-24 09:19:30	<--	enaqx (~enaqx@188.163.69.11) has quit (Ping timeout: 246 seconds)
2015-08-24 09:19:32	nitrix	I found a precompiled version on mingw and then, googled for hours, then went to bed like a sad panda.
2015-08-24 09:19:50	ocramz	so what exact error message are you getting? or you're just not sure of where to put the ssh static library?
2015-08-24 09:20:27	<--	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has quit (Remote host closed the connection)
2015-08-24 09:20:33	nitrix	ocramz: I don't understand your "or", the former isn't a question that can be answered affirmatively...
2015-08-24 09:20:51	ocramz	answer either
2015-08-24 09:20:51	<--	cleamoon (~cleamoon@c213-89-114-250.bredband.comhem.se) has quit (Ping timeout: 265 seconds)
2015-08-24 09:20:55	nitrix	ocramz: But yes, the latter, and let me find the relevant error...
2015-08-24 09:21:09	<--	bucaran (~b@FL1-125-197-146-120.stm.mesh.ad.jp) has quit (Client Quit)
2015-08-24 09:21:13	<--	pplorins (~pplorins@112.95.197.12) has quit (Quit: Leaving)
2015-08-24 09:21:54	-->	codedmart (~codedmart@c-174-52-158-160.hsd1.ut.comcast.net) has joined #haskell
2015-08-24 09:21:55	nitrix	cabal install --only-dependencies -v
2015-08-24 09:21:59	-->	cleamoon (~cleamoon@c213-89-114-250.bredband.comhem.se) has joined #haskell
2015-08-24 09:22:22	-->	nomeata (~jojo@nomeata.de) has joined #haskell
2015-08-24 09:22:23	Welkin	how can I fold over a stream of values and then send it to stdout using conduit?
2015-08-24 09:22:31	nitrix	* Missing or bad header file: include/simplessh/types.h,      * Missing C library: ssh2
2015-08-24 09:22:39	<--	ramky (~ramky@114.143.65.144) has quit (Read error: Connection reset by peer)
2015-08-24 09:22:40	johnw	Welkin: that's pretty much what conduit is, so can you be more specific?
2015-08-24 09:22:41	<--	rcyr (~rcyr@modemcable204.138-163-184.mc.videotron.ca) has quit (Quit: Bye!)
2015-08-24 09:22:53	ocramz	ok so it looks like you need sources as well
2015-08-24 09:22:54	Welkin	C.sourceFile file $$ C.foldl1 (<>) =$ C.print
2015-08-24 09:22:57	ocramz	the header
2015-08-24 09:22:59	nitrix	The dependency has cbits, and that header #include <libssh2.h> which is inexistant.
2015-08-24 09:23:15	johnw	Welkin: ahh
2015-08-24 09:23:17	Intolerable	i thought the recommendation was to only use =$= now?
2015-08-24 09:23:27	<--	albertid (~albertid_@p5DC4DADA.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2015-08-24 09:23:31	johnw	Welkin: I think you'd do this: C.print =<< (C.sourceFile file $$ C.foldl1 (<>))
2015-08-24 09:23:41	johnw	that is, in conduit a fold is a sink
2015-08-24 09:23:54	Intolerable	should you really be using foldl1?
2015-08-24 09:24:00	johnw	you deal with the resulting final value the same way you'd work with any value in Haskell
2015-08-24 09:24:05	Intolerable	especially if you know you have a neutral element
2015-08-24 09:24:12	<--	jcreekmore (~jcreekmor@67.63.141.2) has quit (Quit: jcreekmore)
2015-08-24 09:24:34	suppi	Intolerable, what should one use instead of foldl?
2015-08-24 09:24:36	heath	hey i'm trying to recall this site i found that allows you to trian in haskell among other languages. i think it used terms like "guru" and "master" IIRC
2015-08-24 09:24:46	Intolerable	foldl vs foldl1
2015-08-24 09:24:48	heath	it's free to use, does anyone recall such a site?
2015-08-24 09:24:58	Intolerable	since its using (<>), you can just use mempty as the starting element
2015-08-24 09:25:06	nitrix	heath: project euler?
2015-08-24 09:25:08	<--	Zekka (~zekka@ip24-251-69-145.ph.ph.cox.net) has quit (Ping timeout: 250 seconds)
2015-08-24 09:25:14	L8D	why did anyone think <> was a good infix operator
2015-08-24 09:25:28	<--	fibbel (~dsouthard@128.104.121.56) has quit (Quit: fibbel)
2015-08-24 09:25:34	nitrix	L8D: Because the mathematical notation looks very similar.
2015-08-24 09:25:40	L8D	heath: codewars.com
2015-08-24 09:25:47	heath	nitrix: it's not project euler, hacker rank, codewars, code academy, or exercism
2015-08-24 09:25:51	Intolerable	(<>) is fine
2015-08-24 09:25:53	L8D	touche
2015-08-24 09:26:09	Intolerable	there are definitely some questionable operators in places
2015-08-24 09:26:10	<--	benma (~benma@213.55.184.230) has quit (Remote host closed the connection)
2015-08-24 09:26:13	Intolerable	but <> is not one of them
2015-08-24 09:26:22	L8D	then the real question is, why did anyone choose <> over /= for not-equal in SQL
2015-08-24 09:26:27	Welkin	I still get an error
2015-08-24 09:26:34	geekosaur	L8D: BASIC?
2015-08-24 09:26:40	Intolerable	maybe it should be for semigroup, not monoid, but that's a separate discussion
2015-08-24 09:26:56	Welkin	it is expecting ConduitM but I am giving it Maybe a -> m b
2015-08-24 09:27:03	Gurkenglas	Where is C.foldl1 as opposed to foldl1 defined?
2015-08-24 09:27:03	L8D	heath: CodeWars uses 'Guru's and 'Master's and supports a plethora of languages now
2015-08-24 09:27:06	-->	pt1 (~pt1@c-89-160-58-119.cust.bredband2.com) has joined #haskell
2015-08-24 09:27:38	-->	jwm224_ (~My_user_n@c-73-174-21-132.hsd1.pa.comcast.net) has joined #haskell
2015-08-24 09:27:41	hiptobecubic	I'm a big fan of codewars
2015-08-24 09:27:49	ocramz	nitrix: Re: The dependency has cbits, and that header #include <libssh2.h> which is inexistant.
2015-08-24 09:27:55	<--	jwm224_ (~My_user_n@c-73-174-21-132.hsd1.pa.comcast.net) has quit (Client Quit)
2015-08-24 09:28:02	<--	Intolerable (~Adium@host81-138-103-242.in-addr.btopenworld.com) has quit (Quit: Leaving.)
2015-08-24 09:28:09	heath	L8D: i'm aware, it's a great resource. it's not the one i'm after though
2015-08-24 09:28:31	-->	jwm224_ (~My_user_n@c-73-174-21-132.hsd1.pa.comcast.net) has joined #haskell
2015-08-24 09:28:33	L8D	heath: what kind of exercises did it have?
2015-08-24 09:28:37	heath	L8D: wait!
2015-08-24 09:28:40	nitrix	ocramz: http://hub.darcs.net/thoferon/simplessh/browse/include/simplessh/types.h
2015-08-24 09:28:42	nitrix	ocramz: Correct.
2015-08-24 09:28:48	heath	hah, code wars, that's it :)
2015-08-24 09:28:50	heath	hah
2015-08-24 09:29:16	heath	L8D: i was thinking code combat when you said code wars
2015-08-24 09:29:26	heath	thank you sir, this will be useful later today
2015-08-24 09:29:39	-->	OrangeShark (~OrangeSha@2602:306:c5c9:a3e0:d57c:2e7a:8716:c84) has joined #haskell
2015-08-24 09:29:45	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-24 09:29:51	<--	JagaJaga (~jaga@178.62.202.50) has quit (Ping timeout: 246 seconds)
2015-08-24 09:30:23	<--	BartAdv (uid90451@gateway/web/irccloud.com/x-uuqefiwsbartbjls) has quit (Quit: Connection closed for inactivity)
2015-08-24 09:30:24	<--	rcosta (~rcosta@213.205.251.216) has quit (Remote host closed the connection)
2015-08-24 09:30:48	-->	Sixmsj (~Sixmsj@c-50-131-110-35.hsd1.ca.comcast.net) has joined #haskell
2015-08-24 09:30:59	<--	pt1 (~pt1@c-89-160-58-119.cust.bredband2.com) has quit (Remote host closed the connection)
2015-08-24 09:31:10	-->	lkba_ (~AndChat43@aakg84.neoplus.adsl.tpnet.pl) has joined #haskell
2015-08-24 09:31:34	Welkin	No instance for (Control.Monad.Trans.Resource.Internal.MonadResource
2015-08-24 09:31:34	Welkin	                       IO)
2015-08-24 09:31:35	Welkin	      arising from a use of ‘C.sourceFile’
2015-08-24 09:31:36	Welkin	what????
2015-08-24 09:31:48	Welkin	that sounds very wrong
2015-08-24 09:32:15	-->	arahael1 (~arahael@120.155.24.29) has joined #haskell
2015-08-24 09:32:34	<--	swade61 (~swade61@host81-149-190-248.in-addr.btopenworld.com) has left #haskell
2015-08-24 09:32:42	<--	lkba (~AndChat43@dwu144.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 252 seconds)
2015-08-24 09:32:47	-->	nuncanada (~flaviobb@201.35.34.162) has joined #haskell
2015-08-24 09:32:49	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 250 seconds)
2015-08-24 09:32:50	-->	youngbaks (~youngbaks@41.204.187.12) has joined #haskell
2015-08-24 09:33:01	L8D	Welkin: the MonadResource monad can't do IO
2015-08-24 09:33:05	L8D	I mean
2015-08-24 09:33:12	L8D	IO doesn't implement MonadResource
2015-08-24 09:33:28	-->	ericsmithvt (~textual@67.217.115.210) has joined #haskell
2015-08-24 09:33:30	L8D	Welkin: C.sourceFile performs IO
2015-08-24 09:33:32	<--	arahael (~arahael@120.155.53.72) has quit (Ping timeout: 260 seconds)
2015-08-24 09:33:34	L8D	Welkin: you need to lift the IO
2015-08-24 09:33:35	-->	jp_rider (~Adium@c-73-134-205-106.hsd1.md.comcast.net) has joined #haskell
2015-08-24 09:34:09	L8D	Welkin: try: liftIO $ C.sourceFile ...
2015-08-24 09:34:11	<--	jgt (~jgt@46.175.231.179.maxnet.net.pl) has quit (Ping timeout: 252 seconds)
2015-08-24 09:34:26	-->	glguy (~glguy@haskell/developer/glguy) has joined #haskell
2015-08-24 09:34:51	<--	adek (~adek@199.201.64.2) has quit (Ping timeout: 240 seconds)
2015-08-24 09:34:52	<--	cleamoon (~cleamoon@c213-89-114-250.bredband.comhem.se) has quit (Ping timeout: 265 seconds)
2015-08-24 09:34:55	<--	ranguli (~ranguli@mtprnf0117w-142177102191.dhcp-dynamic.FibreOp.nl.bellaliant.net) has quit (Remote host closed the connection)
2015-08-24 09:35:03	-->	tibbe (~tibbe@31.10.157.44) has joined #haskell
2015-08-24 09:35:40	-->	kmels (~kmels@186.64.110.122) has joined #haskell
2015-08-24 09:35:42	-->	Intolerable (~Adium@cpc14-cmbg15-2-0-cust352.5-4.cable.virginm.net) has joined #haskell
2015-08-24 09:35:57	-->	skore_de (~skore@2a02:908:cf11:8fe0:a11c:460d:ee59:8393) has joined #haskell
2015-08-24 09:35:58	-->	cleamoon (~cleamoon@c213-89-114-250.bredband.comhem.se) has joined #haskell
2015-08-24 09:36:04	<--	osa1_ (~omer@ip-64-134-175-210.public.wayport.net) has quit (Ping timeout: 244 seconds)
2015-08-24 09:36:30	Welkin	why???
2015-08-24 09:36:35	Welkin	in every conduit example this just works
2015-08-24 09:36:48	<--	astupididiot (~sv@ool-3f8fe4df.dyn.optonline.net) has quit (Ping timeout: 265 seconds)
2015-08-24 09:37:14	-->	t7 (~chatzilla@host109-157-13-173.range109-157.btcentralplus.com) has joined #haskell
2015-08-24 09:37:18	<--	fabianvf_ (~fabianvf@216.30.185.217) has quit (Remote host closed the connection)
2015-08-24 09:37:33	-->	osa1_ (~omer@ip-64-134-175-210.public.wayport.net) has joined #haskell
2015-08-24 09:37:48	<--	Luke (~luke@unaffiliated/luke) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-24 09:38:33	<--	sigma914 (~sigma@80.76.204.146) has quit (Remote host closed the connection)
2015-08-24 09:39:19	-->	fujimura (~fujimura@ngn7-ppp1.tokyo.sannet.ne.jp) has joined #haskell
2015-08-24 09:39:39	<--	yqt (~yqt@81.88.230.28) has quit (Ping timeout: 260 seconds)
2015-08-24 09:40:12	-->	hmrm (~hmrm@198.244.104.109) has joined #haskell
2015-08-24 09:40:15	-->	araujo (~araujo@gentoo/developer/araujo) has joined #haskell
2015-08-24 09:40:58	<--	araujo (~araujo@gentoo/developer/araujo) has quit (Max SendQ exceeded)
2015-08-24 09:40:59	-->	yqt (~yqt@81.88.230.28) has joined #haskell
2015-08-24 09:41:17	-->	edon (~user@albalug/edon) has joined #haskell
2015-08-24 09:41:48	glguy	Welkin: In the example in the conduit documentation you have to use 'runResourceT' in conjunction with 'sourceFile'
2015-08-24 09:42:12	<--	Intolerable (~Adium@cpc14-cmbg15-2-0-cust352.5-4.cable.virginm.net) has quit (Quit: Leaving.)
2015-08-24 09:42:14	<--	osa1_ (~omer@ip-64-134-175-210.public.wayport.net) has quit (Ping timeout: 252 seconds)
2015-08-24 09:42:19	-->	atomicto1 (~thomas@50-89-152-9.res.bhn.net) has joined #haskell
2015-08-24 09:42:28	glguy	The other examples use 'sourceList' which doesn't need resource management
2015-08-24 09:43:18	<--	Zariel (~chris@86.188.229.98) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-24 09:43:20	<--	jp_rider (~Adium@c-73-134-205-106.hsd1.md.comcast.net) has quit (Quit: Leaving.)
2015-08-24 09:43:24	<--	atomicto1 (~thomas@50-89-152-9.res.bhn.net) has quit (Client Quit)
2015-08-24 09:44:02	-->	Eiam (~mine@unaffiliated/eiam) has joined #haskell
2015-08-24 09:44:06	<--	Eiam (~mine@unaffiliated/eiam) has quit (Client Quit)
2015-08-24 09:44:26	-->	stultus (~stultus@wikisource/Hrishikesh.kb) has joined #haskell
2015-08-24 09:45:05	<--	tibbe (~tibbe@31.10.157.44) has quit (Quit: tibbe)
2015-08-24 09:45:21	Welkin	but my output doesn't have type ResourceT m a
2015-08-24 09:45:24	-->	doctorinserenity (~jeeves@213.211.137.170.static.edpnet.net) has joined #haskell
2015-08-24 09:45:33	-->	Swizec (~swizec@c-67-164-98-169.hsd1.ca.comcast.net) has joined #haskell
2015-08-24 09:45:37	-->	joco42_ (~joco42@dsl-hkibrasgw4-58c03a-80.dhcp.inet.fi) has joined #haskell
2015-08-24 09:45:38	Welkin	it is :: IO a
2015-08-24 09:45:43	-->	jp_rider (~Adium@c-73-134-205-106.hsd1.md.comcast.net) has joined #haskell
2015-08-24 09:46:04	-->	mariusmarius (~mariusmar@199.201.65.130) has joined #haskell
2015-08-24 09:46:08	<--	dmj (~user@c-76-29-40-59.hsd1.il.comcast.net) has quit (Remote host closed the connection)
2015-08-24 09:46:11	<--	Guest47253 (~user@HSI-KBW-085-216-002-196.hsi.kabelbw.de) has quit (Ping timeout: 260 seconds)
2015-08-24 09:46:19	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Remote host closed the connection)
2015-08-24 09:46:30	-->	dmj (~user@c-76-29-40-59.hsd1.il.comcast.net) has joined #haskell
2015-08-24 09:46:35	-->	jiang42 (~jiang42@116.237.86.109) has joined #haskell
2015-08-24 09:46:37	<--	ocramz (c2ab2602@gateway/web/freenode/ip.194.171.38.2) has quit (Ping timeout: 246 seconds)
2015-08-24 09:46:49	Welkin	conduit is still quite confusing to me
2015-08-24 09:46:56	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-24 09:47:03	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-24 09:47:03	<--	f-a (~f-a@adsl-ull-9-136.48-151.net24.it) has quit (Quit: leaving)
2015-08-24 09:47:28	Welkin	where do I use runResourceT?
2015-08-24 09:47:35	Welkin	on the output of the entire conduit pipeline?
2015-08-24 09:48:01	<--	joco42_ (~joco42@dsl-hkibrasgw4-58c03a-80.dhcp.inet.fi) has quit (Remote host closed the connection)
2015-08-24 09:48:27	-->	joco42_ (~joco42@dsl-hkibrasgw4-58c03a-80.dhcp.inet.fi) has joined #haskell
2015-08-24 09:48:28	<--	skulls (~username@46.166.188.250) has quit (Quit: skulls)
2015-08-24 09:48:46	-->	_asc (~arneschro@ip5f5af11f.dynamic.kabel-deutschland.de) has joined #haskell
2015-08-24 09:48:47	glguy	Yeah, I think you run it on the "outside". (I'm also not a conduit user, but I've been exposed to a bit of it)
2015-08-24 09:48:48	-->	gem (~gem@122.166.173.55) has joined #haskell
2015-08-24 09:49:00	-->	xeno_ (~xeno@2a02:fe0:c211:12c1:e194:500d:e3dc:25e3) has joined #haskell
2015-08-24 09:49:26	Welkin	that doesn't work either
2015-08-24 09:49:27	<--	mariusmarius1 (~mariusmar@2620:10d:c0a1:f80::e:654) has quit (Ping timeout: 246 seconds)
2015-08-24 09:49:40	-->	atomicto1 (~thomas@50-89-152-9.res.bhn.net) has joined #haskell
2015-08-24 09:49:43	-->	Elish (~x@unaffiliated/elish) has joined #haskell
2015-08-24 09:49:51	glguy	Well, paste something to lpaste if you want extra eyes on it.
2015-08-24 09:49:57	-->	araujo (~araujo@61.164.211.4) has joined #haskell
2015-08-24 09:49:57	<--	araujo (~araujo@61.164.211.4) has quit (Changing host)
2015-08-24 09:49:57	-->	araujo (~araujo@gentoo/developer/araujo) has joined #haskell
2015-08-24 09:50:02	<--	araujo (~araujo@gentoo/developer/araujo) has quit (Max SendQ exceeded)
2015-08-24 09:50:12	-->	basearcher (~textual@208.66.26.41) has joined #haskell
2015-08-24 09:50:36	<--	filmackay (~filmackay@cpc42-slam6-2-0-cust176.2-4.cable.virginm.net) has quit (Remote host closed the connection)
2015-08-24 09:50:56	<--	xeno (~xeno@cm-84.208.195.196.getinternet.no) has quit (Ping timeout: 256 seconds)
2015-08-24 09:51:02	<--	teclo- (42@unaffiliated/teclo) has quit (Ping timeout: 244 seconds)
2015-08-24 09:51:07	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Ping timeout: 240 seconds)
2015-08-24 09:51:18	<--	gfixler (~gfixler@cpe-108-185-238-241.socal.res.rr.com) has quit (Quit: WeeChat 1.0.1)
2015-08-24 09:51:35	-->	frerich (~frerich@2a02:8108:2a3f:d984:cddd:937e:490:6b23) has joined #haskell
2015-08-24 09:51:36	<--	frerich (~frerich@2a02:8108:2a3f:d984:cddd:937e:490:6b23) has quit (Changing host)
2015-08-24 09:51:36	-->	frerich (~frerich@kde/raabe) has joined #haskell
2015-08-24 09:51:40	-->	MrScout (~MrScout@unaffiliated/mrscout) has joined #haskell
2015-08-24 09:51:41	-->	filmackay (~filmackay@cpc42-slam6-2-0-cust176.2-4.cable.virginm.net) has joined #haskell
2015-08-24 11:03:36	--	irc: disconnected from server
2015-08-24 11:04:02	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-24 11:04:02	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-24 11:04:02	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-24 11:04:02	--	Channel #haskell: 1499 nicks (1 op, 0 voices, 1498 normals)
2015-08-24 11:04:02	--	URL for #haskell: http://www.haskell.org/
2015-08-24 11:04:03	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-24 11:04:11	<--	jvilla (~jvilla@181.39.194.178) has quit (Ping timeout: 245 seconds)
2015-08-24 11:04:18	-->	teclo- (42@unaffiliated/teclo) has joined #haskell
2015-08-24 11:04:22	<--	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 250 seconds)
2015-08-24 11:04:26	-->	unclechu (~unclechu@188.162.185.14) has joined #haskell
2015-08-24 11:04:28	-->	mariusmarius (~mariusmar@2620:10d:c0a1:f80::e:41c9) has joined #haskell
2015-08-24 11:04:31	-->	conal (~textual@198.0.233.131) has joined #haskell
2015-08-24 11:04:37	<--	piezoid (~piezoid@tsv35-1-78-232-144-90.fbx.proxad.net) has quit (Ping timeout: 264 seconds)
2015-08-24 11:05:15	-->	sopvop (~leonid@178.70.100.173) has joined #haskell
2015-08-24 11:05:43	-->	refried_ (~textual@lawn-128-61-65-96.lawn.gatech.edu) has joined #haskell
2015-08-24 11:05:58	malorie	shachaf: if it's not, how would I go about encoding something like that?
2015-08-24 11:06:10	-->	nuttycom (~nuttycom@2601:281:8102:37a3:3d35:6c9d:598f:79c6) has joined #haskell
2015-08-24 11:06:11	malorie	aweinstock: I was thinking about that, yeah
2015-08-24 11:06:33	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-24 11:06:42	<--	Chobbes (~Chirps@S0106b81619e91574.ed.shawcable.net) has quit (Ping timeout: 265 seconds)
2015-08-24 11:06:52	<--	osa1_ (~omer@ip-64-134-175-210.public.wayport.net) has quit (Ping timeout: 256 seconds)
2015-08-24 11:06:52	<--	chirpsalot (~Chirps@unaffiliated/chirpsalot) has quit (Ping timeout: 256 seconds)
2015-08-24 11:07:12	-->	Bruuuuuuno (4637c1e3@gateway/web/freenode/ip.70.55.193.227) has joined #haskell
2015-08-24 11:07:31	-->	osa1_ (~omer@2001:18e8:2:10f1:f000::7ab) has joined #haskell
2015-08-24 11:07:47	-->	latro`a (~latro`a@206-196-186-151.wireless.umd.edu) has joined #haskell
2015-08-24 11:08:09	<--	latro`a (~latro`a@206-196-186-151.wireless.umd.edu) has quit (Read error: Connection reset by peer)
2015-08-24 11:08:26	-->	Luke_ (~luke@unaffiliated/luke) has joined #haskell
2015-08-24 11:08:38	-->	FreeFull (~freefull@defocus/sausage-lover) has joined #haskell
2015-08-24 11:08:42	<--	zariuq (~zar@214.233.164.82.customer.cdi.no) has quit (Ping timeout: 250 seconds)
2015-08-24 11:08:51	-->	newsham (~chat@udp217044uds.hawaiiantel.net) has joined #haskell
2015-08-24 11:08:58	-->	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-24 11:09:11	<--	dan102938102983 (~dan102938@2601:184:4200:1640:6ccb:cc1b:1ba4:81d1) has quit (Remote host closed the connection)
2015-08-24 11:09:34	<--	tmtwd (~tmtwd@CPE84948cd07b51-CM84948cd07b50.cpe.net.cable.rogers.com) has quit (Ping timeout: 255 seconds)
2015-08-24 11:10:00	-->	whiteline (~whiteline@unaffiliated/whiteline) has joined #haskell
2015-08-24 11:15:26	--	irc: disconnected from server
2015-08-24 11:16:17	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-24 11:16:17	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-24 11:16:17	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-24 11:16:18	--	Channel #haskell: 1508 nicks (1 op, 0 voices, 1507 normals)
2015-08-24 11:16:18	--	URL for #haskell: http://www.haskell.org/
2015-08-24 11:16:18	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-24 11:16:47	-->	juanpaucar (~juanpauca@181.39.194.178) has joined #haskell
2015-08-24 11:16:56	<--	osa1_ (~omer@2001:18e8:2:10f1:f000::7ab) has quit (Ping timeout: 246 seconds)
2015-08-24 11:17:32	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-24 11:17:32	<--	mettekou (~mettekou@94-224-246-64.access.telenet.be) has quit (Read error: Connection reset by peer)
2015-08-24 11:17:51	-->	mr- (~martin@dslb-092-076-014-107.092.076.pools.vodafone-ip.de) has joined #haskell
2015-08-24 11:22:14	--	irc: disconnected from server
2015-08-25 08:57:52	-->	RouxTheDay (~RouxTheDa@c-73-231-54-78.hsd1.ca.comcast.net) has joined #haskell
2015-08-25 08:57:52	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-25 08:57:52	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-25 08:57:52	--	Channel #haskell: 1460 nicks (1 op, 0 voices, 1459 normals)
2015-08-25 08:57:52	--	URL for #haskell: http://www.haskell.org/
2015-08-25 08:59:08	--	irc: disconnected from server
2015-08-25 08:59:36	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-25 08:59:36	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-25 08:59:36	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:26
2015-08-25 08:59:36	--	Channel #haskell: 1497 nicks (1 op, 0 voices, 1496 normals)
2015-08-25 08:59:36	--	URL for #haskell: http://www.haskell.org/
2015-08-25 08:59:36	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-25 09:01:55	<--	fikusz (~fikusz@catv-86-101-46-41.catv.broadband.hu) has quit (Read error: Connection reset by peer)
2015-08-25 09:03:54	--	irc: disconnected from server
2015-08-25 09:07:19	-->	RouxTheD1 (~RouxTheDa@199.21.87.214) has joined #haskell
2015-08-25 09:07:19	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-25 09:07:19	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-25 09:07:20	--	Channel #haskell: 1490 nicks (1 op, 0 voices, 1489 normals)
2015-08-25 09:07:20	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-25 09:07:20	--	URL for #haskell: http://www.haskell.org/
2015-08-25 09:07:21	-->	kognate (kognate@nat/ibm/x-rubfziopxzvhhodz) has joined #haskell
2015-08-25 09:07:48	-->	fosterite (~fosterite@2601:445:4000:2fa2:848a:b10f:6c29:6046) has joined #haskell
2015-08-25 09:09:51	-->	jfischoff (~jonathanf@skedgeme103.s.subnet.rcn.com) has joined #haskell
2015-08-25 09:10:02	-->	aftershave (~textual@h-137-26.a336.priv.bahnhof.se) has joined #haskell
2015-08-25 09:10:07	<--	kognate (kognate@nat/ibm/x-rubfziopxzvhhodz) has quit (Remote host closed the connection)
2015-08-25 09:10:12	<--	voltalio (~textual@c-68-42-75-191.hsd1.mi.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-25 09:10:26	-->	NeverDie (~NeverDie@cpe-184-152-22-98.nyc.res.rr.com) has joined #haskell
2015-08-25 09:10:41	-->	kognate (kognate@nat/ibm/x-wxvcnybflborzbqp) has joined #haskell
2015-08-25 09:10:42	-->	zariuq (~zar@214.233.164.82.customer.cdi.no) has joined #haskell
2015-08-25 09:11:06	<--	whiteline (~whiteline@unaffiliated/whiteline) has quit (Quit: Leaving)
2015-08-25 09:12:04	-->	tommah (~tommah@67-210-179-56.fidnet.com) has joined #haskell
2015-08-25 09:12:10	<--	JoWie (uid93456@gateway/web/irccloud.com/x-fztxjrqbpkcfndzc) has quit (Quit: Connection closed for inactivity)
2015-08-25 09:12:13	-->	fullofcaffeine (~fullofcaf@201.164.208.68) has joined #haskell
2015-08-25 09:15:52	--	irc: disconnected from server
2015-08-25 09:16:19	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-25 09:16:19	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-25 09:16:19	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-25 09:16:19	--	Channel #haskell: 1492 nicks (1 op, 0 voices, 1491 normals)
2015-08-25 09:16:19	--	URL for #haskell: http://www.haskell.org/
2015-08-25 09:16:19	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-25 09:16:20	<--	RouxTheD1 (~RouxTheDa@199.21.87.214) has quit (Ping timeout: 244 seconds)
2015-08-25 09:16:20	<--	martintrojer (~martintro@cpc71861-bmly8-2-0-cust91.2-3.cable.virginm.net) has quit (Ping timeout: 265 seconds)
2015-08-25 09:16:41	tsahyt	Is there a way to provide a custom error message for when an irrefutable pattern fails?
2015-08-25 09:16:53	-->	centrinia (~centrinia@2602:306:bd0d:a690:84f8:b9e2:698a:38a0) has joined #haskell
2015-08-25 09:17:03	tsahyt	Other than providing a foo _ = error ".." that is
2015-08-25 09:17:12	<--	browndawg (~browndawg@59.177.142.233) has quit (Ping timeout: 264 seconds)
2015-08-25 09:17:28	<--	elementalest (~elemental@unaffiliated/elementalest) has quit (Ping timeout: 272 seconds)
2015-08-25 09:17:30	-->	martintrojer (~martintro@cpc71861-bmly8-2-0-cust91.2-3.cable.virginm.net) has joined #haskell
2015-08-25 09:17:40	geekosaur	none I'm aware of
2015-08-25 09:17:51	<--	kognate (kognate@nat/ibm/x-wxvcnybflborzbqp) has quit (Ping timeout: 240 seconds)
2015-08-25 09:17:56	<--	joneshf-laptop (~joneshf@98.208.35.89) has quit (Remote host closed the connection)
2015-08-25 09:18:09	-->	deepfire (~user@213.108.3.98) has joined #haskell
2015-08-25 09:18:13	-->	tommd (~tommd@2001:4870:e08e:282:225:90ff:fe9b:d97) has joined #haskell
2015-08-25 09:18:35	<--	caumeslasal (~Thunderbi@78.194.128.236) has quit (Ping timeout: 250 seconds)
2015-08-25 09:18:43	-->	elementalest (~elemental@ppp118-209-149-239.lns20.mel8.internode.on.net) has joined #haskell
2015-08-25 09:18:46	<--	elementalest (~elemental@ppp118-209-149-239.lns20.mel8.internode.on.net) has quit (Changing host)
2015-08-25 09:18:46	-->	elementalest (~elemental@unaffiliated/elementalest) has joined #haskell
2015-08-25 09:19:23	-->	tmtwd (~tmtwd@CPE84948cd07b51-CM84948cd07b50.cpe.net.cable.rogers.com) has joined #haskell
2015-08-25 09:20:47	<--	jeadre (~jeadre@li1421-113.members.linode.com) has quit (Remote host closed the connection)
2015-08-25 09:21:42	<--	Luke (~luke@unaffiliated/luke) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-25 09:22:43	-->	jeadre (~jeadre@li1421-113.members.linode.com) has joined #haskell
2015-08-25 09:23:18	<--	PatrickRobotham (uid18270@gateway/web/irccloud.com/x-oepezjzuwfmbytjt) has quit (Quit: Connection closed for inactivity)
2015-08-25 09:23:23	-->	Sixmsj (~Sixmsj@c-50-131-110-35.hsd1.ca.comcast.net) has joined #haskell
2015-08-25 09:23:45	<--	deepfire (~user@213.108.3.98) has quit (Read error: Connection reset by peer)
2015-08-25 09:24:02	<--	gothicsouth (~gothicsou@cpe-76-177-66-223.natcky.res.rr.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-25 09:24:44	<--	pt1 (~pt1@212.247.99.139) has quit (Remote host closed the connection)
2015-08-25 09:24:48	-->	Swizec (~swizec@c-67-164-98-169.hsd1.ca.comcast.net) has joined #haskell
2015-08-25 09:25:14	-->	kadoban (~mud@unaffiliated/kadoban) has joined #haskell
2015-08-25 09:25:29	-->	Testing0011 (b23d0090@gateway/web/freenode/ip.178.61.0.144) has joined #haskell
2015-08-25 09:26:28	-->	filmackay (~filmackay@host-92-28-127-120.as13285.net) has joined #haskell
2015-08-25 09:26:33	Testing0011	?
2015-08-25 09:26:46	<--	jfischoff (~jonathanf@skedgeme103.s.subnet.rcn.com) has quit (Quit: jfischoff)
2015-08-25 09:27:14	Testing0011	this irc looks very quiet :D 
2015-08-25 09:27:21	<--	mariusmarius (~mariusmar@2620:10d:c0a1:f80::f:7d1d) has quit (Read error: Connection reset by peer)
2015-08-25 09:27:27	-->	moplove_ (~moplove@67.78.34.138) has joined #haskell
2015-08-25 09:27:37	johnw	tsahyt: have you seen http://www.haskellforall.com/2015/01/total-100-exhaustive-pattern-matching.html?
2015-08-25 09:27:47	<--	flecha (~flecha@177.32.223.23) has quit (Quit: WeeChat 1.3)
2015-08-25 09:28:05	-->	mariusmarius (~mariusmar@199.201.65.130) has joined #haskell
2015-08-25 09:28:31	-->	jfischoff (~jonathanf@skedgeme103.s.subnet.rcn.com) has joined #haskell
2015-08-25 09:28:40	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-25 09:28:57	johnw	even though that's not really what you asked for
2015-08-25 09:29:26	<--	tempname11 (~tempname1@79.165.104.134) has quit (Ping timeout: 240 seconds)
2015-08-25 09:29:50	-->	Kruppe (~jcp@laforge.cs.uwaterloo.ca) has joined #haskell
2015-08-25 09:29:51	-->	trism (~jconti@unaffiliated/trism) has joined #haskell
2015-08-25 09:30:02	Testing0011	I just saw that link haskellforall , looks very complicated to be read by a beginner in Haskell like me 
2015-08-25 09:30:13	<--	Kruppe (~jcp@laforge.cs.uwaterloo.ca) has quit (Client Quit)
2015-08-25 09:30:13	mauke3	Testing0011: it depends a lot on the time of the day
2015-08-25 09:30:29	mauke3	channel activitiy, I mean. not how complicated haskell is :-)
2015-08-25 09:30:40	<--	fabianvf (~fabianvf@216.30.185.217) has quit (Remote host closed the connection)
2015-08-25 09:31:31	tsahyt	Other than providing a foo _ = error ".." that is
2015-08-25 09:31:40	tsahyt	wrong window sorry
2015-08-25 09:31:41	-->	rollo (c8f1c23e@gateway/web/cgi-irc/kiwiirc.com/ip.200.241.194.62) has joined #haskell
2015-08-25 09:31:45	tsahyt	I meant to repeat a shell command
2015-08-25 09:32:04	-->	Kruppe (~jcp@laforge.cs.uwaterloo.ca) has joined #haskell
2015-08-25 09:32:07	-->	lodin_ (~lodin@c-31-209-2-44.cust.bredband2.com) has joined #haskell
2015-08-25 09:32:19	johnw	Testing0011: it might be too complicated for anyone to want to use in practice
2015-08-25 09:32:27	-->	skeet70 (~skeet70@inet-hqmc08-o.oracle.com) has joined #haskell
2015-08-25 09:32:40	Testing0011	Haskell is not complicated, however you can write a code that does the same functionalities in many many different way in Haskell
2015-08-25 09:32:42	<--	swade61 (~swade61@host81-149-190-248.in-addr.btopenworld.com) has quit (Quit: Leaving.)
2015-08-25 09:32:47	tsahyt	johnw: Thank you, this looks interesting, although it's probably overkill in my case.
2015-08-25 09:32:49	<--	filmackay (~filmackay@host-92-28-127-120.as13285.net) has quit (Remote host closed the connection)
2015-08-25 09:32:49	-->	Ven (~textual@163.5.245.253) has joined #haskell
2015-08-25 09:33:10	johnw	there's also -XSafe, which is annonying in its own way; or -Wall -Werror
2015-08-25 09:33:18	-->	Gurkenglas (5490c12e@gateway/web/freenode/ip.84.144.193.46) has joined #haskell
2015-08-25 09:33:27	Testing0011	even in ways I never heard about using a new Syntax to me but stills HAskell 
2015-08-25 09:33:51	Welkin	johnw: isn't -Werror on by default?
2015-08-25 09:33:52	-->	dmj (~user@c-76-29-40-59.hsd1.il.comcast.net) has joined #haskell
2015-08-25 09:33:58	johnw	goodness no
2015-08-25 09:34:04	tsahyt	Testing0011: I find Haskell98 to be a very simple language. Cutting edge GHC Haskell can get quite mind boggling though.
2015-08-25 09:34:15	-->	jgertm (~amontimur@46.128.43.80.dynamic.cablesurf.de) has joined #haskell
2015-08-25 09:34:15	johnw	if it were, probably all of Hackage would pop out of existence
2015-08-25 09:34:22	-->	adek (~adek@199.201.64.3) has joined #haskell
2015-08-25 09:34:34	<--	b0oh (~b0oh@h-72-214.a137.corp.bahnhof.se) has quit
2015-08-25 09:35:08	Welkin	really?
2015-08-25 09:35:16	Welkin	I tend to compile with -Wall
2015-08-25 09:35:33	johnw	the 7.8 to 7.10 move made most imports of Control.Applicative a harmless warning
2015-08-25 09:35:48	-->	sedeki (~textual@unaffiliated/sedeki) has joined #haskell
2015-08-25 09:35:50	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 240 seconds)
2015-08-25 09:35:55	-->	ainz (~ainz@1.47.105.30) has joined #haskell
2015-08-25 09:35:56	<--	Iskarlar (~Iskarlar@D9641F32.static.ziggozakelijk.nl) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-25 09:35:57	johnw	if Werror were the default, that would mean you couldn't use a huge part of hackage, until the authors put in CPP conditionals
2015-08-25 09:36:11	-->	tennix (~ztennix@124.64.137.45) has joined #haskell
2015-08-25 09:36:11	<--	tennix (~ztennix@124.64.137.45) has quit (Changing host)
2015-08-25 09:36:11	-->	tennix (~ztennix@unaffiliated/tennix) has joined #haskell
2015-08-25 09:36:14	<--	adeln (~adeln@109.205.252.120) has quit (Remote host closed the connection)
2015-08-25 09:36:21	<--	Ven (~textual@163.5.245.253) has quit (Read error: Connection reset by peer)
2015-08-25 09:36:22	johnw	(I guess, assuming they had also use -Wall)
2015-08-25 09:36:24	Welkin	I see
2015-08-25 09:36:44	sedeki	in "Hitchhikers guide to Haskell", what is meant by "layout is 2-dimensional" ?
2015-08-25 09:36:49	<--	rcosta_ (~rcosta@213.205.251.216) has quit (Remote host closed the connection)
2015-08-25 09:37:01	Testing0011	today I solved this problem correctly (**) Flatten a nested list structure.  Transform a list, possibly holding lists as elements into a `flat' list by replacing each list with its elements (recursively). After that, I looked at the 4 provided solutions i didn't understand any they used a new syntax to me and keywords
2015-08-25 09:37:18	-->	adeln (~adeln@109.205.252.120) has joined #haskell
2015-08-25 09:37:18	sedeki	does it mean you cannot necessarily increment a pointer to another variable?
2015-08-25 09:37:21	keko_	sedeki: in what context?
2015-08-25 09:37:35	sedeki	https://wiki.haskell.org/Hitchhikers_guide_to_Haskell
2015-08-25 09:37:41	sedeki	in bold
2015-08-25 09:37:52	<--	NeverDie (~NeverDie@cpe-184-152-22-98.nyc.res.rr.com) has quit (Quit: I'm off to sleep. ZZZzzz…)
2015-08-25 09:38:04	 *	hackagebot HPDF 1.4.7 - Generation of PDF documents  https://hackage.haskell.org/package/HPDF-1.4.7 (alpheccar)
2015-08-25 09:38:09	-->	Guest38 (~textual@38.88.246.202) has joined #haskell
2015-08-25 09:38:13	mauke3	sedeki: that's about formatting your source code
2015-08-25 09:38:22	keko_	I'd guess it means that it matters how code is positioned
2015-08-25 09:38:24	sedeki	hehe
2015-08-25 09:38:29	sedeki	sorry guys.
2015-08-25 09:38:35	<--	adeln (~adeln@109.205.252.120) has quit (Remote host closed the connection)
2015-08-25 09:38:37	mauke3	specifically, haskell cares what lines up with other things
2015-08-25 09:38:45	<--	ndrei (~avo@AMontsouris-651-1-160-158.w82-123.abo.wanadoo.fr) has quit (Ping timeout: 245 seconds)
2015-08-25 09:38:46	Welkin	sedeki: whitespace matters
2015-08-25 09:38:48	mauke3	most other languages don't care
2015-08-25 09:39:02	Welkin	you can disable whitespace, though, using { and }
2015-08-25 09:39:44	-->	rcosta (~rcosta@213.205.251.216) has joined #haskell
2015-08-25 09:40:02	-->	athan (~athan@50.250.143.235) has joined #haskell
2015-08-25 09:40:05	aweinstock	Testing0011: do you have a link to the description of that? "a list, possibly holding lists as elements" sounds like a tree, and that sounds it would be phrased that way in a lisp course
2015-08-25 09:40:33	-->	_sjs (~steven.sp@173.226.103.101) has joined #haskell
2015-08-25 09:40:39	Testing0011	https://wiki.haskell.org/99_questions/1_to_10 
2015-08-25 09:40:44	-->	Luke (~luke@unaffiliated/luke) has joined #haskell
2015-08-25 09:40:49	Testing0011	question number 7
2015-08-25 09:40:54	-->	beh_ (~beh@h-136-111.a336.priv.bahnhof.se) has joined #haskell
2015-08-25 09:41:03	aweinstock	(in haskell, you can't do lists with mixed nesting, and would explicitly need "data Tree a = Leaf a | Branch [Tree a]"
2015-08-25 09:41:07	Gurkenglas	Testing0011: "A list possibly holding lists"? That sounds like heterogenous lists... what is the type signature of the function you are supposed to implement?
2015-08-25 09:41:11	<--	yqt (~yqt@81.88.230.28) has quit (Ping timeout: 256 seconds)
2015-08-25 09:41:17	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 246 seconds)
2015-08-25 09:41:20	aupiff_	in stack, why are things listed under "packages" with the field "extra-dep: true" tested? Is there a way to avoid this?
2015-08-25 09:41:40	aweinstock	oh, that's exactly what it does
2015-08-25 09:42:02	<--	ainz (~ainz@1.47.105.30) has quit (Remote host closed the connection)
2015-08-25 09:42:18	SrPx	Does anyone have a template for creating a simple OpenGL application using raw? Just a simple example, a hello world with trigs, would do
2015-08-25 09:42:23	sedeki	has anyone tried Haskell for Mac?
2015-08-25 09:42:25	tsahyt	Gurkenglas: The example defines a new type for that, NestedList a = Elem a | List [NestedList a]
2015-08-25 09:42:30	kadoban	aupiff_: … not sure which part of that you're trying to avoid?
2015-08-25 09:42:35	kadoban	(or why?)
2015-08-25 09:42:36	Welkin	SrPx: raw?
2015-08-25 09:43:00	aupiff_	kadoban: I want to avoid the testing of things marked "extra-deps: true"
2015-08-25 09:43:01	Testing0011	Gurkenglas thnx I just solved that, when I looked a the provided answered I couldn't really understand. I do need to read more about Haskell
2015-08-25 09:43:01	-->	__TheDodd__ (~thedodd@23.253.242.125) has joined #haskell
2015-08-25 09:43:07	SrPx	OpenGL raw, I just want to raster an unboxed vector contents to the screen, so I need OpenGL
2015-08-25 09:43:14	<--	thedodd (~thedodd@23.253.242.125) has quit (Read error: Connection reset by peer)
2015-08-25 09:43:19	ReinH	Testing0011: Can you show how you flattened a list with arbitrary nesting depth? In fact, can you show the type that such a list has?
2015-08-25 09:43:20	Welkin	SrPx: I have a basic setup with gl https://github.com/ericnething/gl-sdl2-basics
2015-08-25 09:43:22	-->	maikowblue (~none@187.21.38.43) has joined #haskell
2015-08-25 09:43:32	kadoban	aupiff_: Oh I see, sorry I misread.
2015-08-25 09:43:33	Welkin	gl has a nicer API than the OpenGL bindings
2015-08-25 09:43:34	<--	mattyw (~mattyw@host86-129-77-252.range86-129.btcentralplus.com) has quit (Quit: Leaving)
2015-08-25 09:43:44	-->	biglama (~Day_dream@fon75-2-78-192-179-102.fbxo.proxad.net) has joined #haskell
2015-08-25 09:43:45	ReinH	Testing0011: or do you just mean [[a]]?
2015-08-25 09:43:52	<--	maikowblue (~none@187.21.38.43) has left #haskell
2015-08-25 09:43:53	ReinH	As in, a list that either contains lists or is empty
2015-08-25 09:43:57	-->	cbaatz (~cb@46-127-141-225.dynamic.hispeed.ch) has joined #haskell
2015-08-25 09:43:58	-->	iandb_ (~iandb@75.143.58.225) has joined #haskell
2015-08-25 09:43:59	SrPx	Welkin: thanks <3 <3
2015-08-25 09:44:01	<--	bennofs (~benno@2a02:810a:8200:2934:e611:5bff:fef6:ce26) has quit (Ping timeout: 256 seconds)
2015-08-25 09:44:26	<--	rcosta (~rcosta@213.205.251.216) has quit (Ping timeout: 260 seconds)
2015-08-25 09:44:26	<--	RegEchse (~regechse@ipbcc0bf64.dynamic.kabel-deutschland.de) has quit (Quit: <3 WeeChat (v1.4-dev))
2015-08-25 09:44:26	-->	tennix (~ztennix@unaffiliated/tennix) has joined #haskell
2015-08-25 09:44:33	mpickering	aupiff_: You have some stuff coming from git repos for example?
2015-08-25 09:44:34	mauke3	ReinH: <tsahyt> Gurkenglas: The example defines a new type for that, NestedList a = Elem a | List [NestedList a]
2015-08-25 09:44:49	mpickering	do you have the extra-dep: true field set?
2015-08-25 09:44:50	ReinH	Ah, so indeed a tree.
2015-08-25 09:44:51	aupiff_	mpickering: yep
2015-08-25 10:25:45	--	irc: disconnected from server
2015-08-25 10:26:12	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-25 10:26:12	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-25 10:26:12	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-25 10:26:12	--	Channel #haskell: 1496 nicks (1 op, 0 voices, 1495 normals)
2015-08-25 10:26:12	--	URL for #haskell: http://www.haskell.org/
2015-08-25 10:26:12	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-25 10:26:35	-->	jbgi (~jbgi@178-83-217-52.dynamic.hispeed.ch) has joined #haskell
2015-08-25 10:26:46	-->	AJAr__ (~AJAr@c-24-3-55-234.hsd1.pa.comcast.net) has joined #haskell
2015-08-25 10:27:22	<--	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has quit (Ping timeout: 250 seconds)
2015-08-25 10:27:35	-->	jdnavarro (~danny@50.Red-79-156-135.staticIP.rima-tde.net) has joined #haskell
2015-08-25 10:27:57	<--	Intolerable (~Adium@host81-138-103-242.in-addr.btopenworld.com) has quit (Quit: Leaving.)
2015-08-25 10:28:03	<--	cchalmer_ (~textual@cpc1-shep13-2-0-cust104.8-3.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-25 10:28:07	-->	Swizec (~swizec@199.21.86.210) has joined #haskell
2015-08-25 10:28:41	<--	filmackay (~filmackay@host-92-28-127-120.as13285.net) has quit (Remote host closed the connection)
2015-08-25 10:28:42	<--	jdnavarro (~danny@50.Red-79-156-135.staticIP.rima-tde.net) has quit (Client Quit)
2015-08-25 10:29:16	-->	anRch (~textualma@c-66-31-56-160.hsd1.ma.comcast.net) has joined #haskell
2015-08-25 10:29:52	-->	threadlock (threadlock@gateway/vpn/mullvad/x-cuqbzipswxkhmiwa) has joined #haskell
2015-08-25 10:29:54	-->	enaqx (~enaqx@188.163.69.11) has joined #haskell
2015-08-25 10:30:00	-->	mauris (~mauris@2601:58a:100:1dbb:5808:7bf:d1a9:7d3a) has joined #haskell
2015-08-25 10:30:00	<--	mauris (~mauris@2601:58a:100:1dbb:5808:7bf:d1a9:7d3a) has quit (Changing host)
2015-08-25 10:30:00	-->	mauris (~mauris@unaffiliated/nooodl) has joined #haskell
2015-08-25 10:30:09	<--	XorSwap (~XorSwap@wnpgmb016qw-ds01-214-177.dynamic.mtsallstream.net) has quit (Quit: Leaving)
2015-08-25 10:30:36	<--	Ven (~textual@163.5.245.253) has quit (Remote host closed the connection)
2015-08-25 10:31:07	--	MiningMarsh is now known as AwayMarsh
2015-08-25 13:32:05	--	irc: disconnected from server
2015-08-25 16:43:25	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-25 16:43:25	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-25 16:43:25	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-25 16:43:25	--	Channel #haskell: 1467 nicks (1 op, 0 voices, 1466 normals)
2015-08-25 16:43:25	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-25 16:43:25	--	URL for #haskell: http://www.haskell.org/
2015-08-25 16:43:45	<--	EunChe (~eunche@59.29.232.172) has quit (Ping timeout: 245 seconds)
2015-08-25 16:43:47	-->	hexagoxel_ (~hexagoxel@x4d066785.dyn.telefonica.de) has joined #haskell
2015-08-25 16:44:10	geekosaur	they do not
2015-08-25 16:44:17	-->	lspitzner_ (~lspitzner@x4d066785.dyn.telefonica.de) has joined #haskell
2015-08-25 16:44:21	<--	jeroko (~jeroko@80.111.84.162) has quit (Ping timeout: 255 seconds)
2015-08-25 16:44:38	<--	GLM (a1b5fd14@gateway/web/cgi-irc/kiwiirc.com/ip.161.181.253.20) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-08-25 16:44:42	-->	gothicsouth (~gothicsou@cpe-76-177-66-223.natcky.res.rr.com) has joined #haskell
2015-08-25 16:44:42	<--	Laserbear (~Laserbear@c-73-223-160-142.hsd1.ca.comcast.net) has quit (Read error: No route to host)
2015-08-25 16:45:11	<--	Eduard_Munteanu (~Eduard_Mu@188.26.187.17) has quit (Remote host closed the connection)
2015-08-25 16:45:12	geekosaur	even without representation base as an issue, I think precision handled that way is asking for trouble. unless you go the Data.Fixed way.
2015-08-25 16:45:15	-->	lethjakman (~lethjakma@71.56.221.51) has joined #haskell
2015-08-25 16:46:41	-->	junmin (~junmin@148.243.87.40) has joined #haskell
2015-08-25 16:47:02	-->	ril (~ril@c-67-188-43-174.hsd1.ca.comcast.net) has joined #haskell
2015-08-25 16:47:39	Cale	numee: The problem is just that because the line on which 'where' occurs is indented less than the first non-whitespace character following the 'let' (that is, the name of the function 'a'), it is not part of the let block, which isn't what you want.
2015-08-25 16:47:44	-->	Luke (~luke@unaffiliated/luke) has joined #haskell
2015-08-25 16:47:48	<--	exferenceBot (~exference@x5f7681a3.dyn.telefonica.de) has quit (Ping timeout: 264 seconds)
2015-08-25 16:47:48	<--	lspitzner (~lspitzner@x5f7681a3.dyn.telefonica.de) has quit (Ping timeout: 264 seconds)
2015-08-25 16:47:48	<--	hexagoxel (~hexagoxel@x5f7681a3.dyn.telefonica.de) has quit (Ping timeout: 264 seconds)
2015-08-25 16:47:48	--	lspitzner_ is now known as lspitzner
2015-08-25 16:47:48	--	hexagoxel_ is now known as hexagoxel
2015-08-25 16:47:50	<--	fikusz (~fikusz@catv-86-101-46-41.catv.broadband.hu) has quit (Ping timeout: 240 seconds)
2015-08-25 16:48:07	-->	exferenceBot (~exference@x4d066785.dyn.telefonica.de) has joined #haskell
2015-08-25 16:48:17	Cale	numee: If you indent it further, it works
2015-08-25 16:48:20	lpaste_	Cale pasted “like so” at http://lpaste.net/139647
2015-08-25 16:48:35	-->	croyd (~croyd@146-115-81-34.c3-0.sbo-ubr1.sbo.ma.cable.rcn.com) has joined #haskell
2015-08-25 16:49:06	<--	Zekka (~zekka@uawifi-nat-210-22.arizona.edu) has quit (Ping timeout: 240 seconds)
2015-08-25 16:49:44	noodles1	Is there a way to see all functions of a certain type? For example, if I wanted to see all functions of type a->[a] ?
2015-08-25 16:49:45	<--	junmin_ (~junmin@148.243.87.39) has quit (Ping timeout: 255 seconds)
2015-08-25 16:49:54	noodles1	Using ghci**
2015-08-25 16:50:05	<--	animated (~mike@S0106789684bea97d.vc.shawcable.net) has quit (Quit: animated)
2015-08-25 16:51:32	--	irc: disconnected from server
2015-08-25 16:55:05	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-25 16:55:05	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-25 16:55:05	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-25 16:55:05	--	Channel #haskell: 1463 nicks (1 op, 0 voices, 1462 normals)
2015-08-25 16:55:05	--	URL for #haskell: http://www.haskell.org/
2015-08-25 16:55:05	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-25 16:55:25	<--	ril (~ril@c-67-188-43-174.hsd1.ca.comcast.net) has quit (Ping timeout: 245 seconds)
2015-08-25 16:56:22	-->	ap01 (~anshu@ool-457c0ba3.dyn.optonline.net) has joined #haskell
2015-08-25 16:56:22	<--	Zoetrope (~Zoetrope@95-44-31-229-dynamic.agg2.kok.dbc-mgr.eircom.net) has quit (Read error: Connection reset by peer)
2015-08-25 16:56:37	-->	Zoetrope (~Zoetrope@95-44-31-229-dynamic.agg2.kok.dbc-mgr.eircom.net) has joined #haskell
2015-08-25 16:56:47	<--	codedmart (~codedmart@c-174-52-158-160.hsd1.ut.comcast.net) has quit (Quit: Leaving.)
2015-08-25 16:57:30	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-25 16:57:41	<--	mjs2600 (~mjs2600@c-50-156-203-132.hsd1.tn.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-25 16:57:52	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-25 16:58:03	-->	cads (~M@104-9-5-196.lightspeed.tukrga.sbcglobal.net) has joined #haskell
2015-08-25 16:59:15	<--	Luke (~luke@unaffiliated/luke) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-25 19:59:41	--	irc: disconnected from server
2015-08-25 21:10:06	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:35cc:628:e802:9eba) has joined #haskell
2015-08-25 21:10:06	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-25 21:10:06	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-25 21:10:06	--	Channel #haskell: 1453 nicks (1 op, 0 voices, 1452 normals)
2015-08-25 21:10:06	--	URL for #haskell: http://www.haskell.org/
2015-08-25 21:10:06	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-25 21:10:08	wizao	Also explains why I couldnt for the life of me understand why/how (=<<) was a predicate
2015-08-25 21:10:28	monochrom	haha
2015-08-25 21:10:30	<--	NeverDie (~NeverDie@cpe-184-152-22-98.nyc.res.rr.com) has quit (Quit: I'm off to sleep. ZZZzzz…)
2015-08-25 21:12:56	lpaste_	frelux pasted “Lens+Map+State space leak” at http://lpaste.net/139655
2015-08-25 21:13:37	frelux	^anyone have any thoughts on how to best fix the space leak there? (I understand why it happens, but don't have any nice-looking ideas)
2015-08-25 21:13:40	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-25 21:13:49	-->	martin-t (~martin-t@c-50-184-152-244.hsd1.ca.comcast.net) has joined #haskell
2015-08-25 21:14:12	<--	predator117 (~predator1@p4FDC1664.dip0.t-ipconnect.de) has quit (Ping timeout: 264 seconds)
2015-08-25 21:14:33	frelux	I seem to run into it in every program I write lately and would love to hear if there's a better approach
2015-08-25 21:15:07	-->	martin-t_ (~martin-t@199.201.64.3) has joined #haskell
2015-08-25 21:15:50	<--	alaunus (~connor@2601:405:4300:12:120b:a9ff:febf:fdc) has quit (Ping timeout: 245 seconds)
2015-08-25 21:16:09	-->	kognate (~kognate@pool-71-112-205-52.pitbpa.fios.verizon.net) has joined #haskell
2015-08-25 21:16:49	-->	NeverDie (~NeverDie@cpe-184-152-22-98.nyc.res.rr.com) has joined #haskell
2015-08-25 21:17:03	<--	XorSwap (~XorSwap@wnpgmb016qw-ds01-214-177.dynamic.mtsallstream.net) has quit (Ping timeout: 255 seconds)
2015-08-25 21:17:04	-->	gem (gem@nat/redhat/x-yqhonbmjoazfubrt) has joined #haskell
2015-08-25 21:18:07	<--	martin-t (~martin-t@c-50-184-152-244.hsd1.ca.comcast.net) has quit (Ping timeout: 246 seconds)
2015-08-25 21:18:08	-->	montagy (~montagy@103.43.105.1) has joined #haskell
2015-08-25 21:18:54	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-25 21:19:15	<--	nikki93 (~nikki93@2601:645:4100:2590:d459:5e79:626a:56c2) has quit (Remote host closed the connection)
2015-08-25 21:21:01	<--	kognate (~kognate@pool-71-112-205-52.pitbpa.fios.verizon.net) has quit (Ping timeout: 256 seconds)
2015-08-25 21:22:05	-->	crobbins (~crobbins@2602:30a:c08e:19e0:ecb2:9d45:4b39:3576) has joined #haskell
2015-08-25 21:23:30	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 240 seconds)
2015-08-25 21:23:47	<--	hattusili_III (~mark@unaffiliated/hattusili-iii/x-8359377) has quit (Disconnected by services)
2015-08-25 21:24:14	-->	hattusili_III_ (~mark@c-98-226-100-250.hsd1.in.comcast.net) has joined #haskell
2015-08-25 21:24:29	<--	i-amd3 (~i_amd3@125x102x70x118.ap125.ftth.ucom.ne.jp) has quit (Remote host closed the connection)
2015-08-25 21:24:56	-->	nikki93 (~nikki93@c-73-202-150-224.hsd1.ca.comcast.net) has joined #haskell
2015-08-25 21:25:03	<--	zuserm (~zuserm@pool-74-104-145-183.bstnma.fios.verizon.net) has left #haskell
2015-08-25 21:25:46	<--	jeadre (~jeadre@li1421-113.members.linode.com) has quit (Remote host closed the connection)
2015-08-25 21:26:39	-->	P1RATEZ (~piratez@unaffiliated/p1ratez) has joined #haskell
2015-08-25 21:26:46	-->	i-amd3 (~i_amd3@125x102x70x118.ap125.ftth.ucom.ne.jp) has joined #haskell
2015-08-25 21:26:51	-->	MrScout (~MrScout@unaffiliated/mrscout) has joined #haskell
2015-08-25 21:27:02	<--	wizao (4a4b2036@gateway/web/freenode/ip.74.75.32.54) has quit (Quit: Page closed)
2015-08-25 21:27:35	monochrom	may I delete "id ."?
2015-08-25 21:27:43	-->	jeadre (~jeadre@li1421-113.members.linode.com) has joined #haskell
2015-08-25 21:27:58	monochrom	what does at "0" ?= show i do?
2015-08-25 21:28:01	glguy	yes, but it won't help :)
2015-08-25 21:28:34	frelux	ah, yes, you don't need the id, sorry : )
2015-08-25 21:28:57	-->	Herogx (~Herogx@109.76.161.200) has joined #haskell
2015-08-25 21:28:58	-->	Eiam_ (~mine@unaffiliated/eiam) has joined #haskell
2015-08-25 21:29:53	johnw	sadly, State.Strict is not strict in its accumulator, and I'm guessing ?= is suffering from the same problem
2015-08-25 21:30:00	johnw	if you google for "State modify' strict", you should find earlier discussions about this
2015-08-25 21:30:33	monochrom	yeah. "Strict" refers to something else.
2015-08-25 21:31:29	monochrom	http://lpaste.net/41790/ to understand what Control.Monad.State.Lazy means, and by extension what Strict means.
2015-08-25 21:32:03	<--	Herogx__ (~Herogx@109.79.221.166) has quit (Ping timeout: 244 seconds)
2015-08-25 21:32:10	johnw	ahh
2015-08-25 21:32:15	johnw	thanks, monochrom 
2015-08-25 21:32:20	<--	Herogx (~Herogx@109.76.161.200) has quit (Client Quit)
2015-08-25 21:32:31	-->	jhrcek (jhrcek@nat/redhat/x-qhfznqcdfxsewtfz) has joined #haskell
2015-08-25 21:33:58	-->	Epowerj (~epowerj@cpe-75-187-111-74.insight.res.rr.com) has joined #haskell
2015-08-25 21:34:06	-->	dmj (~user@c-76-29-40-59.hsd1.il.comcast.net) has joined #haskell
2015-08-25 21:34:30	<--	athan_ (~athan@c-98-245-121-255.hsd1.co.comcast.net) has quit (Ping timeout: 240 seconds)
2015-08-25 21:34:51	frelux	Aha, that's super helpful.
2015-08-25 21:34:57	<--	martin-t_ (~martin-t@199.201.64.3) has quit (Read error: Connection reset by peer)
2015-08-25 21:35:26	<--	grizwako (~GrizzLy@dh207-76-185.xnet.hr) has quit (Quit: Leaving.)
2015-08-25 21:35:29	-->	martin-t (~martin-t@199.201.64.3) has joined #haskell
2015-08-25 21:35:45	<--	spopejoy (~stuart@ool-45785f12.dyn.optonline.net) has quit (Quit: spopejoy)
2015-08-25 21:35:51	<--	NeverDie (~NeverDie@cpe-184-152-22-98.nyc.res.rr.com) has quit (Quit: I'm off to sleep. ZZZzzz…)
2015-08-25 21:36:21	<--	subshad (~subshad@220-244-139-50.static.tpgi.com.au) has left #haskell
2015-08-25 21:37:11	-->	joco42_ (~joco42@dsl-hkibrasgw4-58c03a-80.dhcp.inet.fi) has joined #haskell
2015-08-25 21:37:49	-->	jiang42 (~jiang42@116.237.86.109) has joined #haskell
2015-08-25 21:38:20	<--	xevz (~mikael@distopic.net) has quit (Ping timeout: 245 seconds)
2015-08-25 21:38:34	-->	GLM (32b5d90f@gateway/web/cgi-irc/kiwiirc.com/ip.50.181.217.15) has joined #haskell
2015-08-25 21:39:33	-->	lritter (~lritter@f053085027.adsl.alicedsl.de) has joined #haskell
2015-08-25 21:39:54	<--	GLM (32b5d90f@gateway/web/cgi-irc/kiwiirc.com/ip.50.181.217.15) has quit (Client Quit)
2015-08-25 21:40:15	-->	__main__ (~main@c-50-185-71-208.hsd1.ca.comcast.net) has joined #haskell
2015-08-25 21:41:08	-->	jinblack (~jinblack@ip184-189-234-229.sb.sd.cox.net) has joined #haskell
2015-08-25 21:41:44	<--	joco42_ (~joco42@dsl-hkibrasgw4-58c03a-80.dhcp.inet.fi) has quit (Ping timeout: 250 seconds)
2015-08-25 21:42:02	-->	GLM (a1b5fd14@gateway/web/cgi-irc/kiwiirc.com/ip.161.181.253.20) has joined #haskell
2015-08-25 21:42:12	-->	jle` (~mstksg@unaffiliated/mstksg) has joined #haskell
2015-08-25 21:42:41	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-25 21:42:47	-->	Rainb (~rainb@181.50.148.224) has joined #haskell
2015-08-25 21:42:54	<--	jiang42 (~jiang42@116.237.86.109) has quit (Ping timeout: 244 seconds)
2015-08-25 21:43:10	-->	predator117 (~predator1@p4FDC1664.dip0.t-ipconnect.de) has joined #haskell
2015-08-25 21:43:21	<--	GLM (a1b5fd14@gateway/web/cgi-irc/kiwiirc.com/ip.161.181.253.20) has quit (Client Quit)
2015-08-25 21:44:10	<--	dfeuer (~dfeuer@wikimedia/Dfeuer) has quit (Quit: dfeuer)
2015-08-25 21:44:15	-->	GLM (32b5d90f@gateway/web/cgi-irc/kiwiirc.com/ip.50.181.217.15) has joined #haskell
2015-08-25 21:44:35	GLM	Does anyone have time to review my code?
2015-08-25 21:45:05	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-25 21:45:26	-->	hmrm (~hmrm@173-29-150-72.client.mchsi.com) has joined #haskell
2015-08-25 21:45:58	<--	c_wraith (~c_wraith@28d244188882.click-network.com) has quit (Ping timeout: 265 seconds)
2015-08-25 21:47:23	kadoban	GLM: One way to find out ;)
2015-08-25 21:47:41	dmj	GLM: post it here
2015-08-25 21:48:05	<--	malkomalko (~malkomalk@ool-457a2213.dyn.optonline.net) has quit (Ping timeout: 255 seconds)
2015-08-25 21:48:51	-->	gabriel_laddel (~user@unaffiliated/gabriel-laddel/x-9909917) has joined #haskell
2015-08-25 21:48:52	<--	martin-t (~martin-t@199.201.64.3) has quit (Read error: Connection reset by peer)
2015-08-25 21:48:53	GLM	https://gist.github.com/GarrettMosier/9d8755b7be047f8a2899
2015-08-25 21:49:17	<--	gothicso_ (~gothicsou@108.61.228.136) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-25 21:49:34	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 260 seconds)
2015-08-25 21:49:34	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-25 21:49:43	dmj	GLM: ColumnStat has created a lot of partial functions
2015-08-25 21:49:59	-->	lucasbrunialti (~lucasbrun@191.34.158.2) has joined #haskell
2015-08-25 21:50:06	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-25 21:50:16	dmj	GLM: for example (shortCount Numeric {}) will blow up
2015-08-25 21:50:22	GLM	dmj:Yes but I'm not sure how I can fix that
2015-08-25 21:50:45	dmj	GLM: you could use a GADT, or just define two seperate datatypes
2015-08-25 21:50:58	<--	Literphor (~alfred@209.237.92.139) has quit (Quit: Literphor)
2015-08-25 21:51:04	<--	lucasbrunialti (~lucasbrun@191.34.158.2) has quit (Remote host closed the connection)
2015-08-25 21:51:07	GLM	dmj:How would I go about doing that?
2015-08-25 21:51:18	dmj	GLM: also, never ever use String, except for the simplest of things. 
2015-08-25 21:51:20	-->	lucasbrunialti (~lucasbrun@191.34.158.2) has joined #haskell
2015-08-25 21:52:03	dmj	GLM: one way is data Textual = Textual {..} ..  data Numeric = Numeric {..}
2015-08-25 21:52:05	<--	predator117 (~predator1@p4FDC1664.dip0.t-ipconnect.de) has quit (Ping timeout: 240 seconds)
2015-08-25 21:52:10	<--	Rainb (~rainb@181.50.148.224) has quit (Ping timeout: 256 seconds)
2015-08-25 21:52:37	dmj	GLM: you want to see a GADT example?
2015-08-25 21:52:56	GLM	dmj:Yes please. How would I be able to pass in both types if I split them up?
2015-08-25 21:53:05	<--	wasbee_ (~textual@23.252.50.206) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-25 21:53:21	-->	cj3kim_ (~cj3kim@c-73-202-109-228.hsd1.ca.comcast.net) has joined #haskell
2015-08-25 21:53:36	 *	hackagebot ihaskell 0.7.0.2 - A Haskell backend kernel for the IPython project.  https://hackage.haskell.org/package/ihaskell-0.7.0.2 (gibiansky)
2015-08-25 21:53:47	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Read error: Connection reset by peer)
2015-08-25 21:55:10	-->	martin-t (~martin-t@c-50-184-152-244.hsd1.ca.comcast.net) has joined #haskell
2015-08-25 21:55:56	<--	Laserbear (~Laserbear@c-73-223-160-142.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2015-08-25 21:56:11	dmj	GLM: a good example would be from the facebook package, I'll try to retrofit it to your scenario
2015-08-25 21:56:15	dmj	GLM: http://hackage.haskell.org/package/fb-1.0.11/docs/src/Facebook-Types.html#AccessToken
2015-08-25 21:56:19	-->	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-25 21:56:56	GLM	Much appreciated
2015-08-25 21:56:58	dmj	GLM: also you want to newtype everything
2015-08-25 21:57:06	dmj	Int, Double, that could go everywhere and still typecheck
2015-08-25 21:57:08	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 260 seconds)
2015-08-25 21:57:29	dmj	GLM: also, use foldl' over foldl
2015-08-25 21:57:30	-->	isocliff (~isocliff@84.49.96.117) has joined #haskell
2015-08-25 21:57:42	-->	Laserbear (~Laserbear@c-73-223-160-142.hsd1.ca.comcast.net) has joined #haskell
2015-08-25 21:58:09	dmj	GLM: never use 'read' it's a dangerous function, always use readMaybe from Text.Read, line 85
2015-08-25 21:58:23	<--	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 252 seconds)
2015-08-25 21:59:01	GLM	dmj:This will be on a stream so do I still want the strict version?
2015-08-25 21:59:09	GLM	dmj:What do you mean by newtype?
2015-08-25 21:59:19	-->	Peaker (~Peaker@46.120.46.160) has joined #haskell
2015-08-25 22:00:15	<--	i-amd3 (~i_amd3@125x102x70x118.ap125.ftth.ucom.ne.jp) has quit (Remote host closed the connection)
2015-08-25 22:00:57	gamegoblin	So I just made a datatype like       "data IncrementalValue m a = Partial (m (IncrementalValue m a)) | Complete a"       where you can repeatedly call a Partial which presumably does some work behind the scenes until you get a Complete. Is there a more common way of accomplishing this?
2015-08-25 22:01:34	-->	filmackay (~filmackay@cpc42-slam6-2-0-cust176.2-4.cable.virginm.net) has joined #haskell
2015-08-25 22:02:06	dmj	GLM: I mean instad of doing Int -> Int -> Int, in your function signatures do, Count -> NullCount -> ShortCount, where Count is newtype Count = Count Int
2015-08-25 22:02:12	dmj	s/instad/instead
2015-08-25 22:02:24	<--	Eiam_ (~mine@unaffiliated/eiam) has quit (Quit: ╯°□°）╯︵ǝpouǝǝɹɟ)
2015-08-25 22:02:45	-->	bars (~anunakki@68.64.167.190) has joined #haskell
2015-08-25 22:02:52	<--	Natch (~Natch@h-155-122.a444.priv.bahnhof.se) has quit (Read error: Connection reset by peer)
2015-08-25 22:02:58	pacak	gamegoblin: looks kind of like Free
2015-08-25 22:03:14	-->	i-amd3 (~i_amd3@125x102x70x118.ap125.ftth.ucom.ne.jp) has joined #haskell
2015-08-25 22:03:18	<--	kamatsu (~Adium@123-243-95-236.static.tpgi.com.au) has quit (Read error: Connection reset by peer)
2015-08-25 22:03:23	gamegoblin	pacak: in what way?
2015-08-25 22:03:34	-->	danclien (~danclien@2602:302:d127:c120:dd3d:846d:ecd8:5be2) has joined #haskell
2015-08-25 22:03:39	-->	kamatsu (~Adium@123-243-95-236.static.tpgi.com.au) has joined #haskell
2015-08-25 22:04:10	-->	skore_de (~skore@2a02:908:cf11:8fe0:a11c:460d:ee59:8393) has joined #haskell
2015-08-25 22:04:21	glguy_	http://hackage.haskell.org/package/free-4.12.1/docs/Control-Monad-Trans-Free.html
2015-08-25 22:04:29	gamegoblin	pacak: just looked at the definition, it does look similar
2015-08-25 22:04:48	-->	m104ru (~m104ru@77.241.45.39) has joined #haskell
2015-08-25 22:05:33	-->	xacktm (xacktm@unaffiliated/xacktm) has joined #haskell
2015-08-25 22:05:40	<--	frelux (~frelux@c-73-231-78-184.hsd1.ca.comcast.net) has quit (Quit: frelux)
2015-08-25 22:05:52	<--	euclid (~anunakki@68.64.167.190) has quit (Ping timeout: 246 seconds)
2015-08-25 22:06:14	<--	tempname11 (~tempname1@79.165.104.134) has quit (Quit: Hi)
2015-08-25 22:07:02	GLM	dmj:So do I do that in the record?
2015-08-25 22:07:44	-->	vlatkoB (~IRC_clien@unaffiliated/vlatkob) has joined #haskell
2015-08-25 22:08:08	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-25 22:08:14	-->	Natch (~Natch@h-155-122.a444.priv.bahnhof.se) has joined #haskell
2015-08-25 22:10:25	<--	cgag (~cgag@c-24-5-78-159.hsd1.ca.comcast.net) has quit (Quit: WeeChat 1.1.1)
2015-08-25 22:10:27	dmj	GLM: you do a lot of updates, you might want to create lenses for these GADTs
2015-08-25 22:10:33	-->	cgag (~cgag@c-24-5-78-159.hsd1.ca.comcast.net) has joined #haskell
2015-08-25 22:10:47	dmj	GLM: do what in the record? You add the newtypes inside the GADT yes
2015-08-25 22:10:53	GLM	dmj:Never done work with lenses either so some advice would be good
2015-08-25 22:11:07	<--	Peaker (~Peaker@46.120.46.160) has quit (Ping timeout: 246 seconds)
2015-08-25 22:11:10	GLM	dmj:Am I creating GADTs or splitting up the datatype?
2015-08-25 22:11:31	<--	cgag (~cgag@c-24-5-78-159.hsd1.ca.comcast.net) has quit (Client Quit)
2015-08-25 22:11:38	-->	cgag (~cgag@c-24-5-78-159.hsd1.ca.comcast.net) has joined #haskell
2015-08-25 22:12:49	<--	cgag (~cgag@c-24-5-78-159.hsd1.ca.comcast.net) has quit (Client Quit)
2015-08-25 22:12:51	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 255 seconds)
2015-08-25 22:12:57	-->	cgag (~cgag@c-24-5-78-159.hsd1.ca.comcast.net) has joined #haskell
2015-08-25 22:13:41	dmj	GLM: here check this out, http://lpaste.net/139662
2015-08-25 22:13:50	<--	xacktm (xacktm@unaffiliated/xacktm) has quit
2015-08-25 22:14:03	<--	cgag (~cgag@c-24-5-78-159.hsd1.ca.comcast.net) has quit (Client Quit)
2015-08-25 22:14:07	-->	KarolisK (~karolis@78-60-68-107.static.zebra.lt) has joined #haskell
2015-08-25 22:14:20	-->	predator117 (~predator1@p4FDC1664.dip0.t-ipconnect.de) has joined #haskell
2015-08-25 22:15:31	GLM	dmj: Does that have all the changes you were talking about?
2015-08-25 22:15:31	<--	danclien (~danclien@2602:302:d127:c120:dd3d:846d:ecd8:5be2) has quit
2015-08-25 22:16:17	-->	malkomalko (~malkomalk@ool-457a2213.dyn.optonline.net) has joined #haskell
2015-08-25 22:16:36	dmj	GLM: yea, do you see how using the GADT you can update a particular record in a type safe way? line 27. That function operates on *only* numeric, there is no chance a rogue function from a different constructor can be applied it ot
2015-08-25 22:16:43	<--	path[l] (~vsi@199.201.64.3) has quit (Ping timeout: 252 seconds)
2015-08-25 22:17:05	dmj	GLM: you could have made it generic ColumnStat k -> Double -> ColumnStat k
2015-08-25 22:17:08	GLM	dmj:Yeah. I was trying to do that but couldn't seem to get it to work
2015-08-25 22:17:10	-->	foreignFunction (~ai@ip-4761.sunline.net.ua) has joined #haskell
2015-08-25 22:17:12	-->	Swizec (~swizec@c-67-164-98-169.hsd1.ca.comcast.net) has joined #haskell
2015-08-25 22:18:15	-->	path[l] (~vsi@108.169.4.171) has joined #haskell
2015-08-25 22:18:21	dmj	GLM: It's not an easy thing to do, so don't feel bad :)
2015-08-25 22:18:37	GLM	dmj:As long as I learn, I'm happy
2015-08-25 22:19:05	<--	lucasbrunialti (~lucasbrun@191.34.158.2) has left #haskell
2015-08-25 22:19:17	<--	arjanb (8259a911@gateway/web/freenode/ip.130.89.169.17) has quit (Quit: .)
2015-08-25 22:19:19	-->	xaero (xaero@the.flying.dutchman.panicbnc.net) has joined #haskell
2015-08-25 22:19:35	<--	tranma (~Adium@1.129.96.100) has quit (Ping timeout: 244 seconds)
2015-08-25 22:19:38	-->	tranma1 (~Adium@1.144.96.122) has joined #haskell
2015-08-25 22:19:46	dmj	GLM: basically you get to be more specific about the return type of your ADT using GADTs which disallows certain behaviors. Types make things more specific. 
2015-08-25 22:20:12	-->	somepunk (~rohinpate@cpe-104-175-72-113.socal.res.rr.com) has joined #haskell
2015-08-25 22:20:25	<--	malkomalko (~malkomalk@ool-457a2213.dyn.optonline.net) has quit (Ping timeout: 240 seconds)
2015-08-25 22:20:34	<--	rolo_ (~rolo@93-40-83-28.ip37.fastwebnet.it) has quit (Remote host closed the connection)
2015-08-25 22:20:49	-->	rolo (~rolo@93-40-83-28.ip37.fastwebnet.it) has joined #haskell
2015-08-25 22:20:52	GLM	Thanks. What did you mean by the "  -- | Type synonym for @'AccessToken' 'UserKind'@.                                                                                                                       
2015-08-25 22:20:52	GLM	" comment?
2015-08-25 22:21:02	<--	daniel-s (~daniel-s@mu00053769.eng.monash.edu.au) has quit (Remote host closed the connection)
2015-08-25 22:21:05	gamegoblin	Is there an equivalent of `forever` for applicatives?
2015-08-25 22:21:10	dmj	GLM: that's the copy and paste from the fb package's example
2015-08-25 22:21:10	-->	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-25 22:21:16	-->	daniel-s (~daniel-s@mu00053769.eng.monash.edu.au) has joined #haskell
2015-08-25 22:21:18	dmj	GLM: retrofitted to your example
2015-08-25 22:21:21	-->	ulfdoz (~mary@217.194.71.178) has joined #haskell
2015-08-25 22:21:32	GLM	Should I be able to use that code in my example and have it work?
2015-08-25 22:21:49	<--	xaero (xaero@the.flying.dutchman.panicbnc.net) has quit (Quit: PanicBNC - http://PanicBNC.net)
2015-08-25 22:22:01	pacak	gamegoblin: there's no join for Applicative...
2015-08-25 22:22:03	dmj	GLM: yea, it compiled for me
2015-08-25 22:22:04	<--	martin-t (~martin-t@c-50-184-152-244.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2015-08-25 22:22:21	-->	martin-t (~martin-t@c-50-184-152-244.hsd1.ca.comcast.net) has joined #haskell
2015-08-25 22:22:23	GLM	dmj:Thanks. Be back after I have it working
2015-08-25 22:23:34	-->	xacktm (xacktm@the.flying.dutchman.panicbnc.net) has joined #haskell
2015-08-25 22:23:36	Lokathor	it works!
2015-08-25 22:23:38	 *	hackagebot ihaskell 0.7.0.3 - A Haskell backend kernel for the IPython project.  https://hackage.haskell.org/package/ihaskell-0.7.0.3 (gibiansky)
2015-08-25 22:23:50	Lokathor	i got the cube spinning demo to go, it looks like this gif http://dpwright.com/posts/2015/03/25/getting-up-and-running-with-gl/spinningCube.gif
2015-08-25 22:24:14	<--	pimlu (~pimlu@128.172.35.10) has quit (Ping timeout: 244 seconds)
2015-08-25 22:24:25	<--	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 246 seconds)
2015-08-25 22:24:48	-->	caumeslasal (~Thunderbi@mar92-10-82-239-65-141.fbx.proxad.net) has joined #haskell
2015-08-25 22:26:35	-->	ramky (ramky@nat/redhat/x-dxuvhognsotyohhi) has joined #haskell
2015-08-25 22:27:44	-->	hamid (~nithp@unaffiliated/hamid) has joined #haskell
2015-08-25 22:27:53	-->	ketil_ (ketil@engen.priv.no) has joined #haskell
2015-08-25 22:28:46	<--	randy655 (~user@205-178-7-160.c3-0.mart-ubr1.chi-mart.il.cable.rcn.com) has quit (Ping timeout: 260 seconds)
2015-08-25 22:28:48	<--	xacktm (xacktm@the.flying.dutchman.panicbnc.net) has quit (Quit: PanicBNC - http://PanicBNC.net)
2015-08-25 22:29:09	<--	SrPx (b1ce3c0e@gateway/web/freenode/ip.177.206.60.14) has quit (Ping timeout: 246 seconds)
2015-08-25 22:29:09	<--	owa (~over@poisoned.dns.ug) has quit (Ping timeout: 245 seconds)
2015-08-25 22:29:31	--	paf31_away is now known as paf31
2015-08-25 22:30:13	<--	filmackay (~filmackay@cpc42-slam6-2-0-cust176.2-4.cable.virginm.net) has quit (Remote host closed the connection)
2015-08-25 22:30:43	<--	somepunk (~rohinpate@cpe-104-175-72-113.socal.res.rr.com) has quit (Ping timeout: 246 seconds)
2015-08-25 22:31:15	-->	jgt1 (~jgt@dfr63.neoplus.adsl.tpnet.pl) has joined #haskell
2015-08-25 22:31:17	<--	endokqr (kqr@h30n15-nt-a11.ias.bredband.telia.com) has quit (Ping timeout: 255 seconds)
2015-08-25 22:31:28	<--	Guest46538 (~jlamothe@jlamothe.net) has quit (Ping timeout: 244 seconds)
2015-08-25 22:31:28	<--	daniel-s (~daniel-s@mu00053769.eng.monash.edu.au) has quit (Remote host closed the connection)
2015-08-25 22:31:43	-->	daniel-s (~daniel-s@mu00053769.eng.monash.edu.au) has joined #haskell
2015-08-25 22:32:51	-->	joneshf-laptop (~joneshf@98.208.35.89) has joined #haskell
2015-08-25 22:32:58	<--	_sjs (~steven.sp@108-228-29-235.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 260 seconds)
2015-08-25 22:32:59	<--	roflbox1 (roflbox@gateway/vpn/mullvad/x-mubdutfdiejigbub) has quit (Remote host closed the connection)
2015-08-25 22:33:00	-->	gothicsouth (~gothicsou@gateway/vpn/privateinternetaccess/gothicsouth) has joined #haskell
2015-08-25 22:33:52	dmj	GLM: ok
2015-08-25 22:34:03	<--	martin-t (~martin-t@c-50-184-152-244.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2015-08-25 22:34:14	-->	martin-t (~martin-t@c-50-184-152-244.hsd1.ca.comcast.net) has joined #haskell
2015-08-25 22:34:35	<--	grohne (~grohne@hamfast.iai.uni-bonn.de) has quit (Ping timeout: 264 seconds)
2015-08-25 22:34:46	-->	grizwako (~grizzly@inchoo4u.net) has joined #haskell
2015-08-25 22:35:01	-->	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has joined #haskell
2015-08-25 22:35:03	<--	Eiam (~mine@unaffiliated/eiam) has quit (Ping timeout: 252 seconds)
2015-08-25 22:35:04	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-25 22:35:18	<--	Ch0c0late (~textual@ip68-4-145-190.oc.oc.cox.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-08-25 22:35:47	<--	jgt1 (~jgt@dfr63.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 264 seconds)
2015-08-25 22:36:09	GLM	dmj:I get the error of "    Illegal generalised algebraic data declaration for ‘ColumnStat’"
2015-08-25 22:36:24	<--	urodna (~urodna@unaffiliated/urodna) has quit (Quit: urodna)
2015-08-26 09:23:15	--	irc: disconnected from server
2015-08-26 09:23:44	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-26 09:23:44	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-26 09:23:44	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:26
2015-08-26 09:23:44	--	Channel #haskell: 1519 nicks (1 op, 0 voices, 1518 normals)
2015-08-26 09:23:44	--	Notice(leguin.freenode.net): [freenode-info] channel flooding and no channel staff around to help? Please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
2015-08-26 09:23:44	--	URL for #haskell: http://www.haskell.org/
2015-08-26 09:23:45	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-26 09:24:01	athan	http://athanclark.github.io/posts/2015-08-26-returnWhen-for-MonadPlus.html
2015-08-26 09:24:10	 *	athan places target on forehead
2015-08-26 09:24:26	<--	Guest83746 (~jlamothe@kitchener.tech911solutions.com) has quit (Ping timeout: 252 seconds)
2015-08-26 09:24:27	<--	Guest7099 (~greves@118-169-254-230.dynamic.hinet.net) has quit (Ping timeout: 260 seconds)
2015-08-26 09:24:43	-->	Sixmsj (~Sixmsj@c-50-131-110-35.hsd1.ca.comcast.net) has joined #haskell
2015-08-26 09:24:56	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Remote host closed the connection)
2015-08-26 09:25:21	<--	youngbaks (~youngbaks@41.204.187.12) has quit (Client Quit)
2015-08-26 09:25:23	<--	sigma914 (~sigma@80.76.204.146) has quit (Remote host closed the connection)
2015-08-26 09:25:29	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-26 09:25:36	<--	edon (~user@albalug/edon) has quit (Ping timeout: 244 seconds)
2015-08-26 09:25:54	-->	armyriad (~armyriad@71-83-188-91.dhcp.lnbh.ca.charter.com) has joined #haskell
2015-08-26 09:26:02	-->	jlamothe_ (~jlamothe@jlamothe.net) has joined #haskell
2015-08-26 09:26:10	 *	mauke3 boops athan
2015-08-26 09:26:10	-->	Welkin (~Welkin@rrcs-97-78-71-196.se.biz.rr.com) has joined #haskell
2015-08-26 09:26:22	-->	arahael1 (~arahael@120.155.53.237) has joined #haskell
2015-08-26 09:26:25	athan	mauke3: D:
2015-08-26 09:26:36	fosterite	athan: seems reasonable, reasonably idiomatic translation
2015-08-26 09:26:57	athan	fosterite: Thank you, I'm very surprised this doesn't already exist
2015-08-26 09:27:11	fosterite	athan: that was my exact response
2015-08-26 09:27:13	<--	kuznero (d45d2725@gateway/web/freenode/ip.212.93.39.37) has left #haskell
2015-08-26 09:27:43	<--	Arahael (~arahael@120.155.24.29) has quit (Ping timeout: 260 seconds)
2015-08-26 09:27:57	<--	tsani (~tsani@jerrington.me) has quit (Remote host closed the connection)
2015-08-26 09:28:12	<--	tromp__ (~tromp@rtc35-240.rentec.com) has quit
2015-08-26 09:28:14	<--	Noldorin (~noldorin@unaffiliated/noldorin) has quit (Max SendQ exceeded)
2015-08-26 09:28:15	Welkin	hello athan 
2015-08-26 09:28:50	athan	Hi Welkin!
2015-08-26 09:28:54	<--	doomlord (~textual@host81-155-65-113.range81-155.btcentralplus.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-26 09:28:55	mauke3	ashin, achos, athan
2015-08-26 09:29:17	-->	trism (~jconti@unaffiliated/trism) has joined #haskell
2015-08-26 09:29:21	<--	captain_haddock (5bce002b@gateway/web/freenode/ip.91.206.0.43) has quit (Quit: Page closed)
2015-08-26 09:29:36	<--	Zariel (~chris@86.188.229.98) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-26 09:30:06	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Ping timeout: 255 seconds)
2015-08-26 09:30:43	-->	tsani (~tsani@jerrington.me) has joined #haskell
2015-08-26 09:30:43	-->	glguy (~glguy@haskell/developer/glguy) has joined #haskell
2015-08-26 09:30:43	<--	ldbrandy (~Adium@199.201.64.3) has quit (Read error: Connection reset by peer)
2015-08-26 09:31:27	wkmanire	mauke3: nathin nashin nachos
2015-08-26 09:31:36	<--	swade61 (~swade61@host81-149-190-248.in-addr.btopenworld.com) has quit (Quit: Leaving.)
2015-08-26 09:31:38	wkmanire	oops. nathan* crap, ruined it.
2015-08-26 09:31:54	-->	twanvl (~twanvl@dhcp-077-250-086-217.chello.nl) has joined #haskell
2015-08-26 09:32:45	-->	codesoup (~codesoup@CPE68b6fcf580d3-CM68b6fcf580d0.cpe.net.cable.rogers.com) has joined #haskell
2015-08-26 09:32:54	<--	rcosta (~rcosta@host86-145-249-206.range86-145.btcentralplus.com) has quit (Remote host closed the connection)
2015-08-26 09:32:58	-->	Hex189 (~Hex@46.101.12.6) has joined #haskell
2015-08-26 09:33:09	<--	darenthis (~darenthis@151.237.232.130) has quit (Remote host closed the connection)
2015-08-26 09:33:13	<--	mauke3 (~123@217.111.88.242) has quit (Quit: leaving)
2015-08-26 09:33:13	-->	the_2nd (~the_2nd@2a02:8070:4381:3700::3) has joined #haskell
2015-08-26 09:33:15	-->	ldbrandy (~Adium@2601:647:4900:1f2b:d09f:148:6846:53cb) has joined #haskell
2015-08-26 09:33:16	-->	jgertm (~amontimur@46.128.43.80.dynamic.cablesurf.de) has joined #haskell
2015-08-26 09:33:31	<--	Ven (~textual@163.5.245.253) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-08-26 09:33:36	the_2nd	can someone point me to a ressources showing the minimal setup for a cabal project/package/lib?
2015-08-26 09:33:48	the_2nd	folder structure, cabal file, setup, testing
2015-08-26 09:33:54	GLM	the_2nd: http://howistart.org/posts/haskell/1
2015-08-26 09:34:09	 *	hackagebot leksah-server 0.15.0.9 - Metadata collection for leksah  https://hackage.haskell.org/package/leksah-server-0.15.0.9 (HamishMackenzie)
2015-08-26 09:34:16	-->	cchalmer_ (~textual@cpc1-shep13-2-0-cust104.8-3.cable.virginm.net) has joined #haskell
2015-08-26 09:34:33	-->	Ayey_ (~rune@0135301590.0.fullrate.dk) has joined #haskell
2015-08-26 09:34:50	<--	ldbrandy (~Adium@2601:647:4900:1f2b:d09f:148:6846:53cb) has quit (Client Quit)
2015-08-26 09:34:57	<--	b0oh (~b0oh@h-72-214.a137.corp.bahnhof.se) has quit
2015-08-26 09:34:59	<--	dwins (~dwins@c-73-200-135-248.hsd1.va.comcast.net) has quit (Remote host closed the connection)
2015-08-26 09:35:22	ReinH	the_2nd: you could use stack and have it generate it for you
2015-08-26 09:35:30	<--	albertid (~albertid_@p5DC4DB38.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2015-08-26 09:35:46	<--	paradoja (~paradoja@37.44.1.40) has quit (Ping timeout: 250 seconds)
2015-08-26 09:36:02	the_2nd	GLM, ReinH what if I already have the .hs files?
2015-08-26 09:36:13	<--	blackbeard (~textual@183.83.49.186) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-26 09:36:20	ReinH	the_2nd: stack init or cabal init in the directory
2015-08-26 09:36:31	-->	qubitnerd (~neutrino@unaffiliated/electron/x-8286743) has joined #haskell
2015-08-26 09:36:34	-->	blackbeard (~textual@183.83.49.186) has joined #haskell
2015-08-26 09:36:40	ReinH	note that latest stack's project generation seems much smarter, not sure if that's released or on HEAD
2015-08-26 09:37:05	-->	native_killer (~Native@124.253.123.120) has joined #haskell
2015-08-26 09:37:13	xandaros	How would I go about reading a binary format? I am looking at the 'binary' package, but I don't see any way to read, for example, 2-bit values from a bytestring
2015-08-26 09:37:18	ReinH	the_2nd: the naming convention for source files is ./src/Foo.hs contains Foo and ./src/Foo/Bar.hs contains Foo.Bar
2015-08-26 09:37:33	ReinH	xandaros: You use Get
2015-08-26 09:37:35	-->	danthemyth (~danthemyt@50.246.66.201) has joined #haskell
2015-08-26 09:37:45	<--	ranaharoni (~ranaharon@229.Red-88-14-188.dynamicIP.rima-tde.net) has quit
2015-08-26 09:37:47	-->	rcosta (~rcosta@host86-145-249-206.range86-145.btcentralplus.com) has joined #haskell
2015-08-26 09:38:25	ReinH	xandaros: here's an example using bytes, but it's very similar with binary http://lpaste.net/8497494672313155584
2015-08-26 09:38:27	the_2nd	synopsis = small description? (no native english speaker)
2015-08-26 09:38:31	-->	dwins (~dwins@c-73-200-135-248.hsd1.va.comcast.net) has joined #haskell
2015-08-26 09:38:38	ReinH	the_2nd: yes
2015-08-26 09:38:44	<--	cchalmer_ (~textual@cpc1-shep13-2-0-cust104.8-3.cable.virginm.net) has quit (Ping timeout: 246 seconds)
2015-08-26 09:39:16	-->	lucasbrunialti (~lucasbrun@gwleste.semfio.usp.br) has joined #haskell
2015-08-26 09:39:24	<--	Zekka (~zekka@ip24-251-69-145.ph.ph.cox.net) has quit (Ping timeout: 264 seconds)
2015-08-26 09:39:29	<--	GLM (a1b5fd14@gateway/web/cgi-irc/kiwiirc.com/ip.161.181.253.20) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-08-26 09:39:34	<--	ziocroc (~ziocroc3@151.74.47.217) has quit (Ping timeout: 246 seconds)
2015-08-26 09:39:41	<--	fsvehla (~fsvehla@h081217222140.dyn.cm.kabsi.at) has quit (Quit: fsvehla)
2015-08-26 09:39:52	<--	jp_rider (~Adium@2601:152:4103:4410:5192:b159:4a1f:6ae0) has quit (Quit: Leaving.)
2015-08-26 09:40:03	xandaros	ReinH: Well, I know I am going to need Get and I can probably use it to read bytes without issue. I'm looking at a heavily packed format, though, where some values are only a few bits long and not byte-aligned
2015-08-26 09:40:13	ReinH	xandaros: oh, *bits*.
2015-08-26 09:40:18	ReinH	I misread.
2015-08-26 09:40:23	-->	martin-t (~martin-t@199.201.64.129) has joined #haskell
2015-08-26 09:40:27	-->	MultiPurposeHat (~multipurp@69.159.63.35) has joined #haskell
2015-08-26 09:40:28	-->	murphxyz (~textual@63.90.74.129) has joined #haskell
2015-08-26 09:40:32	the_2nd	no wonder there are no tutorials for this which I could find
2015-08-26 09:40:37	the_2nd	cabal init and thats it
2015-08-26 09:40:38	the_2nd	thx
2015-08-26 09:40:45	-->	jp_rider (~Adium@c-73-134-205-106.hsd1.md.comcast.net) has joined #haskell
2015-08-26 09:40:50	-->	voltalio (~textual@173-14-36-210-Michigan.hfc.comcastbusiness.net) has joined #haskell
2015-08-26 09:40:57	ReinH	the_2nd: yeah :/
2015-08-26 09:41:02	-->	frelux (~frelux@c-73-231-78-184.hsd1.ca.comcast.net) has joined #haskell
2015-08-26 09:41:23	-->	rcyr (~rcyr@modemcable204.138-163-184.mc.videotron.ca) has joined #haskell
2015-08-26 09:41:27	<--	voltalio (~textual@173-14-36-210-Michigan.hfc.comcastbusiness.net) has quit (Max SendQ exceeded)
2015-08-26 09:41:28	-->	fabianvf (~fabianvf@216.30.185.217) has joined #haskell
2015-08-26 09:41:37	-->	Tantadruj (~nobody@c-69-181-161-160.hsd1.ca.comcast.net) has joined #haskell
2015-08-26 09:42:02	<--	blackbeard (~textual@183.83.49.186) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-26 09:42:22	-->	blackbeard (~textual@183.83.49.186) has joined #haskell
2015-08-26 09:42:29	ReinH	xandaros: yeah, binary et al work on bytes... you say not byte-aligned. Does that mean you're reading, e.g., 5 5 5 1 or so?
2015-08-26 09:42:29	<--	blackbeard (~textual@183.83.49.186) has quit (Client Quit)
2015-08-26 09:42:29	-->	ziocroc (~ziocroc3@151.74.47.217) has joined #haskell
2015-08-26 09:42:34	<--	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 272 seconds)
2015-08-26 09:42:38	<--	rgr (~user@x50abddae.dyn.telefonica.de) has quit (Read error: Connection reset by peer)
2015-08-26 09:42:44	<--	P1RATEZ (~piratez@unaffiliated/p1ratez) has quit (Quit: http://support.creative.com/kb/ShowArticle.aspx?sid=126331&h=13a)
2015-08-26 09:43:22	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Remote host closed the connection)
2015-08-26 09:43:32	ReinH	xandaros: at one point I wrote some template haskell to do this, so you could say readBits, e.g., "aaaaabbbbbcccccd" and automatically define a, b, and c via the appropriate bit shifting.
2015-08-26 09:43:42	ReinH	I'm not sure if I have that on this computer
2015-08-26 09:43:55	<--	gothicsouth (~gothicsou@108.61.228.61) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-26 09:43:57	-->	blackbeard (~textual@183.83.49.186) has joined #haskell
2015-08-26 09:44:07	ReinH	I used it for an 8080 emulator iirc
2015-08-26 09:44:08	<--	keix (~kei@softbank126027220007.bbtec.net) has quit (Ping timeout: 246 seconds)
2015-08-26 09:44:14	xandaros	hmm, that's an interesting idea, but then you get variable-sized values and stuff
2015-08-26 09:44:30	ReinH	xandaros: yeah :/
2015-08-26 09:44:49	the_2nd	ReinH, how to use leksah now, so auto complete etc. works?
2015-08-26 09:44:54	ReinH	well, you could define some combinators
2015-08-26 09:44:58	ReinH	the_2nd: I don't use leksah
2015-08-26 09:44:59	the_2nd	seems like it simply opens files as editor for me
2015-08-26 09:45:05	the_2nd	ReinH, any IDE?
2015-08-26 09:45:11	the_2nd	or does anyone else use leksah?
2015-08-26 09:45:18	ReinH	the_2nd: I use emacs. Some people might use leksah.
2015-08-26 09:45:41	ReinH	xandaros: Hmm... you could read a Word32 as [Bool] and then operate on slices... that might work.
2015-08-26 09:45:50	<--	fabianvf (~fabianvf@216.30.185.217) has quit (Ping timeout: 240 seconds)
2015-08-26 09:45:52	hamishmack	the_2nd: How did you install Leksah?
2015-08-26 09:45:56	<--	tomboy64 (~tomboy@dslb-088-075-062-112.088.075.pools.vodafone-ip.de) has quit (Quit: Uhh ... gotta go.)
2015-08-26 09:46:01	ReinH	you'd spend a fair amount of time building up some combinators to make that ergonomic
2015-08-26 09:46:09	the_2nd	hamishmack, via cabal
2015-08-26 09:46:12	xandaros	cereal, binary and bytes have a striking similarity
2015-08-26 09:46:16	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 244 seconds)
2015-08-26 09:46:25	ReinH	xandaros: bytes was designed to bridge cereal and binary functionality
2015-08-26 09:46:40	ReinH	at one point, cereal had some featuers that binary lacked. At this point, I think most people use binary.
2015-08-26 09:46:50	geekosaur	...which is mildly weird since cereal started out as lazy binary
2015-08-26 09:46:52	-->	tomboy64 (~tomboy@dslb-088-075-062-112.088.075.pools.vodafone-ip.de) has joined #haskell
2015-08-26 09:46:55	the_2nd	ReinH, how would I use this lib from another project now?
2015-08-26 09:47:05	hamishmack	When you first run it it create or download metadata for the packages you have installed
2015-08-26 09:47:16	glguy	xandaros: cereal existed because binary used to be missing a bunch of features, but binary has incorporated them at this point
2015-08-26 09:47:20	<--	rcosta (~rcosta@host86-145-249-206.range86-145.btcentralplus.com) has quit (Remote host closed the connection)
2015-08-26 09:47:29	glguy	Ah, which ReinH said already
2015-08-26 09:47:38	ReinH	the_2nd: stack is designed to make this easier. With cabal, you can add its root directory as a source. I don't know where this is described though :/
2015-08-26 09:47:40	hamishmack	If this fails the Modules pane will remain empty and autocomplete will not work
2015-08-26 09:47:47	ReinH	glguy: :D
2015-08-26 09:48:00	sm	silly haddock, stop choking on my commented out pattern guards
2015-08-26 09:48:12	hamishmack	it will retry automatically, but it may take a while to finish
2015-08-26 09:48:40	hamishmack	you can check it is making progress by looking in ~/.leksah-0.15/metadata
2015-08-26 09:48:43	ReinH	xandaros: however, cereal has a more clever name, so you may consider using it for that reason.
2015-08-26 09:48:49	xandaros	lol
2015-08-26 09:48:50	-->	voltalio (~textual@173-14-36-210-Michigan.hfc.comcastbusiness.net) has joined #haskell
2015-08-26 09:49:19	glguy	geekosaur: cereal started out as a binary that worked on strict bytestrings. What do you mean that it started as a lazy binary?
2015-08-26 09:49:31	xandaros	only both solve problems other than mine
2015-08-26 09:49:32	geekosaur	maybe I'm recalling backwards then
2015-08-26 09:49:34	-->	youngbaks (~youngbaks@41.204.187.12) has joined #haskell
2015-08-26 09:49:40	geekosaur	I thought binary was strict bytestrings originally
2015-08-26 09:49:51	glguy	binary used to be lazier than it is now
2015-08-26 09:50:26	hamishmack	the_2nd: Also check ~/.leksah-0.15/collectSystem.report
2015-08-26 09:50:33	-->	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-26 09:50:34	glguy	now it's less lazy and is built on top of an incremental interface to strict bytestrings which can be driven by a lazy bytestring
2015-08-26 09:50:43	ReinH	xandaros: I still use bytes out of habit and because I like the Serial typeclass
2015-08-26 09:52:00	<--	athan (~athan@50.243.136.91) has quit (Ping timeout: 264 seconds)
2015-08-26 09:52:47	xandaros	binary-strict has a 'BitGet' module!
2015-08-26 09:52:59	<--	Hex189 (~Hex@46.101.12.6) has quit (Ping timeout: 256 seconds)
2015-08-26 09:53:07	the_2nd	ReinH, when doing cabal build, it says it cant find my file
2015-08-26 09:53:16	the_2nd	source dirs : MYNAME
2015-08-26 09:53:21	the_2nd	all files in MYNAME/
2015-08-26 09:53:23	<--	danthemyth (~danthemyt@50.246.66.201) has quit (Remote host closed the connection)
2015-08-26 09:53:30	the_2nd	with MYNAME.SUBNAME as module
2015-08-26 10:28:27	--	irc: disconnected from server
2015-08-26 10:28:55	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-26 10:28:55	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-26 10:28:55	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-26 10:28:56	--	Channel #haskell: 1522 nicks (1 op, 0 voices, 1521 normals)
2015-08-26 10:28:56	--	URL for #haskell: http://www.haskell.org/
2015-08-26 10:28:56	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-26 10:29:06	<--	slack1256 (~slack1256@181-161-93-20.baf.movistar.cl) has quit (Quit: Konversation terminated!)
2015-08-26 10:29:11	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 240 seconds)
2015-08-26 10:29:23	<--	danvet_ (~daniel@2a02:168:56c9:0:22cf:30ff:fe4c:37d6) has quit (Quit: Ex-Chat)
2015-08-26 10:29:28	<--	webchat099 (547fb55c@gateway/web/freenode/ip.84.127.181.92) has quit (Ping timeout: 246 seconds)
2015-08-26 10:29:59	-->	Matti565 (~Matti565@s529c8f06.adsl.online.nl) has joined #haskell
2015-08-26 10:30:16	ReinH	actually the guard was the one that actually worked, but you get the idea
2015-08-26 10:31:12	-->	Guest38 (~textual@38.88.246.202) has joined #haskell
2015-08-26 10:32:11	-->	Wizek (~Wizek@catv-178-48-235-127.catv.broadband.hu) has joined #haskell
2015-08-26 10:32:21	-->	Intolerable (~Adium@cpc14-cmbg15-2-0-cust352.5-4.cable.virginm.net) has joined #haskell
2015-08-26 10:33:10	<--	anRch (~textualma@ip-64-134-98-1.public.wayport.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-08-26 10:33:17	<--	qubitnerd (~neutrino@unaffiliated/electron/x-8286743) has quit (Ping timeout: 244 seconds)
2015-08-26 10:33:18	<--	osa1 (~omer@c-68-45-63-144.hsd1.in.comcast.net) has quit (Ping timeout: 244 seconds)
2015-08-26 10:33:33	jle`	when did data families become a thing
2015-08-26 10:33:50	<--	raichoo (~raichoo@mue-88-130-36-050.dsl.tropolys.de) has quit (Ping timeout: 246 seconds)
2015-08-26 10:34:11	-->	anRch (~textualma@ip-64-134-98-1.public.wayport.net) has joined #haskell
2015-08-26 10:34:27	<--	anRch (~textualma@ip-64-134-98-1.public.wayport.net) has quit (Client Quit)
2015-08-26 10:35:04	xenog	Anybody using Haskell on Raspberry Pi?
2015-08-26 10:36:20	<--	Xack (Matrixiumn@unaffiliated/matrixiumn) has quit (Remote host closed the connection)
2015-08-26 10:36:21	-->	EvanR (~evan@unaffiliated/evanr) has joined #haskell
2015-08-26 10:38:31	<--	rrbm823 (~rrbm823@97-106-138-233.res.bhn.net) has quit (Ping timeout: 255 seconds)
2015-08-26 10:38:54	-->	Matrixiumn (Matrixiumn@unaffiliated/matrixiumn) has joined #haskell
2015-08-26 10:39:29	-->	noam (~noam@213.57.247.238) has joined #haskell
2015-08-26 10:39:43	codedmart	I would like to be able to use Raw with Enter. I have 'Mine' in files with my changes and 'Now' with what it is currently. https://gist.github.com/codedmart/3d0277cd6947e5d72dab#file-error
2015-08-26 10:39:49	codedmart	This is just what I tried right now.
2015-08-26 10:39:55	<--	benma (~benma@46-126-157-104.dynamic.hispeed.ch) has quit (Remote host closed the connection)
2015-08-26 10:39:58	codedmart	Not sure how to go about getting Raw to work with Enter.
2015-08-26 10:40:16	-->	doomlord (~textual@host81-155-65-113.range81-155.btcentralplus.com) has joined #haskell
2015-08-26 10:40:26	-->	foreignFunction1 (~ai@ip-4761.sunline.net.ua) has joined #haskell
2015-08-26 10:40:36	-->	fjordrunner (~fjordrunn@ti0045a400-1600.bb.online.no) has joined #haskell
2015-08-26 10:40:47	<--	foreignFunction (~ai@ip-4761.sunline.net.ua) has quit (Read error: Connection reset by peer)
2015-08-26 10:41:42	-->	Elish (~x@unaffiliated/elish) has joined #haskell
2015-08-26 10:42:44	-->	SrPx (b1ce3c0e@gateway/web/freenode/ip.177.206.60.14) has joined #haskell
2015-08-26 10:43:00	<--	indolering1 (indolering@gateway/vpn/mullvad/x-fwajlmaxkirlebtc) has quit (Remote host closed the connection)
2015-08-26 10:43:10	fjordrunner	Couldn't match type ‘Data.ByteString.Internal.ByteString’
2015-08-26 10:43:10	fjordrunner	                   with ‘[Char]’
2015-08-26 10:43:15	fjordrunner	please, I have a ByteString which I would like to parse into my datastructure with 'read' function. Problem is that I'm getting: 
2015-08-26 10:43:19	fjordrunner	above
2015-08-26 10:43:36	fjordrunner	please, any ideas that why?
2015-08-26 10:43:50	<--	XorSwap (~XorSwap@wnpgmb016qw-ds01-214-177.dynamic.mtsallstream.net) has quit (Ping timeout: 246 seconds)
2015-08-26 10:44:33	SrPx	Hey guys, I have some kind of flattened tree structure using an unboxed vector. To access an element, a binary, O(logN) search is made. There is a caveat, though - when you access consecutive elements (say, indexes 3, 4, 5, 6) the logN search could not be necessary as it is likely that those are in the same bucket...
2015-08-26 10:44:38	SrPx	That doesn't matter, the point is
2015-08-26 10:44:44	bergmark	@type read
2015-08-26 10:44:45	lambdabot	Read a => String -> a
2015-08-26 10:44:56	SrPx	I could make the access function much faster if I could store in the structure the last accessed index.
2015-08-26 10:44:59	<--	Matti565 (~Matti565@s529c8f06.adsl.online.nl) has quit (Remote host closed the connection)
2015-08-26 10:45:03	SrPx	But doing so is impossible due to purity
2015-08-26 10:45:22	SrPx	But since that is an optimization and doesn't affect the result of the accessor function at all
2015-08-26 10:45:27	SrPx	is it ok to use unsafePerformIO there?
2015-08-26 10:45:43	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-26 10:45:50	kqr	:t (<$)
2015-08-26 10:45:51	lambdabot	Functor f => a -> f b -> f a
2015-08-26 10:45:52	-->	KarolisK (~karolis@78-60-68-107.static.zebra.lt) has joined #haskell
2015-08-26 10:45:52	jle`	fjordrunner: `read` only works on String
2015-08-26 10:46:05	jle`	which is a linked list of Char
2015-08-26 10:46:25	jle`	ByteString is just a blob of bytes, so it's a bit ambiguous how you would turn a blob of bytes into a string to read
2015-08-26 10:46:25	<--	daniel-s (~daniel-s@mu00053769.eng.monash.edu.au) has quit (Remote host closed the connection)
2015-08-26 10:46:26	-->	Peaker (~Peaker@46.120.46.160) has joined #haskell
2015-08-26 10:46:31	fjordrunner	yes, but ByteString is also instance of Read,...should that not work (sorry,..just starting)
2015-08-26 10:46:37	-->	daniel-s (~daniel-s@mu00053769.eng.monash.edu.au) has joined #haskell
2015-08-26 10:46:45	kqr	:t \x f -> fmap (const (return x)) f
2015-08-26 10:46:46	lambdabot	(Monad m, Functor f) => a -> f b -> f (m a)
2015-08-26 10:46:53	kqr	whoops
2015-08-26 10:47:02	<--	pt1 (~pt1@195.29.92.186) has quit (Remote host closed the connection)
2015-08-26 10:47:02	kqr	:t \x f -> fmap (const x) f
2015-08-26 10:47:03	lambdabot	Functor f => b -> f b1 -> f b
2015-08-26 10:47:08	kqr	neat
2015-08-26 10:47:19	-->	gnimmelf (~gnimmelf@ti0182a400-1347.bb.online.no) has joined #haskell
2015-08-26 10:47:30	jle`	fjordrunner: read :: String -> ByteString, in that case
2015-08-26 10:47:36	jle`	fjordrunner: read means you can turn a String into that type
2015-08-26 10:47:46	jle`	so it being an instance of read means that you can get a String and read it as a Bytestring
2015-08-26 10:47:50	fjordrunner	ohh,,...I see
2015-08-26 10:47:57	-->	X67r (user@gateway/vpn/mullvad/x-jpnrxedkzirrvukl) has joined #haskell
2015-08-26 10:48:01	-->	malkomalko (~malkomalk@ool-457a2213.dyn.optonline.net) has joined #haskell
2015-08-26 10:48:21	-->	jtk1 (jtk@gateway/vpn/mullvad/x-wgvbrgaybkkmgkfd) has joined #haskell
2015-08-26 10:48:29	fjordrunner	so in my case I just have to parse it to String - if I want it to parse to data structure
2015-08-26 10:48:47	jle`	well, you need to decode it into a String
2015-08-26 10:48:50	jle`	but yeah
2015-08-26 10:48:58	jle`	if you can decode it into a String, you can parse it using `read`
2015-08-26 10:49:14	jle`	one way to go from ByteString to String is to use a decoding function from the text package -- http://hackage.haskell.org/package/text
2015-08-26 10:49:24	-->	cchalmer_ (~textual@cpc1-shep13-2-0-cust104.8-3.cable.virginm.net) has joined #haskell
2015-08-26 10:49:29	jle`	http://hackage.haskell.org/package/text-1.2.1.3/docs/Data-Text-Encoding.html
2015-08-26 10:49:47	fjordrunner	many thanks!!!!
2015-08-26 10:49:49	jle`	they have a bunch of decoders if you know what encoding the text is encoded as in the bytestring
2015-08-26 10:49:49	<--	conal (~textual@50.242.71.57) has quit (Quit: Computer has gone to sleep.)
2015-08-26 10:50:09	-->	conal (~textual@50.242.71.57) has joined #haskell
2015-08-26 10:50:12	jle`	once you get the Text, you can use the `unpack :: Text -> String` function to get a String from it
2015-08-26 10:50:28	jle`	np!
2015-08-26 10:50:31	<--	justintv90 (~justin@42.113.158.9) has quit (Read error: Connection reset by peer)
2015-08-26 10:50:46	jle`	SrPx: i think that sort of semantically fits with the pure model, if the only thing is a performance optimization
2015-08-26 10:50:57	jle`	it preserves referential transparency because your function itself is always pure
2015-08-26 10:50:59	<--	frodwith (~pdriver@cpe-72-128-209-23.wi.res.rr.com) has quit (Ping timeout: 272 seconds)
2015-08-26 10:51:00	-->	mada (~mariano@181.170.72.150) has joined #haskell
2015-08-26 10:51:08	-->	XorSwap (~XorSwap@wnpgmb016qw-ds01-214-177.dynamic.mtsallstream.net) has joined #haskell
2015-08-26 10:51:11	jle`	the result it returns is the same no matter where it is in the program, what the ordering is, etc.
2015-08-26 10:51:22	<--	noam (~noam@213.57.247.238) has quit (Ping timeout: 256 seconds)
2015-08-26 10:51:45	<--	joco42_ (~joco42@dsl-hkibrasgw4-58c03a-80.dhcp.inet.fi) has quit (Remote host closed the connection)
2015-08-26 10:51:54	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 244 seconds)
2015-08-26 10:51:57	ChristianS	fjordrunner: if you can, consider generally using Text instead of String, it's much more efficient.
2015-08-26 10:52:29	SrPx	jle`: that's what I thought, but I'm not sure how unsafePerformIO works and if it could break in some cases (?)... also, I'm not sure how I could store the "last accessed index" of the structure. I could make a global hash table, but I'd need to somehow have an unique id of the structure 
2015-08-26 10:52:49	-->	darenthis (~darenthis@151.237.232.130) has joined #haskell
2015-08-26 10:52:52	fjordrunner	thanks,..I just like that I can convert data from file straight to my datastructure
2015-08-26 10:52:54	jle`	fjordrunner: actually, you can `read` straight from Data.Text, http://hackage.haskell.org/package/text-0.11.2.3/docs/Data-Text-Read.html
2015-08-26 10:53:03	jle`	you don't need to go through String, my bad
2015-08-26 10:53:09	fjordrunner	great
2015-08-26 10:53:09	SrPx	or I could store it on the structure like: "data StructureWrapper a = Structure { lastIndex :: Int, structure :: Structure }"
2015-08-26 10:53:13	jle`	oh wait, that module doesn't use Read
2015-08-26 10:53:18	jle`	sorry, misread the module's intent ><
2015-08-26 10:53:25	SrPx	but how could I change the value of lastIndex impurely? that is kinda a long question though, I'll put it on SO
2015-08-26 10:54:01	<--	darenthis (~darenthis@151.237.232.130) has quit (Remote host closed the connection)
2015-08-26 10:54:43	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-26 10:55:18	<--	KarolisK (~karolis@78-60-68-107.static.zebra.lt) has quit (Quit: Konversation terminated!)
2015-08-26 10:55:18	ChristianS	SrPx: a { lastIndex : newval }  changes it purely. that's almost certainly the better approach.
2015-08-26 10:55:53	<--	niteria (~niteria@2a03:2880:2040:5ff3:face:b00c:0:1) has quit (Remote host closed the connection)
2015-08-26 10:56:01	<--	bq (~chatzilla@123.155.155.218) has quit (Ping timeout: 244 seconds)
2015-08-26 10:56:05	<--	crobbins (~crobbins@2602:30a:c08e:19e0:949:c506:a31:1260) has quit (Ping timeout: 246 seconds)
2015-08-26 10:56:06	-->	niteria (~niteria@2a03:2880:2040:5ff2:face:b00c:0:1) has joined #haskell
2015-08-26 10:56:15	-->	razvanc87 (~razvanc87@79.97.80.96) has joined #haskell
2015-08-26 10:56:18	SrPx	ChristianS: but using that I'd have to return the new structure each time I read it. That would make the API terrible. Like, imagine if (!) on Data.Vector returned not only the read element, but a new vector, with the old one being invalid
2015-08-26 10:56:39	SrPx	An optimization that doesn't change the semantics shouldn't change the API
2015-08-26 10:56:51	-->	KarolisK (~karolis@78-60-68-107.static.zebra.lt) has joined #haskell
2015-08-26 10:56:56	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-26 10:57:06	-->	raichoo (~raichoo@mue-88-130-36-050.dsl.tropolys.de) has joined #haskell
2015-08-26 10:57:31	<--	stianhj (~stian@80.91.33.135) has quit (Quit: WeeChat 1.3)
2015-08-26 10:57:40	<--	the_2nd (~the_2nd@2a02:8070:4381:3700::3) has quit (Quit: Leaving)
2015-08-26 10:57:47	<--	fjordrunner (~fjordrunn@ti0045a400-1600.bb.online.no) has quit (Remote host closed the connection)
2015-08-26 10:57:51	-->	beh- (~beh@h-136-111.a336.priv.bahnhof.se) has joined #haskell
2015-08-26 10:57:52	ChristianS	SrPx: i didn't quite get what problem you're trying to solve
2015-08-26 10:57:56	-->	danvet (~daniel@2a02:168:56c9:0:22cf:30ff:fe4c:37d6) has joined #haskell
2015-08-26 10:58:16	-->	nkartash_ (~nkartasho@46.163.148.179) has joined #haskell
2015-08-26 10:58:26	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Read error: Connection reset by peer)
2015-08-26 10:58:38	-->	thedodd (~thedodd@162-197-28-103.lightspeed.austtx.sbcglobal.net) has joined #haskell
2015-08-26 10:58:43	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-26 10:58:46	<--	Ven (~textual@163.5.245.253) has quit (Ping timeout: 255 seconds)
2015-08-26 10:58:59	<--	fullofcaffeine (~fullofcaf@201.164.208.68) has quit (Remote host closed the connection)
2015-08-26 10:59:03	-->	jinblack (~jinblack@128.111.48.6) has joined #haskell
2015-08-26 10:59:06	SrPx	no problems !
2015-08-26 10:59:13	 *	hackagebot lentil 0.1.4.0 - frugal issue tracker  https://hackage.haskell.org/package/lentil-0.1.4.0 (fffaaa)
2015-08-26 10:59:26	<--	kadoban (~mud@unaffiliated/kadoban) has quit (Quit: bye)
2015-08-26 10:59:45	SrPx	It is just that for an optimization I need to internally break purity and I'm not sure how
2015-08-26 10:59:50	-->	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has joined #haskell
2015-08-26 11:00:07	--	skore_de is now known as skore_afk
2015-08-26 11:00:49	-->	path[l] (~vsi@108.169.4.171) has joined #haskell
2015-08-26 11:01:12	<--	beh_ (~beh@94.254.51.234) has quit (Ping timeout: 244 seconds)
2015-08-26 11:01:54	--	MiningMarsh is now known as AwayMarsh
2015-08-26 11:02:13	-->	ouanixi (~ouanixi@cpc69076-dund11-2-0-cust241.16-4.cable.virginm.net) has joined #haskell
2015-08-26 11:03:25	<--	Zekka (~zekka@uawifi-nat-210-21.arizona.edu) has quit (Ping timeout: 264 seconds)
2015-08-26 11:03:30	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Ping timeout: 265 seconds)
2015-08-26 11:03:45	<--	somepunk (~rohinpate@cpe-104-175-72-113.socal.res.rr.com) has quit (Ping timeout: 250 seconds)
2015-08-26 11:03:47	ouanixi	Hi guys, I'm new to Haskell and trying to get my head around the State monad by reading tutorials etc... The problem I'm facing at the moment is that the type "State s a" is not defined in Control.Monad.State
2015-08-26 11:04:01	-->	kadoban (~mud@unaffiliated/kadoban) has joined #haskell
2015-08-26 11:04:06	beckyconning_	is there a nicer way to do `a == Array.nub a`?
2015-08-26 11:04:10	<--	bennofs (~benno@2a02:810a:8200:2934:e611:5bff:fef6:ce26) has quit (Quit: WeeChat 1.2)
2015-08-26 11:04:10	ouanixi	does anybody know which module has it been moved to ?
2015-08-26 11:04:23	-->	larion (~larion@a83-162-181-111.adsl.xs4all.nl) has joined #haskell
2015-08-26 11:04:30	beckyconning_	i mean `a == nub a`
2015-08-26 11:04:31	<--	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has quit (Ping timeout: 240 seconds)
2015-08-26 11:04:59	<--	EvanR (~evan@unaffiliated/evanr) has quit (Ping timeout: 246 seconds)
2015-08-26 11:05:03	-->	tommah (~tommah@67-210-179-56.fidnet.com) has joined #haskell
2015-08-26 11:06:08	<--	adek (~adek@199.201.64.3) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-26 11:06:15	-->	gws (~gws@2601:1c2:0:ea13:f66d:4ff:fe04:3329) has joined #haskell
2015-08-26 11:06:35	-->	adek (~adek@199.201.64.2) has joined #haskell
2015-08-26 11:06:48	quchen	beckyconning_: You mean to check whether a list contains a duplicate?
2015-08-26 11:06:56	beckyconning_	quchen: yes
2015-08-26 11:07:03	-->	pantsman- (~pantsman@cpc12-haye16-2-0-cust45.haye.cable.virginm.net) has joined #haskell
2015-08-26 11:07:05	quchen	You could reimplement nub to terminate once a single duplicate has been found
2015-08-26 11:07:28	quchen	a == nub a will perform bad for long lists
2015-08-26 11:07:30	-->	yusukesuzuki (~yusukesuz@197.net112138168.t-com.ne.jp) has joined #haskell
2015-08-26 11:07:46	<--	beh- (~beh@h-136-111.a336.priv.bahnhof.se) has quit (Quit: Leaving)
2015-08-26 11:08:09	-->	fjordrunner (~fjordrunn@ti0045a400-1600.bb.online.no) has joined #haskell
2015-08-26 11:08:11	<--	blue_feint (~blue_fein@unaffiliated/blue-feint/x-1964988) has quit (Ping timeout: 250 seconds)
2015-08-26 11:08:28	quchen	duplicate = duplicate' Set.empty; duplicate' _ [] = False; duplicate cache (x:xs) | x `S.member` cache = True | otherwise = duplicate (Set.insert x cache) xs
2015-08-26 11:08:33	quchen	Something along those lines
2015-08-26 11:09:05	<--	srenatus (uid322@gateway/web/irccloud.com/x-rfdhlbtkkvdozghj) has quit (Quit: Connection closed for inactivity)
2015-08-26 11:09:14	-->	blue_feint (~blue_fein@unaffiliated/blue-feint/x-1964988) has joined #haskell
2015-08-26 11:10:01	-->	abraham_tark (~abraham_t@108.47.54.77.rev.vodafone.pt) has joined #haskell
2015-08-26 11:10:15	--	abbe_ is now known as abbe
2015-08-26 11:10:53	beckyconning_	thanks : )
2015-08-26 11:11:09	-->	Jackneill (~Jackneill@unaffiliated/jackneill) has joined #haskell
2015-08-26 11:11:11	-->	kognate (kognate@nat/ibm/x-etwabauftgeuobot) has joined #haskell
2015-08-26 11:11:16	<--	path[l] (~vsi@108.169.4.171) has quit (Quit: path[l])
2015-08-26 11:11:29	Axman6	ouanixi: it's probably defined using the StateT transformer over Identity: type State s a = StateT s Identity a; StateT is defined as: newtype StateT s m a = StateT (s -> m (a,s)). When you substitute Identity into that you can basically read that as State s a = State (s -> (a,s))
2015-08-26 11:11:34	phaazon	is there anyone here to help me understand how to use Proxy#?
2015-08-26 11:11:49	<--	TiTo___ (b23d0090@gateway/web/freenode/ip.178.61.0.144) has quit (Ping timeout: 246 seconds)
2015-08-26 11:11:54	Axman6	phaazon: depends what your question is
2015-08-26 11:12:58	phaazon	Axman6: kind mismatch
2015-08-26 11:13:10	-->	somepunk (~rohinpate@cpe-104-175-72-113.socal.res.rr.com) has joined #haskell
2015-08-26 11:13:11	<--	jiang42 (~jiang42@116.237.85.218) has quit (Ping timeout: 260 seconds)
2015-08-26 11:13:17	phaazon	I’d like to replace (Proxy :: Proxy Int) by (proxy# :: Proxy# Int)
2015-08-26 11:13:20	phaazon	but it fails
2015-08-26 11:13:21	<--	Ayey_ (~rune@0135301590.0.fullrate.dk) has quit (Read error: Connection reset by peer)
2015-08-26 11:13:27	phaazon	Proxy# * Int, maybe?
2015-08-26 11:13:28	-->	Ayey_ (~rune@0135301590.0.fullrate.dk) has joined #haskell
2015-08-26 11:13:38	Axman6	what's *?
2015-08-26 11:13:40	-->	jiang42 (~jiang42@116.237.85.218) has joined #haskell
2015-08-26 11:13:47	phaazon	a kind
2015-08-26 11:13:56	<--	Sixmsj (~Sixmsj@c-50-131-110-35.hsd1.ca.comcast.net) has quit (Quit: Sixmsj)
2015-08-26 11:13:59	phaazon	the kind of inhabited types
2015-08-26 11:14:07	-->	dmag_ (~damian@host86-162-252-220.range86-162.btcentralplus.com) has joined #haskell
2015-08-26 11:14:10	Axman6	oh, perhaps. do you have the link to the proxy# docs?
2015-08-26 11:14:19	phaazon	there’s none! :(
2015-08-26 11:14:25	hiptobecubic	I don't understand why nub performs so badly, it seems like it should be no worse than whatever the cost of set membership checking is
2015-08-26 11:14:39	Axman6	I'm sure there is, I'm pretty sure I've read them
2015-08-26 11:14:43	phaazon	Axman6: it’s defined in GHC.Exts
2015-08-26 11:14:57	-->	t7 (~chatzilla@host109-157-13-173.range109-157.btcentralplus.com) has joined #haskell
2015-08-26 11:15:03	Axman6	hiptobecubic: it has to be O(n^2) because there isn't an Orc constraint
2015-08-26 11:15:10	ouanixi	Axman6, thanks it makes sense.
2015-08-26 11:15:13	<--	fjordrunner (~fjordrunn@ti0045a400-1600.bb.online.no) has quit
2015-08-26 11:15:16	phaazon	https://hackage.haskell.org/package/base-4.8.1.0/docs/GHC-Exts.html
2015-08-26 11:15:20	phaazon	ctr-f Proxy
2015-08-26 11:15:22	phaazon	nothing found
2015-08-26 11:15:26	<--	native_killer (~Native@124.253.123.120) has quit (Quit: Leaving)
2015-08-26 11:15:29	kadoban	Orc constraint XD
2015-08-26 11:15:33	-->	Zekka (~zekka@uawifi-nat-210-67.arizona.edu) has joined #haskell
2015-08-26 11:15:50	<--	jiang42 (~jiang42@116.237.85.218) has quit (Remote host closed the connection)
2015-08-26 11:16:16	hiptobecubic	Axman6, ah, right. Still it seems like the default nub should be fast and if you need a more general one you use nubEq or something
2015-08-26 11:16:25	SrPx	Question moved to S.O., http://stackoverflow.com/questions/32233788/how-to-impurely-modify-a-state-associated-with-an-object
2015-08-26 11:16:26	-->	j2j (~Thunderbi@ool-435055cc.dyn.optonline.net) has joined #haskell
2015-08-26 11:16:32	SrPx	Thanks guys :)
2015-08-26 11:16:45	Axman6	phaazon: http://hackage.haskell.org/package/tagged-0.8.1/docs/Data-Tagged.html is where I remember reading about it
2015-08-26 11:17:12	phaazon	there’s nothing about Proxy# here
2015-08-26 11:17:14	Axman6	hmm
2015-08-26 11:17:24	<--	voltalio (~textual@173-14-36-210-Michigan.hfc.comcastbusiness.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-26 11:17:29	phaazon	what you’r talking about is in Data.Proxy
2015-08-26 11:17:32	<--	cchalmer_ (~textual@cpc1-shep13-2-0-cust104.8-3.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-26 11:17:33	phaazon	I’m not looking for that
2015-08-26 11:17:36	phaazon	I’m looking for Proxy#
2015-08-26 11:17:39	Axman6	yeah, I'm sure I've read about it though
2015-08-26 11:17:47	phaazon	I’ll try to understand the error
2015-08-26 11:18:14	<--	randy655 (~user@205-178-7-160.c3-0.mart-ubr1.chi-mart.il.cable.rcn.com) has quit (Ping timeout: 244 seconds)
2015-08-26 11:18:29	<--	RyanWithZombies (~RyanWithZ@45.55.194.163) has left #haskell ("WeeChat 0.4.2")
2015-08-26 11:18:37	phaazon	oh it’s actually defined in GHC.Prim!
2015-08-26 11:18:50	phaazon	why does the doc link to GHC.Exts…
2015-08-26 11:18:51	-->	fayong (~fayong@lns-bzn-52-82-65-81-89.adsl.proxad.net) has joined #haskell
2015-08-26 11:19:10	-->	kyle__ (~kyle@c-67-184-160-37.hsd1.il.comcast.net) has joined #haskell
2015-08-26 11:19:21	<--	ouanixi (~ouanixi@cpc69076-dund11-2-0-cust241.16-4.cable.virginm.net) has quit (Quit: Leaving)
2015-08-26 11:20:17	phaazon	http://lpaste.net/139698
2015-08-26 11:20:19	phaazon	I don’t get it
2015-08-26 11:20:30	quchen	nub isn't only O(n^2), it also scales quadratically for values smaller than almost infinity.
2015-08-26 11:20:30	phaazon	data Proxy# a b
2015-08-26 11:20:37	SrPx	Thinking about it, though, I guess the most elegant solution is to use a global hashmap. All I need is to get the unique pointer of a runtime value. Is that possible?
2015-08-26 11:20:37	phaazon	and proxy# is Proxy# a
2015-08-26 11:20:57	phaazon	how should I use that :D
2015-08-26 11:21:24	-->	aartamonau (~shaleny@206.169.106.2) has joined #haskell
2015-08-26 11:21:25	-->	cchalmer_ (~textual@cpc1-shep13-2-0-cust104.8-3.cable.virginm.net) has joined #haskell
2015-08-26 11:21:27	<--	Orwell84 (~Peter@145.131.157.66) has quit (Quit: "People sleep peaceably in their beds at night only because rough men stand ready to do violence on their behalf.")
2015-08-26 11:22:00	SrPx	stablename that is
2015-08-26 11:22:00	<--	darkf (~darkf___@unaffiliated/darkf) has quit (Quit: Leaving)
2015-08-26 11:22:03	SrPx	guess I know what to do now
2015-08-26 11:22:05	SrPx	:D
2015-08-26 11:22:16	-->	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has joined #haskell
2015-08-26 11:23:01	<--	Excureo (~c@68-113-0-218.static.knwc.wa.charter.com) has quit (Read error: Connection reset by peer)
2015-08-26 11:23:44	<--	Zekka (~zekka@uawifi-nat-210-67.arizona.edu) has quit (Ping timeout: 246 seconds)
2015-08-26 11:24:21	-->	Excureo (~c@68-113-0-218.static.knwc.wa.charter.com) has joined #haskell
2015-08-26 11:24:29	<--	abraham_tark (~abraham_t@108.47.54.77.rev.vodafone.pt) has quit
2015-08-26 11:24:59	phaazon	    Couldn't match kind ‘*’ with ‘#’
2015-08-26 11:25:01	phaazon	dammit
2015-08-26 11:25:16	<--	lucasbrunialti (~lucasbrun@gwleste.semfio.usp.br) has quit (Remote host closed the connection)
2015-08-26 11:25:45	-->	blue_deref (~blue_dere@cpe-74-77-246-241.buffalo.res.rr.com) has joined #haskell
2015-08-26 11:25:59	<--	StoneToad (~StoneToad@ppp-104-192-234-192.storm.ca) has quit (Ping timeout: 244 seconds)
2015-08-26 11:26:11	-->	iSkullbox (~iSkullbox@89-201-187-12.dsl.optinet.hr) has joined #haskell
2015-08-26 11:27:21	-->	crobbins (~crobbins@2602:30a:c08e:19e0:949:c506:a31:1260) has joined #haskell
2015-08-26 11:27:33	<--	Excureo (~c@68-113-0-218.static.knwc.wa.charter.com) has quit (Remote host closed the connection)
2015-08-26 11:28:51	<--	animated (~mike@207.35.29.137) has quit (Ping timeout: 240 seconds)
2015-08-26 11:29:07	Peaker	quchen: x == nub x   will terminate at the first value that is a duplicate, no?
2015-08-26 11:29:30	quchen	Peaker: You're right
2015-08-26 11:29:42	quchen	Well, not really!
2015-08-26 11:30:02	quchen	> [1,1..] == nub [1,1..]
2015-08-26 11:30:04	<--	adeln (~adeln@109.205.252.120) has quit
2015-08-26 11:30:06	lambdabot	 mueval-core: Time limit exceeded
2015-08-26 11:30:15	<--	kognate (kognate@nat/ibm/x-etwabauftgeuobot) has quit (Remote host closed the connection)
2015-08-26 11:30:22	quchen	When you've got otherwise distinct lists it'll short-circuit like that
2015-08-26 11:30:23	-->	grrz (~zrrg@103.225.100.51) has joined #haskell
2015-08-26 11:30:25	Peaker	quchen: ah, nuanced :)
2015-08-26 11:30:34	quchen	But if they're full of duplicates you've got a problem
2015-08-26 11:30:55	-->	lucasbrunialti (~lucasbrun@gwleste.semfio.usp.br) has joined #haskell
2015-08-26 11:30:58	-->	kognate (kognate@nat/ibm/x-xkggkzaxebsdqsey) has joined #haskell
2015-08-26 11:31:02	-->	danthemyth (~danthemyt@50.246.66.201) has joined #haskell
2015-08-26 11:31:03	<--	kognate (kognate@nat/ibm/x-xkggkzaxebsdqsey) has quit (Remote host closed the connection)
2015-08-26 11:31:17	-->	kognate (kognate@nat/ibm/x-qgmdzwuwbrlasbmd) has joined #haskell
2015-08-26 11:32:08	-->	StoneToad (~StoneToad@ppp-104-192-233-177.storm.ca) has joined #haskell
2015-08-26 11:32:20	-->	yyyyy (~yyyyy@201.30.227.53) has joined #haskell
2015-08-26 11:33:01	-->	GLM (a1b5fd14@gateway/web/cgi-irc/kiwiirc.com/ip.161.181.253.20) has joined #haskell
2015-08-26 11:33:14	<--	paf31 (~paf31@cpe-104-172-125-243.socal.res.rr.com) has quit (Ping timeout: 244 seconds)
2015-08-26 11:33:20	<--	gensym2 (~zrrg@103.225.100.51) has quit (Ping timeout: 250 seconds)
2015-08-26 11:33:26	jle`	SrPx: https://wiki.haskell.org/Top_level_mutable_state
2015-08-26 11:33:27	<--	PatrickRobotham (uid18270@gateway/web/irccloud.com/x-exonyvlwghdpgrcj) has quit (Quit: Connection closed for inactivity)
2015-08-26 11:33:35	-->	the_2nd (~the_2nd@2a02:8070:4381:3700::3) has joined #haskell
2015-08-26 11:33:38	jle`	not that this is a good idea :)
2015-08-26 11:33:38	<--	fayong (~fayong@lns-bzn-52-82-65-81-89.adsl.proxad.net) has quit (Quit: leaving)
2015-08-26 11:33:44	-->	osa1 (~omer@149.160.213.215) has joined #haskell
2015-08-26 11:33:49	-->	fayong (~fayong@lns-bzn-52-82-65-81-89.adsl.proxad.net) has joined #haskell
2015-08-26 11:34:00	-->	path[l] (~vsi@199.201.64.133) has joined #haskell
2015-08-26 11:34:00	the_2nd	how to merge multiple lists? [a]
2015-08-26 11:34:06	the_2nd	is there a built in?
2015-08-26 11:34:14	 *	hackagebot uniform-pair 0.1.7 - Uniform pairs with class instances  https://hackage.haskell.org/package/uniform-pair-0.1.7 (ConalElliott)
2015-08-26 11:34:17	jle`	> concat [[1,2,3],[4,5,6]] -- ?
2015-08-26 11:34:19	lambdabot	 [1,2,3,4,5,6]
2015-08-26 11:34:59	-->	paf31 (~paf31@cpe-104-172-125-243.socal.res.rr.com) has joined #haskell
2015-08-26 11:35:24	Denommus	> join [[1,2,3],[4,5,6]]
2015-08-26 11:35:26	lambdabot	 [1,2,3,4,5,6]
2015-08-26 11:35:42	-->	lingxiao (~lingxiao@2607:f470:6:400d:c8b0:6e93:e54:4fab) has joined #haskell
2015-08-26 11:35:43	lingxiao	hey all
2015-08-26 11:35:43	Denommus	I like join because it's generic :-) (works over any monad)
2015-08-26 11:35:47	lingxiao	could someone take a look at my question here?
2015-08-26 11:35:49	lingxiao	http://stackoverflow.com/questions/32234185/counting-the-frequency-of-values-in-a-list-using-control-foldl
2015-08-26 11:36:03	jle`	> mconcat [[1,2,3],[4,5,6]]
2015-08-26 11:36:04	lambdabot	 [1,2,3,4,5,6]
2015-08-26 11:36:11	-->	arbelos (~slack@2.71.7.103.mobile.tre.se) has joined #haskell
2015-08-26 11:36:12	jle`	> fold [[1,2,3],[4,5,6]]
2015-08-26 11:36:13	lambdabot	 [1,2,3,4,5,6]
2015-08-26 11:36:15	<--	fayong (~fayong@lns-bzn-52-82-65-81-89.adsl.proxad.net) has quit (Client Quit)
2015-08-26 11:36:40	Axman6	lingxiao: you could use a DMap (Maybe String) Int to do that easily
2015-08-26 11:36:44	-->	fayong (~fayong@lns-bzn-52-82-65-81-89.adsl.proxad.net) has joined #haskell
2015-08-26 11:36:46	Axman6	s/DMAP/Map
2015-08-26 11:36:50	jle`	sometimes the monomorphic version helps readability, too :)  so you don't have to do type inference in your head
2015-08-26 11:37:05	jle`	seeing map instead of fmap makes things easier to read a lot of times...same as using (.) instead of `fmap`
2015-08-26 11:37:07	<--	nomeata (~jojo@nomeata.de) has quit (Ping timeout: 250 seconds)
2015-08-26 11:37:19	-->	Jeanne-Kamikaze (~Jeanne-Ka@184.Red-88-9-37.dynamicIP.rima-tde.net) has joined #haskell
2015-08-26 11:37:26	lingxiao	Axman6 the example I showed is just a toy example
2015-08-26 11:37:28	<--	danthemyth (~danthemyt@50.246.66.201) has quit (Remote host closed the connection)
2015-08-26 11:37:31	<--	sergiotudela (~sergiotud@3.233.14.62.static.jazztel.es) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-26 11:37:49	<--	kamatsu (~Adium@123-243-95-236.static.tpgi.com.au) has quit (Quit: Leaving.)
2015-08-26 11:37:50	lingxiao	in reality I need to traverse a arb large list many times computing statistics
2015-08-26 11:37:54	lingxiao	hence using the foldl library
2015-08-26 11:38:00	<--	dan_f (~dan@24-148-32-207.c3-0.grn-ubr1.chi-grn.il.cable.rcn.com) has quit (Quit: dan_f)
2015-08-26 11:38:01	<--	cchalmer_ (~textual@cpc1-shep13-2-0-cust104.8-3.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-26 11:38:26	lingxiao	which allow me to combine the computations using applicatives ie `toResults <$> stat1 <*> stat2 <*> ... <*> statm $ largeList`
2015-08-26 11:38:30	SrPx	jle`: I think you agree with me it is a good idea when it is "fake state", i.e., state that isn't actual program state
2015-08-26 11:38:45	lingxiao	and foldl allow me to traverse the list just once, computing all m statistics
2015-08-26 11:39:12	-->	Noldorin (~noldorin@unaffiliated/noldorin) has joined #haskell
2015-08-26 11:39:28	-->	joco42_ (~joco42@dsl-hkibrasgw4-58c03a-80.dhcp.inet.fi) has joined #haskell
2015-08-26 11:40:03	<--	fabianvf (~fabianvf@216.30.185.217) has quit (Remote host closed the connection)
2015-08-26 11:40:04	-->	voltalio (~textual@173-14-36-210-Michigan.hfc.comcastbusiness.net) has joined #haskell
2015-08-26 11:40:11	<--	osa1 (~omer@149.160.213.215) has quit (Ping timeout: 246 seconds)
2015-08-26 11:40:12	<--	sgflt (~mbr@p54B5A953.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2015-08-26 11:40:37	<--	kognate (kognate@nat/ibm/x-qgmdzwuwbrlasbmd) has quit (Remote host closed the connection)
2015-08-26 11:40:37	--	cyphase_ is now known as cyphase
2015-08-26 11:41:30	-->	jonny789 (653ecae0@gateway/web/freenode/ip.101.62.202.224) has joined #haskell
2015-08-26 11:41:43	<--	enaqx_ (~enaqx@188.163.69.11) has quit (Ping timeout: 272 seconds)
2015-08-26 11:42:12	Denommus	lingxiao: if you use foldl, you'll have to traverse the resulting list, too
2015-08-26 11:42:13	-->	athan (~athan@173-14-18-245-Colorado.hfc.comcastbusiness.net) has joined #haskell
2015-08-26 11:42:22	Denommus	lingxiao: so the algorithm will be O(n^2)
2015-08-26 11:42:38	Denommus	lingxiao: if you use Map as an intermediary representation, you'll be doing it in O(n)
2015-08-26 11:43:34	-->	fabianvf (~fabianvf@216.30.185.217) has joined #haskell
2015-08-26 11:43:54	<--	iSkullbox (~iSkullbox@89-201-187-12.dsl.optinet.hr) has left #haskell ("Leaving")
2015-08-26 11:43:54	--	Matrixiumn is now known as Xack
2015-08-26 11:43:54	<--	piezoid (~piezoid@tsv35-1-78-232-144-90.fbx.proxad.net) has quit (Ping timeout: 264 seconds)
2015-08-26 11:44:22	-->	enaqx (~enaqx@188.163.69.11) has joined #haskell
2015-08-26 11:44:24	-->	chinmaynaik (~chinmayna@61.0.54.236) has joined #haskell
2015-08-26 11:44:28	lingxiao	Denommus so in reality my list is someting like [Row1, Row2, ... ]
2015-08-26 11:44:37	<--	foreignFunction1 (~ai@ip-4761.sunline.net.ua) has quit (Read error: Connection reset by peer)
2015-08-26 11:44:41	-->	foreignFunction (~ai@ip-4761.sunline.net.ua) has joined #haskell
2015-08-26 11:44:48	<--	Copperis (~Varis@unaffiliated/varis) has quit (Quit: Leaving)
2015-08-26 11:44:57	lingxiao	where for example Row1 = Row1 (Just "a" Just "b" Just 12 Just 34.5)
2015-08-26 11:45:02	<--	JoWie (uid93456@gateway/web/irccloud.com/x-rdlixcttwjlvdgqw) has left #haskell
2015-08-26 11:45:33	lingxiao	and for each column i need to compute count, count of Nothig, min, max, avg, shortest/longest string, average length of string ..
2015-08-26 11:45:33	<--	GLM (a1b5fd14@gateway/web/cgi-irc/kiwiirc.com/ip.161.181.253.20) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-08-26 11:45:46	<--	jonny789 (653ecae0@gateway/web/freenode/ip.101.62.202.224) has quit (Client Quit)
2015-08-26 11:45:47	quchen	Denommus: fold is also an option.
2015-08-26 11:46:07	<--	fizbin (~Adium@pool-173-72-81-68.cmdnnj.east.verizon.net) has quit (Ping timeout: 244 seconds)
2015-08-26 11:46:14	-->	jiang42 (~jiang42@116.237.85.218) has joined #haskell
2015-08-26 11:46:16	lingxiao	quchen do you mean Control.Foldl
2015-08-26 11:46:20	lingxiao	or just folding over a list?
2015-08-26 11:46:23	quchen	Data.Foldable.fold
2015-08-26 11:46:51	quchen	:t fold :: [[a]] -> [a]
2015-08-26 11:46:52	lambdabot	[[a]] -> [a]
2015-08-26 11:47:03	Denommus	@import qualified Data.Map as M
2015-08-26 11:47:04	lambdabot	Unknown command, try @list
2015-08-26 11:47:10	Peaker	lingxiao: sounds like you want an Applicative instance for your Row
2015-08-26 11:47:10	<--	lingxiao (~lingxiao@2607:f470:6:400d:c8b0:6e93:e54:4fab) has quit (Remote host closed the connection)
2015-08-26 11:47:14	-->	noam (~noam@213.57.247.238) has joined #haskell
2015-08-26 11:47:16	-->	jamesfordummies (~jamesford@108.61.226.6) has joined #haskell
2015-08-26 11:47:43	Denommus	:t Data.Map.fromListWith
2015-08-26 11:47:44	lambdabot	Ord k => (a -> a -> a) -> [(k, a)] -> M.Map k a
2015-08-26 11:47:46	-->	fizbin (~Adium@pool-96-235-158-96.cmdnnj.east.verizon.net) has joined #haskell
2015-08-26 11:47:59	<--	kolko (~kolko@46.48.58.17) has quit (Ping timeout: 272 seconds)
2015-08-26 11:48:07	Denommus	> let countUnique = Data.Map.toList . Data.Map.fromListWith (+) . map (flip (,) 1) in countUnique [Just "a", Just "b", Just "aab", Nothing, Just "aab"]
2015-08-26 11:48:08	lambdabot	 Not in scope: ‘Data.Map.toList’Not in scope: ‘Data.Map.fromListWith’
2015-08-26 11:48:23	-->	rodlogic (~rodlogic@c-71-234-52-85.hsd1.ct.comcast.net) has joined #haskell
2015-08-26 11:48:24	quchen	Data.Map is imported qualified as M.
2015-08-26 11:48:30	quchen	:t M.fromList
2015-08-26 11:48:31	lambdabot	Ord k => [(k, a)] -> M.Map k a
2015-08-26 11:48:34	Denommus	> let countUnique = M.toList . M.fromListWith (+) . map (flip (,) 1) in countUnique [Just "a", Just "b", Just "aab", Nothing, Just "aab"]
2015-08-26 11:48:35	lambdabot	 [(Nothing,1),(Just "a",1),(Just "aab",2),(Just "b",1)]
2015-08-26 11:48:43	<--	enaqx (~enaqx@188.163.69.11) has quit (Ping timeout: 255 seconds)
2015-08-26 11:49:17	-->	frerich (~frerich@ip5f5afe07.dynamic.kabel-deutschland.de) has joined #haskell
2015-08-26 11:49:18	<--	frerich (~frerich@ip5f5afe07.dynamic.kabel-deutschland.de) has quit (Changing host)
2015-08-26 11:49:18	-->	frerich (~frerich@kde/raabe) has joined #haskell
2015-08-26 11:49:27	-->	z3roblock (~z3roblock@1-174-246-224.dynamic.hinet.net) has joined #haskell
2015-08-26 11:50:31	<--	frelux (~frelux@c-73-231-78-184.hsd1.ca.comcast.net) has quit (Quit: frelux)
2015-08-26 11:50:51	hiptobecubic	Denommus, "countUnique" is not a great name for such a function. Just "count" would work better, or perhape "histogram."
2015-08-26 11:50:59	-->	enaqx (~enaqx@188.163.69.11) has joined #haskell
2015-08-26 11:51:05	Denommus	hiptobecubic: whatever
2015-08-26 11:51:44	hiptobecubic	Denommus, I find names in haskell to be more important than other languages, since everyone just relies on type signatures rather than writing proper docs with examples.
2015-08-26 11:52:26	<--	jiang42 (~jiang42@116.237.85.218) has quit (Ping timeout: 240 seconds)
2015-08-26 11:52:37	<--	athan (~athan@173-14-18-245-Colorado.hfc.comcastbusiness.net) has quit (Ping timeout: 264 seconds)
2015-08-26 11:52:56	jamesfordummies	running into these issues when running `stack build`, http://lpaste.net/139699, when i do `cabal install base` it says i have 4.8. very confused
2015-08-26 11:53:05	Denommus	hiptobecubic: histogram is probably better, I would use count if I want to count the occurrences of a single element
2015-08-26 11:53:12	hiptobecubic	Denommus, agreed
2015-08-26 11:53:19	<--	mada (~mariano@181.170.72.150) has quit (Ping timeout: 260 seconds)
2015-08-26 11:53:36	-->	nuncanada (~flaviobb@201.35.34.162) has joined #haskell
2015-08-26 11:53:59	-->	tennix (~ztennix@unaffiliated/tennix) has joined #haskell
2015-08-26 11:54:29	-->	fullofcaffeine (~fullofcaf@201.164.208.68) has joined #haskell
2015-08-26 11:54:32	<--	Ariadeno (~Ariadeno@199.175.50.37) has quit (Ping timeout: 246 seconds)
2015-08-26 11:55:15	-->	Ariadeno (~Ariadeno@199.175.50.37) has joined #haskell
2015-08-26 11:55:38	--	Ariadeno is now known as Guest87866
2015-08-26 11:55:51	-->	stef204 (~kvirc@unaffiliated/stef-204/x-384198) has joined #haskell
2015-08-26 11:57:03	cocreature	jamesfordummies: base is tied to your ghc version which is tied to your snapshot when using stack, so you need a newer snapshot
2015-08-26 11:57:13	cocreature	also cabal install does nothing useful when using stack
2015-08-26 11:57:22	benzrf	hello Denommus
2015-08-26 11:57:25	benzrf	are u still missing macros :}
2015-08-26 11:57:28	jamesfordummies	k. how do I update my snapshot?
2015-08-26 11:57:39	<--	cyborg-one (~cyborg-on@130-0-62-179.broadband.tenet.odessa.ua) has quit (Quit: cyborg-one)
2015-08-26 11:57:52	cocreature	jamesfordummies: change the resolver line in your stack.yaml
2015-08-26 11:58:06	cocreature	you can change it to lts-3.1 which has ghc-7.10.2 which comes with base-4.8
2015-08-26 11:58:23	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 246 seconds)
2015-08-26 11:58:35	-->	lingxiao (~lingxiao@2607:f470:6:400d:e829:860b:685c:5e10) has joined #haskell
2015-08-26 11:59:19	<--	zygentoma (~kvirc@kel29.kel.studentenwerk-goettingen.de) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2015-08-26 11:59:33	<--	XorSwap (~XorSwap@wnpgmb016qw-ds01-214-177.dynamic.mtsallstream.net) has quit (Ping timeout: 244 seconds)
2015-08-26 11:59:36	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-26 12:00:26	<--	jinblack (~jinblack@128.111.48.6) has quit (Ping timeout: 260 seconds)
2015-08-26 12:00:26	-->	jeltsch (~wolfgang@82.131.66.93.cable.starman.ee) has joined #haskell
2015-08-26 12:00:35	-->	darenthis (~darenthis@151.237.232.130) has joined #haskell
2015-08-26 12:00:37	-->	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has joined #haskell
2015-08-26 12:02:29	<--	chinmaynaik (~chinmayna@61.0.54.236) has quit (Remote host closed the connection)
2015-08-26 12:03:04	-->	mr- (~martin@dslb-188-108-165-196.188.108.pools.vodafone-ip.de) has joined #haskell
2015-08-26 12:03:56	<--	tommah (~tommah@67-210-179-56.fidnet.com) has quit (Ping timeout: 252 seconds)
2015-08-26 12:03:59	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Ping timeout: 246 seconds)
2015-08-26 12:04:01	jamesfordummies	cocreature: thanks, solved that issue - more dependency issues now
2015-08-26 12:04:03	-->	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has joined #haskell
2015-08-26 12:04:15	 *	hackagebot bitx-bitcoin 0.5.0.0 - A Haskell library for working with the BitX bitcoin exchange.  https://hackage.haskell.org/package/bitx-bitcoin-0.5.0.0 (tebello_thejane)
2015-08-26 12:05:06	<--	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has quit (Ping timeout: 240 seconds)
2015-08-26 12:05:09	-->	kognate (kognate@nat/ibm/x-cfgrrxvqduhlzukt) has joined #haskell
2015-08-26 12:05:22	<--	darenthis (~darenthis@151.237.232.130) has quit (Ping timeout: 265 seconds)
2015-08-26 12:05:44	<--	davidfetter (~chatzilla@2601:643:8100:f00:ca60:ff:fe2a:7216) has quit (Ping timeout: 246 seconds)
2015-08-26 12:05:58	-->	gentlebe_ (~gentleben@199.188.194.242) has joined #haskell
2015-08-26 12:06:10	-->	hmrm (~hmrm@173-29-150-72.client.mchsi.com) has joined #haskell
2015-08-26 12:06:28	<--	lingxiao (~lingxiao@2607:f470:6:400d:e829:860b:685c:5e10) has quit (Remote host closed the connection)
2015-08-26 12:06:34	-->	asciiascetic (~user@rrcs-67-52-238-54.west.biz.rr.com) has joined #haskell
2015-08-26 12:06:41	<--	gentlebe_ (~gentleben@199.188.194.242) has quit (Client Quit)
2015-08-26 12:07:06	<--	somepunk (~rohinpate@cpe-104-175-72-113.socal.res.rr.com) has quit (Ping timeout: 240 seconds)
2015-08-26 12:07:42	Denommus	wait, stack can handle different GHC versions for different projects?
2015-08-26 12:07:46	-->	davidfetter (~chatzilla@2601:643:8100:f00:ca60:ff:fe2a:7216) has joined #haskell
2015-08-26 12:07:58	-->	arbelos_ (~slack@2.71.119.17.mobile.tre.se) has joined #haskell
2015-08-26 12:08:20	<--	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has quit (Ping timeout: 246 seconds)
2015-08-26 12:08:25	<--	lodin_ (~lodin@c-31-209-2-44.cust.bredband2.com) has quit (Ping timeout: 256 seconds)
2015-08-26 12:08:43	-->	pt1 (~pt1@195.29.92.186) has joined #haskell
2015-08-26 12:08:50	jamesfordummies	new problem: http://lpaste.net/139703
2015-08-26 12:09:02	-->	xpilot (~vlad@dhcp-18-111-53-175.dyn.mit.edu) has joined #haskell
2015-08-26 12:09:07	-->	somepunk (~rohinpate@cpe-104-175-72-113.socal.res.rr.com) has joined #haskell
2015-08-26 12:09:16	 *	hackagebot hspec-structured-formatter 0.1.0.0 -   https://hackage.haskell.org/package/hspec-structured-formatter-0.1.0.0 (flbulgarelli)
2015-08-26 12:09:18	 *	hackagebot hsdev 0.1.4.3 - Haskell development library and tool with support of autocompletion, symbol info, go to declaration, find references etc.  https://hackage.haskell.org/package/hsdev-0.1.4.3 (AlexandrRuchkin)
2015-08-26 12:09:29	<--	asciiascetic (~user@rrcs-67-52-238-54.west.biz.rr.com) has left #haskell
2015-08-26 12:09:31	-->	jaen (~jaen@ip169.copit.pl) has joined #haskell
2015-08-26 12:10:12	-->	diogotito (~diogo@a95-92-148-217.cpe.netcabo.pt) has joined #haskell
2015-08-26 12:10:26	<--	hmrm (~hmrm@173-29-150-72.client.mchsi.com) has quit (Ping timeout: 245 seconds)
2015-08-26 12:10:51	<--	arbelos (~slack@2.71.7.103.mobile.tre.se) has quit (Ping timeout: 245 seconds)
2015-08-26 12:10:59	<--	codesoup (~codesoup@CPE68b6fcf580d3-CM68b6fcf580d0.cpe.net.cable.rogers.com) has quit (Quit: Leaving)
2015-08-26 12:11:07	<--	seanhess (uid27376@gateway/web/irccloud.com/x-mtatdjozzxxcadyc) has quit (Quit: Connection closed for inactivity)
2015-08-26 12:11:12	-->	Zekka (~zekka@uawifi-nat-210-97.arizona.edu) has joined #haskell
2015-08-26 12:12:54	jamesfordummies	cocreature: you have any ideas about this? http://lpaste.net/139703
2015-08-26 12:13:37	cocreature	jamesfordummies: give me a few minutes, I'm busy right now
2015-08-26 12:13:44	jamesfordummies	sorry, no problem
2015-08-26 12:14:02	-->	a3f (~a3f@unaffiliated/a3f) has joined #haskell
2015-08-26 12:14:16	 *	hackagebot google-cloud 0.0.3 - Client for the Google Cloud APIs  https://hackage.haskell.org/package/google-cloud-0.0.3 (wereHamster)
2015-08-26 12:15:59	-->	tommah (~tommah@67-210-179-56.fidnet.com) has joined #haskell
2015-08-26 12:16:05	-->	jinblack (~jinblack@128.111.48.6) has joined #haskell
2015-08-26 12:16:29	<--	diogotito (~diogo@a95-92-148-217.cpe.netcabo.pt) has quit (Ping timeout: 272 seconds)
2015-08-26 12:17:26	<--	Zekka (~zekka@uawifi-nat-210-97.arizona.edu) has quit (Ping timeout: 240 seconds)
2015-08-26 12:17:58	-->	lingxiao (~lingxiao@2607:f470:6:400d:ac2f:19d3:4bd7:f64) has joined #haskell
2015-08-26 12:18:57	<--	kognate (kognate@nat/ibm/x-cfgrrxvqduhlzukt) has quit (Remote host closed the connection)
2015-08-26 12:19:16	-->	osa1 (~omer@2001-18e8-2-28d4-f000-407.dhcp6-bl.indiana.edu) has joined #haskell
2015-08-26 12:19:42	-->	kognate (kognate@nat/ibm/x-mmcfafwmuyqjckmv) has joined #haskell
2015-08-26 12:20:00	<--	shiv_ (uid67486@gateway/web/irccloud.com/x-kjzmudupdmmsfcal) has quit (Quit: Connection closed for inactivity)
2015-08-26 12:20:16	<--	lucasbrunialti (~lucasbrun@gwleste.semfio.usp.br) has quit (Remote host closed the connection)
2015-08-26 12:20:27	-->	fikusz (~fikusz@catv-86-101-46-41.catv.broadband.hu) has joined #haskell
2015-08-26 12:20:40	cocreature	Denommus: yep, assuming there is a snapshot for your ghc version. I think we only have those for 7.8 and 7.10
2015-08-26 12:21:10	-->	diogotito (~diogo@a95-92-148-217.cpe.netcabo.pt) has joined #haskell
2015-08-26 12:21:22	-->	ptcek (~ptcek@89.239.24.150) has joined #haskell
2015-08-26 12:21:44	<--	fengshaun (~fengshaun@unaffiliated/fengshaun) has quit (Ping timeout: 250 seconds)
2015-08-26 12:21:53	-->	lucasbrunialti (~lucasbrun@gwleste.semfio.usp.br) has joined #haskell
2015-08-26 12:22:17	-->	GLM (a1b5fd14@gateway/web/cgi-irc/kiwiirc.com/ip.161.181.253.20) has joined #haskell
2015-08-26 12:22:20	cocreature	jamesfordummies: alright, the problem is that lts-3.1 contains a version of the OpenGL package that is too new
2015-08-26 12:22:26	<--	kognate (kognate@nat/ibm/x-mmcfafwmuyqjckmv) has quit (Remote host closed the connection)
2015-08-26 12:22:28	GLM	Why would I get the following error?
2015-08-26 12:22:28	GLM	Could not deduce (Show AverageLen)
2015-08-26 12:22:28	GLM	      arising from a use of ‘showsPrec’
2015-08-26 12:22:29	GLM	    from the context (a ~ TextualKind)
2015-08-26 12:22:43	<--	enaqx (~enaqx@188.163.69.11) has quit (Ping timeout: 260 seconds)
2015-08-26 12:22:45	-->	Sixmsj (~Sixmsj@c-50-131-110-35.hsd1.ca.comcast.net) has joined #haskell
2015-08-26 12:22:46	arkeet	show your code
2015-08-26 12:22:52	jamesfordummies	cocreature: so i’ll try lts-3.0?
2015-08-26 12:22:53	<--	jgt (~jgt@aeev12.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 246 seconds)
2015-08-26 12:22:59	-->	kognate (kognate@nat/ibm/x-kuxzlxqbxtrzvgyv) has joined #haskell
2015-08-26 12:23:03	arkeet	@paste
2015-08-26 12:23:03	lambdabot	Haskell pastebin: http://lpaste.net/
2015-08-26 12:23:10	cocreature	jamesfordummies: oh no sorry, it's actually not in the lts snapshot but in your extra-deps
2015-08-26 12:23:14	cocreature	jamesfordummies: just change the version there
2015-08-26 12:23:26	GLM	arkeet: https://github.com/GarrettMosier/CSVStreaming
2015-08-26 12:23:28	cocreature	2.12.0.1 should work
2015-08-26 12:23:31	GLM	On the irccomments branch
2015-08-26 12:23:35	-->	fengshaun (~fengshaun@unaffiliated/fengshaun) has joined #haskell
2015-08-26 12:24:02	arkeet	I don't see any showsPrec
2015-08-26 12:24:04	arkeet	what line
2015-08-26 12:24:11	jamesfordummies	cocreature: awesome, i had tried 2.12.0.0 but it didn’t work. why did .1 work?
2015-08-26 12:24:34	cocreature	jamesfordummies: I had to see the error message to comment on that
2015-08-26 12:24:37	arkeet	most likely you just need to make a Show instance
2015-08-26 12:24:41	GLM	arkeet:I don't use it but I think some part of my code calls it
2015-08-26 12:24:42	arkeet	or unpack the newtype before showing
2015-08-26 12:24:52	<--	agjacome (~agjacome@151.167.20.95.dynamic.jazztel.es) has quit (Ping timeout: 244 seconds)
2015-08-26 12:25:12	-->	danthemyth (~danthemyt@50.246.66.201) has joined #haskell
2015-08-26 12:25:13	arkeet	so
2015-08-26 12:25:16	arkeet	what line is the error on?
2015-08-26 12:25:20	aweinstock	I'm installing my own lambdabot to use on another IRC server, and I noticed that there's a brainf*** interpreter as one of the dependencies
2015-08-26 12:25:25	<--	kognate (kognate@nat/ibm/x-kuxzlxqbxtrzvgyv) has quit (Remote host closed the connection)
2015-08-26 12:25:36	Hafydd	An essential feature.
2015-08-26 12:25:40	-->	kognate (kognate@nat/ibm/x-efcsbqxupcsibzen) has joined #haskell
2015-08-26 12:25:44	aweinstock	does anyone know what that's about?
2015-08-26 12:25:49	GLM	http://lpaste.net/139704
2015-08-26 12:25:52	-->	lodin_ (~lodin@c-31-209-2-44.cust.bredband2.com) has joined #haskell
2015-08-26 12:25:55	Hafydd	Just people being silly, as usual.
2015-08-26 12:25:55	arkeet	aweinstock: it's exactly as you think.
2015-08-26 12:26:02	arkeet	lambdabot includes one.
2015-08-26 12:26:02	kadoban	I would assume there's some goofy brainfuck command in lambdabot then
2015-08-26 12:26:19	Hafydd	@help bf
2015-08-26 12:26:19	lambdabot	bf <expr>. Evaluate a brainf*ck expression
2015-08-26 13:30:55	--	irc: disconnected from server
2015-08-26 13:32:31	-->	RouxTheDay (~RouxTheDa@199.21.87.214) has joined #haskell
2015-08-26 13:32:31	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-26 13:32:31	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-26 13:32:32	--	Channel #haskell: 1528 nicks (1 op, 0 voices, 1527 normals)
2015-08-26 13:32:32	--	URL for #haskell: http://www.haskell.org/
2015-08-26 13:32:32	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-26 13:32:56	-->	ziocroc (~ziocroc3@151.74.47.217) has joined #haskell
2015-08-26 13:32:59	-->	lucasbrunialti (~lucasbrun@gwleste.semfio.usp.br) has joined #haskell
2015-08-26 13:35:53	--	irc: disconnected from server
2015-08-26 13:36:38	-->	RouxTheD1 (~RouxTheDa@166.170.37.82) has joined #haskell
2015-08-26 13:36:38	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-26 13:36:38	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:26
2015-08-26 13:36:38	--	Channel #haskell: 1527 nicks (1 op, 0 voices, 1526 normals)
2015-08-26 13:36:38	--	URL for #haskell: http://www.haskell.org/
2015-08-26 13:36:39	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-26 13:36:40	fvgvxmpv1	this page: http://lpaste.net/new/haskell
2015-08-26 13:36:42	<--	yyyyy (~yyyyy@201.30.227.53) has quit (Quit: leaving)
2015-08-26 13:36:43	fvgvxmpv1	upps
2015-08-26 13:36:44	<--	RouxTheDay (~RouxTheDa@199.21.87.214) has quit (Ping timeout: 244 seconds)
2015-08-26 13:36:44	-->	exferenceBot (~exference@x4d066785.dyn.telefonica.de) has joined #haskell
2015-08-26 13:36:46	nitrix	Is it normal stack gives me "not in scope main" when trying to run main?
2015-08-26 13:36:56	nitrix	cabal lets me, stack doesn't. I have to do Main.main
2015-08-26 13:37:11	<--	basearcher (~textual@208.66.26.41) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-26 13:37:23	fvgvxmpv1	this page: https://ghc.haskell.org/trac/ghc/ticket/9625 lead me to try calling my 'test-suite' "HStest-foo" which yields "undefined reference to `…"-errors
2015-08-26 13:37:43	-->	agocorona (547fb55c@gateway/web/freenode/ip.84.127.181.92) has joined #haskell
2015-08-26 13:38:03	Denommus	cocreature: are you guys working on a fix?
2015-08-26 13:38:30	<--	Epowerj_ (~Epowerj@206.21.121.109) has quit (Ping timeout: 246 seconds)
2015-08-26 13:38:37	-->	urdh (~urdh@unaffiliated/urdh) has joined #haskell
2015-08-26 13:38:39	<--	umib0zu (~umib0zu@static-71-174-59-11.bstnma.fios.verizon.net) has quit (Quit: umib0zu)
2015-08-26 13:38:45	-->	PragCypher (~johnhf@x5ce542da.dyn.telefonica.de) has joined #haskell
2015-08-26 13:38:56	cocreature	Denommus: borsboom said that he is going to fix it so I didn't start working on a fix (also I'm not really involved with the stack project although for some reason I have commit access)
2015-08-26 13:39:05	Denommus	cocreature: I can help, but I don't want to duplicate effort
2015-08-26 13:39:26	<--	xenog (~xenog@193.120.165.166) has quit (Ping timeout: 250 seconds)
2015-08-26 13:39:30	-->	fsvehla (~fsvehla@h081217222140.dyn.cm.kabsi.at) has joined #haskell
2015-08-26 13:39:42	<--	mizu_no_oto (~textual@c-67-189-145-156.hsd1.ma.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-26 13:39:55	cocreature	Denommus: well then comment on the issue and say that you want to fix it
2015-08-26 13:40:02	<--	Guest38 (~textual@38.88.246.202) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-26 13:40:05	-->	gabriel__ (~gabriel@r167-62-169-1.dialup.adsl.anteldata.net.uy) has joined #haskell
2015-08-26 13:40:06	-->	mizu_no_oto (~textual@c-67-189-145-156.hsd1.ma.comcast.net) has joined #haskell
2015-08-26 13:40:15	-->	randy655 (~user@205-178-7-160.c3-0.mart-ubr1.chi-mart.il.cable.rcn.com) has joined #haskell
2015-08-26 13:40:30	-->	joco42_ (~joco42@dsl-hkibrasgw4-58c03a-80.dhcp.inet.fi) has joined #haskell
2015-08-26 13:40:31	<--	gabriel_ (~gabriel@r167-62-69-49.dialup.adsl.anteldata.net.uy) has quit (Read error: Connection reset by peer)
2015-08-26 13:40:34	<--	mizu_no_oto (~textual@c-67-189-145-156.hsd1.ma.comcast.net) has quit (Client Quit)
2015-08-26 13:40:44	fvgvxmpv1	(7.10.2, btw)
2015-08-26 13:40:50	-->	umib0zu (~umib0zu@static-71-174-59-11.bstnma.fios.verizon.net) has joined #haskell
2015-08-26 13:40:51	<--	SenpaiSilver (~SenpaiSil@lse83-h01-31-38-248-147.dsl.sta.abo.bbox.fr) has quit (Quit: Leaving)
2015-08-26 13:40:52	<--	jomg (~jomg@ip5f5ad5bc.dynamic.kabel-deutschland.de) has quit (Ping timeout: 245 seconds)
2015-08-26 13:41:15	<--	nshepperd (~nshepperd@168.1.75.55-static.reverse.softlayer.com) has quit (Ping timeout: 260 seconds)
2015-08-26 13:41:23	<--	ptcek (~ptcek@89.239.24.150) has quit (Remote host closed the connection)
2015-08-26 13:42:32	<--	PragCypher (~johnhf@x5ce542da.dyn.telefonica.de) has quit (Client Quit)
2015-08-26 13:43:26	-->	amiri (~amiri@cpe-104-174-60-215.socal.res.rr.com) has joined #haskell
2015-08-26 13:44:13	<--	Welkin (~Welkin@rrcs-97-78-71-196.se.biz.rr.com) has quit (Ping timeout: 264 seconds)
2015-08-26 13:44:31	<--	doomlord (~textual@host81-155-65-113.range81-155.btcentralplus.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-26 13:44:38	<--	randy655 (~user@205-178-7-160.c3-0.mart-ubr1.chi-mart.il.cable.rcn.com) has quit (Ping timeout: 250 seconds)
2015-08-26 13:45:00	<--	shelling__ (sid12374@gateway/web/irccloud.com/x-qausdosiijoyfwtz) has quit (Ping timeout: 244 seconds)
2015-08-26 13:45:47	-->	shelling__ (sid12374@gateway/web/irccloud.com/x-jecznhjksrlmfojo) has joined #haskell
2015-08-26 13:45:51	<--	ARM9 (~ARM9@46-236-101-75.customer.t3.se) has quit (Quit: Leaving)
2015-08-26 13:46:33	<--	amiri_ (~amiri@cpe-104-174-60-215.socal.res.rr.com) has quit (Ping timeout: 246 seconds)
2015-08-26 13:46:57	-->	LonZealot (~IceChat9@p5B2BE9EF.dip0.t-ipconnect.de) has joined #haskell
2015-08-26 13:47:35	<--	cschneid (cschneid@2600:3c00::f03c:91ff:fe73:9540) has quit (Ping timeout: 244 seconds)
2015-08-26 13:47:49	<--	umib0zu (~umib0zu@static-71-174-59-11.bstnma.fios.verizon.net) has quit (Quit: umib0zu)
2015-08-26 13:47:55	-->	osa1 (~omer@149.160.212.167) has joined #haskell
2015-08-26 13:49:36	-->	jiang42 (~jiang42@116.237.85.218) has joined #haskell
2015-08-26 13:49:37	-->	nkaretnikov (~nikita@unaffiliated/nkar) has joined #haskell
2015-08-26 13:49:48	-->	cschneid (cschneid@2600:3c00::f03c:91ff:fe73:9540) has joined #haskell
2015-08-26 13:50:36	<--	darenthis (~darenthis@cpc76742-dals23-2-0-cust353.20-2.cable.virginm.net) has quit (Remote host closed the connection)
2015-08-26 13:50:51	nitrix	Okay, apparently stack 2.0.0 solves many of the issues I'm having. I just read the tickets.
2015-08-26 13:50:52	nitrix	I'll try the master version.
2015-08-26 13:51:49	-->	xenog (~xenog@193.120.165.166) has joined #haskell
2015-08-26 13:52:17	kadoban	There's a stack 2.0.0 ? I only see 0.1.3.1
2015-08-26 13:52:19	<--	schlicht (~fl@ARennes-553-1-234-197.w2-10.abo.wanadoo.fr) has quit (Ping timeout: 250 seconds)
2015-08-26 13:52:36	Ankhers	nitrix: I think you mean 0.2.0.0
2015-08-26 13:52:38	<--	ahg (~alan@67.133.228.46) has quit (Quit: Leaving)
2015-08-26 13:52:45	<--	chirpsalot (~Chirps@unaffiliated/chirpsalot) has quit (Ping timeout: 244 seconds)
2015-08-26 13:52:49	-->	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has joined #haskell
2015-08-26 13:52:55	kadoban	I don't think that exists yet either, heh.
2015-08-26 13:53:14	-->	biglama (~Day_dream@fon75-2-78-192-179-102.fbxo.proxad.net) has joined #haskell
2015-08-26 13:53:16	<--	xacktm (xacktm@unaffiliated/xacktm) has quit (Ping timeout: 244 seconds)
2015-08-26 13:53:22	Ankhers	Technically not, but issues are tagged with it.
2015-08-26 13:53:25	<--	conal (~textual@50.242.71.57) has quit (Quit: Computer has gone to sleep.)
2015-08-26 13:53:47	kadoban	Ah
2015-08-26 13:53:50	-->	conal (~textual@50.242.71.57) has joined #haskell
2015-08-26 13:54:01	-->	chirpsalot (~Chirps@unaffiliated/chirpsalot) has joined #haskell
2015-08-26 13:54:24	<--	jiang42 (~jiang42@116.237.85.218) has quit (Ping timeout: 256 seconds)
2015-08-26 13:54:27	<--	cschneid (cschneid@2600:3c00::f03c:91ff:fe73:9540) has quit (Ping timeout: 244 seconds)
2015-08-26 13:54:30	-->	xacktm (xacktm@unaffiliated/xacktm) has joined #haskell
2015-08-26 13:54:36	<--	lucasbrunialti (~lucasbrun@gwleste.semfio.usp.br) has quit (Remote host closed the connection)
2015-08-26 13:54:45	-->	cschneid (cschneid@2600:3c00::f03c:91ff:fe73:9540) has joined #haskell
2015-08-26 13:54:58	<--	wayne (~wayne@unaffiliated/wayne) has quit (Remote host closed the connection)
2015-08-26 13:55:03	-->	darenthis (~darenthis@cpc76742-dals23-2-0-cust353.20-2.cable.virginm.net) has joined #haskell
2015-08-26 13:55:10	<--	enterprisedc (~enterpris@ip68-111-74-68.oc.oc.cox.net) has quit (Quit: enterprisedc)
2015-08-26 13:55:15	-->	lucasbrunialti (~lucasbrun@gwleste.semfio.usp.br) has joined #haskell
2015-08-26 13:55:21	-->	SenpaiSilver (~SenpaiSil@lse83-h01-31-38-248-147.dsl.sta.abo.bbox.fr) has joined #haskell
2015-08-26 13:55:35	-->	hwhelchel (0cca8612@gateway/web/cgi-irc/kiwiirc.com/ip.12.202.134.18) has joined #haskell
2015-08-26 13:55:51	hwhelchel	hello
2015-08-26 13:55:55	<--	joshc_ (~joshc@neo.teric.us) has quit (Changing host)
2015-08-26 13:55:55	-->	joshc_ (~joshc@rhlug/joshc) has joined #haskell
2015-08-26 13:56:11	Ankhers	hwhelchel: Howdy.
2015-08-26 13:56:22	<--	hiratara (~hiratara@240f:7:4708:1:2168:970a:c679:54c) has quit (Ping timeout: 244 seconds)
2015-08-26 13:56:26	<--	arbelos_ (~slack@2.71.119.17.mobile.tre.se) has quit (Quit: Leaving)
2015-08-26 13:56:27	<--	dgpratt (~dpratt71@207.182.200.34) has quit (Quit: Leaving)
2015-08-26 13:56:53	hwhelchel	I'm looking at Data.Array in the docs. It says "Haskell provides indexable arrays, which may be thought of as functions whose domains are isomorphic to contiguous subsets of the integers." see: http://hackage.haskell.org/package/array-0.5.1.0/docs/Data-Array.html
2015-08-26 13:56:55	<--	voltalio (~textual@173-14-36-210-Michigan.hfc.comcastbusiness.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-26 13:56:58	hwhelchel	What does that mean?
2015-08-26 13:56:58	-->	jgt (~jgt@aeev12.neoplus.adsl.tpnet.pl) has joined #haskell
2015-08-26 13:57:03	<--	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has quit (Ping timeout: 246 seconds)
2015-08-26 13:57:07	-->	arg (6d9cfb5b@gateway/web/freenode/ip.109.156.251.91) has joined #haskell
2015-08-26 13:57:09	hwhelchel	domains are isomorphic...
2015-08-26 13:57:30	<--	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has quit (Ping timeout: 244 seconds)
2015-08-26 13:57:32	<--	lucasbrunialti (~lucasbrun@gwleste.semfio.usp.br) has quit (Remote host closed the connection)
2015-08-26 13:57:35	Denommus	hwhelchel: do you know what the domain of a function is?
2015-08-26 13:57:35	-->	hiratara (~hiratara@240f:7:4708:1:85ef:8c23:45b0:456) has joined #haskell
2015-08-26 13:57:36	jle`	hwhelchel: it means that it's a function from "something" that is isomorphic to a range of integers, like [1..3]
2015-08-26 13:57:39	Hafydd	Isomorphic means "same" (iso) "shaped" (morph).
2015-08-26 13:57:43	<--	belst (~belstgut@unaffiliated/belst) has left #haskell ("Leaving")
2015-08-26 13:57:48	<--	tjl30 (~quassel@2001:4802:7800:1:1b11:a9d1:ff20:5082) has quit (Ping timeout: 244 seconds)
2015-08-26 13:57:48	<--	w00die (~pi@broadband-109-173-124-250.nationalcablenetworks.ru) has quit (Ping timeout: 244 seconds)
2015-08-26 13:57:51	<--	pantsman- (~pantsman@cpc12-haye16-2-0-cust45.haye.cable.virginm.net) has quit (Ping timeout: 240 seconds)
2015-08-26 13:57:54	<--	sopvop (~leonid@178.70.86.122) has quit (Quit: terminated!)
2015-08-26 13:57:56	<--	PlasmaStar (Plasma@unaffiliated/plasmastar) has quit (Ping timeout: 244 seconds)
2015-08-26 13:57:56	<--	Biohazard (~Biohazard@osiris.stary2001.co.uk) has quit (Ping timeout: 244 seconds)
2015-08-26 13:58:03	-->	Biohazard_ (~Biohazard@osiris.stary2001.co.uk) has joined #haskell
2015-08-26 13:58:04	hwhelchel	what is the domain of a function? All valid inputs?
2015-08-26 13:58:05	-->	w00die (~pi@broadband-109-173-124-250.nationalcablenetworks.ru) has joined #haskell
2015-08-26 13:58:09	jle`	for example, Bool is isomorphic to [1..2], or [5..6]
2015-08-26 13:58:18	jle`	in this case it means the `a` in f :: a -> b, roughly
2015-08-26 13:58:31	-->	tjl30 (~quassel@2001:4802:7800:1:1b11:a9d1:ff20:5082) has joined #haskell
2015-08-26 13:58:35	Denommus	hwhelchel: yes, the domain of a function is the set of "input" that is valid for that function
2015-08-26 13:58:42	-->	lucasbrunialti (~lucasbrun@gwleste.semfio.usp.br) has joined #haskell
2015-08-26 13:58:45	jle`	so this is saying that an Array Int, with two elements, can be thought of as an f :: Bool -> a
2015-08-26 13:58:49	jle`	er, f :: Bool -> Int
2015-08-26 13:58:53	-->	GLM (a1b5fd14@gateway/web/cgi-irc/kiwiirc.com/ip.161.181.253.20) has joined #haskell
2015-08-26 13:59:01	Denommus	hwhelchel: an array is like a function where the input has the same structure as contiguous integers
2015-08-26 13:59:19	<--	ProofTechnique (~Ptech@65-183-137-193-dhcp.burlingtontelecom.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-26 13:59:31	Denommus	hwhelchel: you don't need to worry about that, this is just explaining what an array is in mathematical terms
2015-08-26 13:59:32	jle`	a better phrasing might be, "functions whose domains are contiguous subsets of the integers...or anything isomorphic to it, i guess"
2015-08-26 13:59:36	<--	nkartash_ (~nkartasho@46.163.148.179) has quit (Read error: Connection reset by peer)
2015-08-26 14:00:03	hwhelchel	So maybe a function that maps integers (the array indices) to the the elements of the array?
2015-08-26 14:00:12	-->	nkartash_ (~nkartasho@46.163.148.179) has joined #haskell
2015-08-26 14:00:13	jle`	hwhelchel: yup
2015-08-26 14:00:15	pyon	jle`: How can a type (a type-level entity) be the same thing as a list (a value-level entity?
2015-08-26 14:00:25	Denommus	hwhelchel: CONTIGUOUS integers
2015-08-26 14:00:25	<--	lucasbrunialti (~lucasbrun@gwleste.semfio.usp.br) has quit (Remote host closed the connection)
2015-08-26 14:00:34	pyon	)*?
2015-08-26 14:00:34	hwhelchel	right
2015-08-26 14:00:35	hwhelchel	thanks everyone
2015-08-26 14:00:36	jle`	hwhelchel: but, more powerful than that, a function from *any type* that can go to the indices
2015-08-26 14:00:42	jle`	so like, Bool works as a domain for an array of two elements
2015-08-26 14:00:49	-->	voltalio (~textual@173-14-36-210-Michigan.hfc.comcastbusiness.net) has joined #haskell
2015-08-26 14:00:49	jle`	because an array of two Int's is basically a Bool -> Int
2015-08-26 14:00:57	jle`	because Bool is isomorphic to [1..2]
2015-08-26 14:00:59	<--	xenog (~xenog@193.120.165.166) has quit (Ping timeout: 250 seconds)
2015-08-26 14:01:07	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-26 14:01:15	jle`	pyon: hm, is there a context here?
2015-08-26 14:01:30	jle`	oh, i'm not using haskell lists, i'm using notation to talk about a set
2015-08-26 14:01:36	pyon	Oh, okay.
2015-08-26 14:01:43	Hafydd	A type is a type-level entity, eh?
2015-08-26 14:01:55	jle`	so Bool is isomorphic to the set {1, 2}
2015-08-26 14:02:10	-->	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has joined #haskell
2015-08-26 14:02:11	-->	bolmar (bolmar@Psilocybe.Update.UU.SE) has joined #haskell
2015-08-26 14:02:12	-->	ljhms_ (~ljhms@nl112-167-130.student.uu.se) has joined #haskell
2015-08-26 14:02:18	<--	joco42_ (~joco42@dsl-hkibrasgw4-58c03a-80.dhcp.inet.fi) has quit (Remote host closed the connection)
2015-08-26 14:02:19	<--	ljhms (~ljhms@nl112-167-130.student.uu.se) has quit (Ping timeout: 244 seconds)
2015-08-26 14:02:20	<--	bolmar_ (bolmar@Psilocybe.Update.UU.SE) has quit (Ping timeout: 244 seconds)
2015-08-26 14:02:20	--	ljhms_ is now known as ljhms
2015-08-26 14:02:28	hwhelchel	jle: gotcha so any type that is isomorphic to a contiguous set of integers can serve as the first type in the array function?
2015-08-26 14:02:35	Denommus	Hafydd: yes. They don't exist at the value-level
2015-08-26 14:02:46	jle`	hwhelchel: yeah, in the "encoding of an Array as a function"
2015-08-26 14:02:54	jle`	or, the representation of an array as a function
2015-08-26 14:02:58	-->	cjwelborn (cjwelborn@unaffiliated/cjwelborn) has joined #haskell
2015-08-26 14:02:59	hwhelchel	neat
2015-08-26 14:03:09	jle`	it's just a fancy pants way of talking about arrays as mathematical objects
2015-08-26 14:03:43	jle`	instead of in like...computer terms
2015-08-26 14:03:47	<--	voltalio (~textual@173-14-36-210-Michigan.hfc.comcastbusiness.net) has quit (Client Quit)
2015-08-26 14:03:56	jle`	cause it's not like we're programming a computer or anything...
2015-08-26 14:04:06	jle`	#haskellculture
2015-08-26 14:04:07	<--	yfeldblum (~yfeldblum@2620:10d:c090:200::de3c) has quit (Ping timeout: 244 seconds)
2015-08-26 14:04:17	kuribas	we're computer scientists!
2015-08-26 14:04:17	Denommus	hwhelchel: basically, that means you can use any type that instances the typeclass Ix :P
2015-08-26 14:04:27	kuribas	though I am not...
2015-08-26 14:04:40	-->	yfeldblum (~yfeldblum@2620:10d:c090:200::1c45) has joined #haskell
2015-08-26 14:04:40	Hafydd	What's the "computer term" for a set isomorphic to a contiguous range of integers?
2015-08-26 14:05:05	<--	arg (6d9cfb5b@gateway/web/freenode/ip.109.156.251.91) has quit (Ping timeout: 246 seconds)
2015-08-26 14:05:24	<--	xpilot (~vlad@dhcp-18-111-53-175.dyn.mit.edu) has quit (Ping timeout: 260 seconds)
2015-08-26 14:05:27	<--	Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Ping timeout: 246 seconds)
2015-08-26 14:05:31	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Ping timeout: 255 seconds)
2015-08-26 14:05:34	<--	chaosmasttter (~chaosmast@p4FC56064.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.2)
2015-08-26 14:05:58	jle`	"an array is a contiguous chunk of memory that you can store things and retrieve things in by providing a pointer offset"
2015-08-26 14:06:03	nitrix	hwhelchel: Are you familiar with functions? Domain and codomain?
2015-08-26 14:06:04	<--	fabianvf (~fabianvf@216.30.185.217) has quit
2015-08-26 14:06:17	<--	erikd (~erikd@hendrix.mega-nerd.net) has quit (Quit: disappearing into the sunset)
2015-08-26 14:06:20	<--	dmag_ (~damian@host86-162-252-220.range86-162.btcentralplus.com) has quit (Ping timeout: 260 seconds)
2015-08-26 14:06:23	hwhelchel	nitrix: don't think so. would be happy to learn.
2015-08-26 14:06:35	Hafydd	jle`: that's abysmal.
2015-08-26 14:07:03	jle`	why do you think i spend all my time in #haskell
2015-08-26 14:07:14	-->	fabianvf (~fabianvf@216.30.185.217) has joined #haskell
2015-08-26 14:07:15	<--	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has quit (Ping timeout: 260 seconds)
2015-08-26 14:07:22	<--	fabianvf (~fabianvf@216.30.185.217) has quit (Remote host closed the connection)
2015-08-26 14:07:43	Hafydd	(And untrue, since the array is not necessarily stored as contiguous memory.(
2015-08-26 14:08:02	<--	evrial (~evrial@unaffiliated/evrial) has quit (Remote host closed the connection)
2015-08-26 14:08:02	--	skore_afk is now known as skore_De
2015-08-26 14:08:06	--	skore_De is now known as skore_de
2015-08-26 14:08:15	-->	takeey (~takeey@2001:bc8:219a:1337::5) has joined #haskell
2015-08-26 14:08:38	-->	evrial (~evrial@unaffiliated/evrial) has joined #haskell
2015-08-26 14:08:39	hwhelchel	what is the domain of a function?
2015-08-26 14:08:50	-->	refried_ (~textual@frontend.gtri.gatech.edu) has joined #haskell
2015-08-26 14:09:17	<--	cameronfr (cameronfr@2604:a880:1:20::1e5:900f) has quit (Ping timeout: 244 seconds)
2015-08-26 14:09:40	Denommus	hwhelchel: I told you. The domain of a function is the set of valid input for the function
2015-08-26 14:10:04	-->	jcreekmore (~jcreekmor@67.63.141.2) has joined #haskell
2015-08-26 14:10:08	-->	plutoniix (~plutoniix@node-10n2.pool-180-180.dynamic.totbb.net) has joined #haskell
2015-08-26 14:10:09	<--	dsantiago (~dsantiago@cpe-104-175-220-187.socal.res.rr.com) has quit (Quit: Computer has gone to sleep.)
2015-08-26 14:10:13	hwhelchel	You're right thanks
2015-08-26 14:10:21	<--	jwm224_ (~My_user_n@c-73-174-21-132.hsd1.pa.comcast.net) has quit (Quit: WeeChat 1.1.1)
2015-08-26 14:10:36	-->	edon (~user@albalug/edon) has joined #haskell
2015-08-26 14:11:01	hexagoxel	phaazon: couldn't you use Tagged (on the result of the class' method) instead? should be free, and not too clunky regarding usage.
2015-08-26 14:11:04	-->	JagaJaga (~jaga@178.62.202.50) has joined #haskell
2015-08-26 14:11:24	-->	doomlord (~textual@host81-155-65-113.range81-155.btcentralplus.com) has joined #haskell
2015-08-26 14:11:25	-->	cameronfr (cameronfr@2604:a880:1:20::1e5:900f) has joined #haskell
2015-08-26 14:11:39	Denommus	hwhelchel: while the codomain is the set of f(x) for every valid x
2015-08-26 14:11:40	-->	MuffinMedic (~MuffinMed@unaffiliated/muffinmedic) has joined #haskell
2015-08-26 14:12:00	<--	MuffinMedic (~MuffinMed@unaffiliated/muffinmedic) has quit (Max SendQ exceeded)
2015-08-26 14:12:05	Hafydd	codomain <=ANAGRAM=> condom AI
2015-08-26 14:12:21	<--	mjs2600 (~mjs2600@c-50-156-203-132.hsd1.tn.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-26 14:12:22	-->	cyphase (~cyphase@unaffiliated/cyphase) has joined #haskell
2015-08-26 14:12:58	-->	dsantiago (~dsantiago@cpe-104-175-220-187.socal.res.rr.com) has joined #haskell
2015-08-26 14:13:13	Hafydd	(The codomain is not the set of all f(x) -- that's the /image/ -- but rather an arbitrary superset of that by which the function is defined.)
2015-08-26 14:13:15	-->	MasterPiece (~MasterPie@unaffiliated/masterpiece) has joined #haskell
2015-08-26 14:13:31	Denommus	Hafydd: ah, that's right
2015-08-26 14:13:54	-->	enterprisedc (~enterpris@ip68-111-74-68.oc.oc.cox.net) has joined #haskell
2015-08-26 14:13:54	<--	jtk1 (jtk@gateway/vpn/mullvad/x-wgvbrgaybkkmgkfd) has quit (Ping timeout: 244 seconds)
2015-08-26 14:14:07	-->	basearcher (~textual@208.66.26.41) has joined #haskell
2015-08-26 14:14:21	-->	MuffinMedic (~MuffinMed@unaffiliated/muffinmedic) has joined #haskell
2015-08-26 14:14:27	-->	jwm224_ (~My_user_n@c-73-174-21-132.hsd1.pa.comcast.net) has joined #haskell
2015-08-26 14:14:31	<--	Denommus (~user@unaffiliated/denommus) has quit (Quit: going home)
2015-08-26 14:14:39	hwhelchel	so is the codomain all valid outputs of the function?
2015-08-26 14:14:52	fosterite	all valid outputs are in the codomain
2015-08-26 14:14:53	<--	MuffinMedic (~MuffinMed@unaffiliated/muffinmedic) has left #haskell
2015-08-26 18:17:05	--	irc: disconnected from server
2015-08-26 18:17:33	-->	RouxTheD1 (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-26 18:17:33	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-26 18:17:33	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-26 18:17:33	--	Channel #haskell: 1471 nicks (1 op, 0 voices, 1470 normals)
2015-08-26 18:17:33	--	URL for #haskell: http://www.haskell.org/
2015-08-26 18:17:33	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-26 18:17:55	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Ping timeout: 245 seconds)
2015-08-26 18:18:12	-->	cads (~M@104-9-5-196.lightspeed.tukrga.sbcglobal.net) has joined #haskell
2015-08-26 18:19:31	 *	hackagebot cabal-helper 0.5.3.0 - Simple interface to some of Cabal's configuration state used by ghc-mod  https://hackage.haskell.org/package/cabal-helper-0.5.3.0 (DanielG)
2015-08-26 18:20:56	<--	fullofcaffeine (~fullofcaf@201.164.208.68) has quit (Read error: Connection reset by peer)
2015-08-26 18:21:32	-->	Erlkonig (~Erlkonig@103.5.142.51) has joined #haskell
2015-08-26 18:21:35	<--	acidjnk (acid@p57B8D829.dip0.t-ipconnect.de) has quit (Ping timeout: 252 seconds)
2015-08-26 18:21:54	<--	nrk- (~b@ppp121-45-221-139.lns20.cbr1.internode.on.net) has quit (Ping timeout: 244 seconds)
2015-08-26 18:26:19	<--	bq (~chatzilla@123.157.71.156) has quit (Ping timeout: 264 seconds)
2015-08-26 18:26:53	--	irc: disconnected from server
2015-08-26 18:27:21	-->	RouxTheDay (~RouxTheDa@199.21.87.214) has joined #haskell
2015-08-26 18:27:21	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-26 18:27:21	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-26 18:27:24	--	Channel #haskell: 1469 nicks (1 op, 0 voices, 1468 normals)
2015-08-26 18:27:24	--	URL for #haskell: http://www.haskell.org/
2015-08-26 18:27:24	<--	cchalmer_ (~textual@cpc1-shep13-2-0-cust104.8-3.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-26 19:34:32	--	irc: disconnected from server
2015-08-26 19:35:00	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-26 19:35:00	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-26 19:35:00	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-26 19:35:00	--	Channel #haskell: 1469 nicks (1 op, 0 voices, 1468 normals)
2015-08-26 19:35:00	--	URL for #haskell: http://www.haskell.org/
2015-08-26 19:35:00	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-27 13:21:13	--	irc: disconnected from server
2015-08-27 13:21:38	-->	RouxTheDay (~RouxTheDa@199-83-220-245.PUBLIC.monkeybrains.net) has joined #haskell
2015-08-27 13:21:38	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-27 13:21:38	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-27 13:21:38	--	Channel #haskell: 1534 nicks (1 op, 0 voices, 1533 normals)
2015-08-27 13:21:38	--	URL for #haskell: http://www.haskell.org/
2015-08-27 13:21:39	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-27 13:22:06	-->	lwm (~lwm@95.91.209.251) has joined #haskell
2015-08-27 13:22:35	<--	umib0zu (~umib0zu@146-115-43-219.c3-0.abr-ubr1.sbo-abr.ma.cable.rcn.com) has quit (Read error: Connection reset by peer)
2015-08-27 13:23:27	-->	KarolisK (~karolis@78-60-68-107.static.zebra.lt) has joined #haskell
2015-08-27 13:23:34	 *	hackagebot why3 0.8 - Haskell support for the Why3 input format.  https://hackage.haskell.org/package/why3-0.8 (EricMertens)
2015-08-27 13:23:36	 *	hackagebot annotated-wl-pprint 0.7.0 - The Wadler/Leijen Pretty Printer, with annotation support  https://hackage.haskell.org/package/annotated-wl-pprint-0.7.0 (dchristiansen)
2015-08-27 13:24:04	geekosaur	mettekou, so the alex manual tells me that $digit should just be 0-9 not [0-9]; the brackets are used when there's more than just a single character or single range. which may mean they're being read as digit characters. (this seems unfortunate...)
2015-08-27 13:24:12	<--	Ayey_ (~rune@0135301590.0.fullrate.dk) has quit (Ping timeout: 240 seconds)
2015-08-27 13:24:17	<--	schlicht (~fl@ARennes-553-1-241-222.w2-10.abo.wanadoo.fr) has quit (Ping timeout: 256 seconds)
2015-08-27 13:24:17	absence	byorgey: i can see that it makes for more convenient notation, in that users don't have to type (Foldable f, Traversable f) => ..., but it still seems a bit arbitrary. why isn't the constraint the other way around? i.e. class Traversable t => Foldable t
2015-08-27 13:24:35	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Remote host closed the connection)
2015-08-27 13:25:14	<--	mjs2600 (~mjs2600@c-50-156-203-132.hsd1.tn.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-27 13:25:27	<--	pt1 (~pt1@195.29.92.186) has quit (Remote host closed the connection)
2015-08-27 13:25:33	-->	skeet70_ (~skeet70@inet-hqmc08-o.oracle.com) has joined #haskell
2015-08-27 13:25:56	glguy	geekosaur: I use "$digit          = [0-9]" in the Alex file I checked. (Still reviewing the chatlog to figure out if that's relevant)
2015-08-27 13:26:08	geekosaur	although they show the other form later in the tutorial, hm. but 
2015-08-27 13:26:21	<--	strburst (~allen@lawn-128-61-26-37.lawn.gatech.edu) has quit (Ping timeout: 244 seconds)
2015-08-27 13:26:25	-->	mjs2600 (~mjs2600@c-50-156-203-132.hsd1.tn.comcast.net) has joined #haskell
2015-08-27 13:26:26	<--	dfeuer (~dfeuer@wikimedia/Dfeuer) has quit (Quit: dfeuer)
2015-08-27 13:26:29	geekosaur	then I wonder if [$alpha$digit] is legal
2015-08-27 13:26:31	-->	filmacka_ (~filmackay@176-227-134-124.ip.skylogicnet.com) has joined #haskell
2015-08-27 13:26:38	-->	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-27 13:26:42	geekosaur	or if it does something unexpected
2015-08-27 13:26:57	<--	mjs2600 (~mjs2600@c-50-156-203-132.hsd1.tn.comcast.net) has quit (Read error: Connection reset by peer)
2015-08-27 13:27:30	byorgey	absence: the other way around doesn't make sense.  That requires every Foldable to also be Traversable.  But there are many Foldable instances which cannot be made Traversable.
2015-08-27 13:28:18	-->	RouxTheDay (~RouxTheDa@199-83-220-245.PUBLIC.monkeybrains.net) has joined #haskell
2015-08-27 13:28:18	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-27 13:28:18	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-27 13:28:18	--	Channel #haskell: 1530 nicks (1 op, 0 voices, 1529 normals)
2015-08-27 13:28:18	--	URL for #haskell: http://www.haskell.org/
2015-08-27 13:28:18	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-27 13:28:22	-->	Erlkonig (~Erlkonig@p3191087-ipngn19001marunouchi.tokyo.ocn.ne.jp) has joined #haskell
2015-08-27 13:28:30	-->	kazagistar (~Adium@76.191.88.132) has joined #haskell
2015-08-27 13:28:33	<--	kazagistar (~Adium@76.191.88.132) has quit (Max SendQ exceeded)
2015-08-27 13:28:41	<--	CMCDragonkai (~nobody@ec2-52-8-178-236.us-west-1.compute.amazonaws.com) has quit (Remote host closed the connection)
2015-08-27 13:28:55	-->	kazagistar (~Adium@76.191.88.132) has joined #haskell
2015-08-27 13:28:58	<--	kazagistar (~Adium@76.191.88.132) has quit (Max SendQ exceeded)
2015-08-27 13:29:00	<--	mettekou (~mettekou@94-224-246-64.access.telenet.be) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-27 13:29:19	-->	kazagistar (~Adium@76.191.88.132) has joined #haskell
2015-08-27 13:29:27	<--	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 250 seconds)
2015-08-27 13:29:35	-->	mettekou (~mettekou@94-224-246-64.access.telenet.be) has joined #haskell
2015-08-27 13:29:47	tommd	lwm: Sorry, the only FP jobs in the world involve writing Cryptol, not Haskell ;-).
2015-08-27 13:29:57	<--	nshepperd (~nshepperd@ppp118-209-2-228.lns20.mel4.internode.on.net) has quit (Ping timeout: 256 seconds)
2015-08-27 13:30:03	lwm	hmm ... maybe the question is more #haskell-blah
2015-08-27 13:30:11	mettekou	geekosaur: It seems pretty inconsistent with normal regular expressions...
2015-08-27 13:30:32	<--	filmacka_ (~filmackay@176-227-134-124.ip.skylogicnet.com) has quit (Ping timeout: 240 seconds)
2015-08-27 13:30:42	lwm	tommd: wut, just checked cryptol.net
2015-08-27 13:31:13	geekosaur	what you're used to is not regular expression syntax, but variable expansion in shell/perl/python. I would not expect something related to Haskell to randomly expand variables that way, tbh
2015-08-27 13:31:20	-->	wildlander (~wild@unaffiliated/wildlander) has joined #haskell
2015-08-27 13:31:21	<--	wildlander (~wild@unaffiliated/wildlander) has quit (Max SendQ exceeded)
2015-08-27 13:31:38	-->	cfricke (~cfricke@unaffiliated/cfricke) has joined #haskell
2015-08-27 13:31:41	-->	larion (~larion@a83-162-181-111.adsl.xs4all.nl) has joined #haskell
2015-08-27 13:32:00	-->	wildlander (~wild@unaffiliated/wildlander) has joined #haskell
2015-08-27 13:32:01	<--	wildlander (~wild@unaffiliated/wildlander) has quit (Max SendQ exceeded)
2015-08-27 13:32:34	-->	Pokinawa (~Ezalor@cpc12-cmbg17-2-0-cust215.5-4.cable.virginm.net) has joined #haskell
2015-08-27 13:32:50	<--	Erlkonig (~Erlkonig@p3191087-ipngn19001marunouchi.tokyo.ocn.ne.jp) has quit (Ping timeout: 264 seconds)
2015-08-27 13:33:13	mettekou	geekosaur: Could be my bias. It seems weird nevertheless. Because I already tried ditching all the variables and violating DRY, which did not help.
2015-08-27 13:33:20	-->	erikd (~erikd@184.70.136.106) has joined #haskell
2015-08-27 13:33:38	GLM	tommd:What is Cryptol?
2015-08-27 13:33:54	geekosaur	then I don't know, sorry
2015-08-27 13:34:01	absence	byorgey: i see. there are none of those in Data.Foldable, do you know some off the top of your head?
2015-08-27 13:34:16	<--	Akii (~Akii@HSI-KBW-046-005-253-086.hsi8.kabel-badenwuerttemberg.de) has quit (Quit: Leaving...)
2015-08-27 13:34:24	<--	jcreekmore (~jcreekmor@67.63.141.2) has quit (Quit: jcreekmore)
2015-08-27 13:34:27	-->	CMCDragonkai (~nobody@ec2-52-8-178-236.us-west-1.compute.amazonaws.com) has joined #haskell
2015-08-27 13:34:47	-->	stef204 (~stef204@unaffiliated/stef-204/x-384198) has joined #haskell
2015-08-27 13:34:48	-->	schlicht (~fl@ARennes-553-1-241-222.w2-10.abo.wanadoo.fr) has joined #haskell
2015-08-27 13:34:58	-->	perspectival (~perspecti@54.21.broadband10.iol.cz) has joined #haskell
2015-08-27 13:34:58	-->	wildlander (~wild@unaffiliated/wildlander) has joined #haskell
2015-08-27 13:34:59	<--	wildlander (~wild@unaffiliated/wildlander) has quit (Max SendQ exceeded)
2015-08-27 13:35:50	<--	ndrei (~avo@83.142.149.227) has quit (Ping timeout: 264 seconds)
2015-08-27 13:36:03	<--	perspectival (~perspecti@54.21.broadband10.iol.cz) has quit (Client Quit)
2015-08-27 13:36:05	-->	strburst (~allen@lawn-128-61-26-37.lawn.gatech.edu) has joined #haskell
2015-08-27 13:36:15	-->	ndrei (~avo@83.142.149.227) has joined #haskell
2015-08-27 13:36:21	-->	perspectival (~perspecti@54.21.broadband10.iol.cz) has joined #haskell
2015-08-27 13:36:27	<--	Fr4n (~Fr4n@unaffiliated/fr4n) has quit (Ping timeout: 240 seconds)
2015-08-27 13:36:43	<--	alanb99 (~alan@2.218.205.174) has quit (Quit: Leaving.)
2015-08-27 13:36:44	-->	nshepperd (~nshepperd@ppp118-209-2-228.lns20.mel4.internode.on.net) has joined #haskell
2015-08-27 13:37:08	-->	basearcher (~textual@208.66.26.41) has joined #haskell
2015-08-27 13:37:10	GLM	tommd:Cryptol looks like fun. Who was using it
2015-08-27 13:37:11	<--	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 244 seconds)
2015-08-27 13:37:26	-->	gju (~marcus@92.206.112.213) has joined #haskell
2015-08-27 13:37:29	<--	sgflt (~mbr@p4FDF235A.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2015-08-27 13:38:24	<--	crobbins (~crobbins@2602:30a:c08e:19e0:949:c506:a31:1260) has quit (Ping timeout: 246 seconds)
2015-08-27 13:38:29	-->	taira (~quassel@taira-comp.kvi.sgsnet.se) has joined #haskell
2015-08-27 13:39:12	-->	ulfdoz (~mary@2.165.81.50) has joined #haskell
2015-08-27 13:39:20	byorgey	absence: yes, Data.Set is a good example
2015-08-27 13:39:47	<--	ttt_fff (c01f6999@gateway/web/freenode/ip.192.31.105.153) has quit (Ping timeout: 246 seconds)
2015-08-27 13:39:59	-->	kristof (~kristof@unaffiliated/kristof) has joined #haskell
2015-08-27 13:40:17	lpaste_	glguy annotated “No title” with “works like this, at least” at http://lpaste.net/8235806257747853312#a139747
2015-08-27 13:40:23	byorgey	absence: anything which somehow contains data that can be folded together but isn't a Functor, e.g. things like Set which have some internal invariants that would be destroyed by doing a map/traversal
2015-08-27 13:40:27	glguy	mettekou: ^
2015-08-27 13:40:38	-->	frerich (~frerich@kde/raabe) has joined #haskell
2015-08-27 13:41:02	lwm	GLM: apparently the US Government
2015-08-27 13:41:03	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-27 13:41:11	<--	breadmonster (0e8b2df3@gateway/web/freenode/ip.14.139.45.243) has quit (Ping timeout: 246 seconds)
2015-08-27 13:41:22	-->	mgallo (~mgallo@78-134-79-171.v4.ngi.it) has joined #haskell
2015-08-27 13:41:28	-->	Guest38 (~textual@38.88.246.202) has joined #haskell
2015-08-27 13:41:37	geekosaur	aha, that does seem to make more sense (and confirms to me it was parsing the [] as part of the name spec)
2015-08-27 13:43:15	aweinstock	@pl \x -> fmap (lookup x) getEnvironment
2015-08-27 13:43:15	lambdabot	flip fmap getEnvironment . lookup
2015-08-27 13:43:54	mettekou	glguy and geekosaur: Yup, works for me as well. I also swapped out the nasty lambdas for the names and literals for their pointfree alternatives. :3
2015-08-27 13:44:04	aweinstock	:t (<$> getEnvironment) . lookup
2015-08-27 13:44:04	mettekou	Thanks guys!
2015-08-27 13:44:05	lambdabot	Not in scope: ‘getEnvironment’
2015-08-27 13:44:12	absence	byorgey: that makes sense, thanks!
2015-08-27 13:44:26	-->	Sindriav_ (~textual@88.103.123.123) has joined #haskell
2015-08-27 13:44:46	Sindriav_	Is there a way to do compile-time computations?
2015-08-27 13:44:56	tommd	GLM: Well I use Cryptol quite happily ;-)
2015-08-27 13:45:01	<--	gabriel__ (~gabriel@r167-62-67-206.dialup.adsl.anteldata.net.uy) has quit (Read error: Connection reset by peer)
2015-08-27 13:45:18	GLM	tommd: What/where do you work?
2015-08-27 13:45:36	<--	edsko (~edsko@46.7.106.187) has quit (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
2015-08-27 13:45:40	-->	gabriel__ (~gabriel@r167-62-137-142.dialup.adsl.anteldata.net.uy) has joined #haskell
2015-08-27 13:45:51	hodapp	Sindriav_: You can do some computations within the type system... or you can use Template Haskell to just do them in Haskell, at compile time. What are you trying to do?
2015-08-27 13:46:12	tommd	GLM: Galois.
2015-08-27 13:46:39	hodapp	tommd: ah, yes, Pat Hickey told me I should apply there and I've been putting that off.
2015-08-27 13:46:42	GLM	tommd:I figured as much. I've been chatting with someone there. It sounds like an amazing place to be
2015-08-27 13:47:00	hodapp	because of all those irritating life things
2015-08-27 13:47:05	<--	burdges (~burdges@160.197-225-89.dsl.completel.net) has quit (Ping timeout: 255 seconds)
2015-08-27 13:47:09	<--	dmag_ (~damian@host86-162-252-220.range86-162.btcentralplus.com) has quit (Ping timeout: 246 seconds)
2015-08-27 13:47:16	Sindriav_	hodapp: Well, other than asking in general, I'm looking to have a compile-time resolved Map
2015-08-27 13:47:31	-->	clahey (clahey@nat/google/x-lqgcwqsudecrmdlw) has joined #haskell
2015-08-27 13:47:33	Sindriav_	hodapp: Though that might not be desirable / idiomatic in haskell
2015-08-27 13:47:36	hodapp	Sindriav_: What sort of map, and why?
2015-08-27 13:47:49	clahey	Hey all. I'm thinking of making a library of operators for Monadic value work.
2015-08-27 13:47:58	Sindriav_	hodapp: Specifically, I'm working on an emoji library, that converts strings like ":this:" into unicode
2015-08-27 13:48:08	-->	catgocat (~catgocat@93.102.73.228.rev.optimus.pt) has joined #haskell
2015-08-27 13:48:09	-->	jeltsch (~wolfgang@82.131.66.93.cable.starman.ee) has joined #haskell
2015-08-27 13:48:18	Sindriav_	hodapp: Which lends itself to a `Map String Char`
2015-08-27 13:48:22	catgocat	Can anyone help me or give tips on improving this: lpaste.net/139746
2015-08-27 13:48:52	<--	zariuq (~zar@214.233.164.82.customer.cdi.no) has quit (Remote host closed the connection)
2015-08-27 13:48:55	clahey	Specifically things like (+<-) :: Num a, Monad m => a -> m a -> m a        a +<- b = liftM (+) (return a) b
2015-08-27 13:49:06	clahey	Does such a library already exist?
2015-08-27 13:49:08	<--	cads (~M@104-9-5-196.lightspeed.tukrga.sbcglobal.net) has quit (Quit: Leaving.)
2015-08-27 13:49:25	johnw	liftM (+) (return a) b = liftM (a +) b
2015-08-27 13:49:34	Sindriav_	clahey: That seems kinda redundant O.o
2015-08-27 13:49:36	-->	Epowerj (~Epowerj@206.21.121.109) has joined #haskell
2015-08-27 13:49:40	-->	meoblast001 (~meoblast@cable-86-56-47-226.cust.telecolumbus.net) has joined #haskell
2015-08-27 13:49:51	clahey	Sindriav_: Tons of things are redundant.
2015-08-27 13:49:53	catgocat	Can anyone help me or give tips on improving this: lpaste.net/139746
2015-08-27 13:49:55	catgocat	dsa
2015-08-27 13:50:03	catgocat	
2015-08-27 13:50:06	<--	catgocat (~catgocat@93.102.73.228.rev.optimus.pt) has quit (Client Quit)
2015-08-27 13:50:10	<--	CMCDragonkai (~nobody@ec2-52-8-178-236.us-west-1.compute.amazonaws.com) has left #haskell
2015-08-27 13:50:12	Sindriav_	clahey: Tons of things are also useless. What would the use-case for this be?
2015-08-27 13:50:17	-->	CMCDragonkai (~nobody@ec2-52-8-178-236.us-west-1.compute.amazonaws.com) has joined #haskell
2015-08-27 13:50:25	-->	catgocat (5d6649e4@gateway/web/freenode/ip.93.102.73.228) has joined #haskell
2015-08-27 13:50:31	clahey	Sindriav_: Writing procedural code.
2015-08-27 13:50:32	catgocat	sorry my internet connection is bad
2015-08-27 13:50:34	catgocat	http://lpaste.net/139746
2015-08-27 13:50:39	catgocat	any tips ^ ?
2015-08-27 13:50:50	ReinH	catgocat: >>= return . f is just fmap f
2015-08-27 13:50:56	-->	alanb99 (~alan@2.218.205.174) has joined #haskell
2015-08-27 13:51:01	catgocat	lemme see
2015-08-27 13:51:02	-->	filmackay (~filmackay@176-227-134-124.ip.skylogicnet.com) has joined #haskell
2015-08-27 13:51:25	kristof	Hi, I'm trying to understand applicatives in the context of languages that do not have any currying.
2015-08-27 13:51:38	kristof	Is there anything I can read that can help me in this pursuit?
2015-08-27 13:51:42	arkeet	:t liftA2
2015-08-27 13:51:43	lambdabot	Applicative f => (a -> b -> c) -> f a -> f b -> f c
2015-08-27 13:51:52	arkeet	just uncurry this stuff.
2015-08-27 13:52:00	arkeet	((a,b) -> c) -> (f a,f b) -> f c
2015-08-27 13:52:30	catgocat	ReinH doesn't work here
2015-08-27 13:52:31	clahey	Sindriav_: So no such library exists. :)
2015-08-27 13:52:43	Sindriav_	:t fmap uncurry $ uncurry liftA2
2015-08-27 13:52:44	lambdabot	(a -> b1 -> c, b -> a) -> (b -> b1, b) -> c
2015-08-27 13:52:50	kristof	arkeet: Right, but I still have to compose and sequence the effects manually, correct?
2015-08-27 13:52:51	Sindriav_	wooh
2015-08-27 13:53:01	<--	KarolisK (~karolis@78-60-68-107.static.zebra.lt) has quit (Quit: Konversation terminated!)
2015-08-27 13:53:01	johnw	dot files are rather handy for debugging register allocations in program graphs: http://dl.dropbox.com/u/137615/IRgraph.png
2015-08-27 13:53:38	<--	Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Remote host closed the connection)
2015-08-27 13:53:44	arkeet	:t uncurry . liftA2 . curry
2015-08-27 13:53:46	lambdabot	Applicative f => ((a, b) -> c) -> (f a, f b) -> f c
2015-08-27 13:53:46	kristof	arkeet: Actually writing liftA3, liftA4, liftA5 is painful business without <*>
2015-08-27 13:53:54	arkeet	sure
2015-08-27 13:53:56	catgocat	ReinH oh I got what you mean
2015-08-27 13:53:56	-->	burdges (~burdges@160.197-225-89.dsl.completel.net) has joined #haskell
2015-08-27 13:53:58	Sindriav_	clahey: Tons of libraries don't exist, many of them for good reasons. This sounds like noise, to be honest. Unless it becomes very widespread (which would take time at the least), it's going to introduce pretty obscure syntax IMO.
2015-08-27 13:54:05	clahey	catgocat: What didn't work?
2015-08-27 13:54:10	clahey	Oh, you got it.
2015-08-27 13:54:31	lpaste_	aweinstock pasted “geomList quickcheck generator” at http://lpaste.net/139749
2015-08-27 13:54:32	<--	icosa (~Thunderbi@14.139.94.215) has quit (Read error: Connection reset by peer)
2015-08-27 13:54:34	Sindriav_	clahey: +<- doesn't really anything similar to `←`, does it?
2015-08-27 13:54:53	clahey	I tried +<< but it was really unpleasant.
2015-08-27 13:55:00	clahey	I suppose it really doesn't though.
2015-08-27 13:55:04	hodapp	Sindriav_: well, the singletons library can lift many things into type-level, but I'm not sure if maps are one...
2015-08-27 13:55:21	arkeet	just write (a +) <$> b and be done with it.
2015-08-27 13:55:22	clahey	Well, actually, it kind of does something similar to <- in list comprehension.
2015-08-27 13:55:42	aweinstock	ouanixi: I added a main that does a histogram of the lengths of the produces values, and empirically it seems to be doing the right thing (each list size occuring half as frequently as the next smallest)
2015-08-27 13:55:55	Sindriav_	hodapp: I suppose if I just defined a function for *many* different arguments and mark it inlinable, it would get resolved at compile time, right?
2015-08-27 13:55:55	clahey	arkeet: How do you write ->+<-?
2015-08-27 13:55:59	aweinstock	s/produces/produced/
2015-08-27 13:56:00	arkeet	what's that?
2015-08-27 13:56:09	<--	lwm (~lwm@95.91.209.251) has quit (Quit: leaving)
2015-08-27 13:56:11	arkeet	:t liftA2 (+)
2015-08-27 13:56:11	clahey	arkeet: liftM (+)
2015-08-27 13:56:12	lambdabot	(Num c, Applicative f) => f c -> f c -> f c
2015-08-27 13:56:20	clahey	Or, right liftA2.
2015-08-27 13:56:20	catgocat	what can I improve more?
2015-08-27 13:56:24	<--	erikd (~erikd@184.70.136.106) has quit (Ping timeout: 246 seconds)
2015-08-27 13:56:28	catgocat	clahey
2015-08-27 13:56:29	arkeet	or something like (+) <$> a <*> b
2015-08-27 13:56:31	clahey	arkeet: But that isn't inlineable.
2015-08-27 13:56:35	arkeet	what?
2015-08-27 13:56:35	<--	gothicsouth (~gothicsou@cpe-76-177-66-223.natcky.res.rr.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-27 13:56:38	-->	nh2 (~niklas@212-51-139-50.fiber7.init7.net) has joined #haskell
2015-08-27 13:56:47	Sindriav_	> length "liftA2 (+)" / length "->+<-"
2015-08-27 13:56:48	clahey	I mean you can't use that as an infix operator.
2015-08-27 13:56:49	lambdabot	     No instance for (Fractional Int) arising from a use of ‘/’
2015-08-27 13:56:49	lambdabot	     In the expression: length "liftA2 (+)" / length "->+<-"
2015-08-27 13:56:53	hodapp	Sindriav_: You could use something like a type family to map a type-level symbol, I suppose
2015-08-27 13:57:01	hodapp	Sindriav_: I'm just not sure what the point is
2015-08-27 13:57:09	arkeet	I'm not sure what the point is.
2015-08-27 13:57:12	<--	P1RATEZ (piratez@unaffiliated/p1ratez) has quit (Quit: http://www.oo-software.com/en/shutup10)
2015-08-27 13:57:18	Sindriav_	> fromIntegral (length "liftA2 (+)") / fromIntegral (length "->+<-")
2015-08-27 13:57:20	lambdabot	 2.0
2015-08-27 13:57:27	clahey	It's not about being shorter. It just looks more readable.
2015-08-27 13:57:44	arkeet	it's more mental effort to remember more things.
2015-08-27 13:57:45	Sindriav_	clahey: To you? Might do. To anyone else? Might not be the case.
2015-08-27 13:57:52	clahey	That's true.
2015-08-27 13:57:56	arkeet	everyone knows what liftA2 and (+) do.
2015-08-27 13:58:00	aweinstock	why isn't (pure 1 `liftA2(+)` pure 2) a thing?
2015-08-27 13:58:01	<--	Ven (~textual@62-2-219-218.static.cablecom.ch) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-08-27 13:58:03	clahey	Hahaha.
2015-08-27 13:58:14	clahey	Everyone is a large stretch. :)
2015-08-27 13:58:15	<--	strburst (~allen@lawn-128-61-26-37.lawn.gatech.edu) has quit (Ping timeout: 252 seconds)
2015-08-27 13:58:31	kristof	> pure 1 `liftA2(+)` $ pure 2
2015-08-27 13:58:33	lambdabot	 <hint>:1:15: parse error on input ‘(’
2015-08-27 13:58:35	Sindriav_	"Everyone for certain values of everyone."
2015-08-27 13:58:36	aweinstock	(i.e. arbitrary expressions inside infix-ticks)
2015-08-27 13:58:39	arkeet	everyone ought to know.
2015-08-27 13:58:42	<--	arjanb (8259a911@gateway/web/freenode/ip.130.89.169.17) has quit (Quit: .)
2015-08-27 13:59:23	clahey	An example I wrote in a program I was using to test this was: ('\n' :<- liftM spaces (use indent ->+ 1) ->++ [input])
2015-08-27 13:59:39	arkeet	what does that do?
2015-08-27 13:59:39	Pokinawa	Hey guys, I am thinking of picking up haskell to learn (xmonad got me into it). Just wondering if a book would be better or if there are web resources around?
2015-08-27 13:59:48	kristof	> let plusA2 = liftA2 +; pure 1 `plusA2` $ pure 200
2015-08-27 13:59:50	lambdabot	 <hint>:1:22: parse error on input ‘;’
2015-08-27 14:00:04	kristof	Oh, that needed to be (+) huh
2015-08-27 14:00:06	Sindriav_	arkeet + 1, I really can't be bothered to read that :D
2015-08-27 14:00:16	<--	filmackay (~filmackay@176-227-134-124.ip.skylogicnet.com) has quit (Remote host closed the connection)
2015-08-27 14:00:17	kristof	> let plusA2 = liftA2 (+) ; pure 1 `plusA2` $ pure 200
2015-08-27 14:00:21	lambdabot	 <hint>:1:43:
2015-08-27 14:00:21	lambdabot	     parse error on input ‘$’
2015-08-27 14:00:21	lambdabot	     Perhaps you intended to use TemplateHaskell
2015-08-27 14:00:23	joobus	Pokinawa: I've been doing that the last 8 months.  book.realworldhaskell.org is a decent starting place.
2015-08-27 14:00:28	kristof	Not going to try anymore.
2015-08-27 14:00:32	<--	Epowerj (~Epowerj@206.21.121.109) has quit (Ping timeout: 250 seconds)
2015-08-27 14:00:35	aweinstock	> let plusA2 = liftA2 (+) ; pure 1 `plusA2` pure 200
2015-08-27 14:00:38	lambdabot	 <hint>:1:51:
2015-08-27 14:00:39	lambdabot	     parse error (possibly incorrect indentation or mismatched brackets)
2015-08-27 14:00:42	Pokinawa	joobus: Thank you!
2015-08-27 14:00:44	aweinstock	> let plusA2 = liftA2 (+) in pure 1 `plusA2` pure 200
2015-08-27 14:00:49	lambdabot	     No instance for (Show (f0 c0))
2015-08-27 14:00:49	lambdabot	       arising from
2015-08-27 14:00:49	Pokinawa	joobus: I'll check it out :)
2015-08-27 14:00:51	arkeet	I was waiting for that.
2015-08-27 14:00:55	aweinstock	> let plusA2 = liftA2 (+) in pure 1 `plusA2` pure 200 :: [Int]
2015-08-27 14:00:57	lambdabot	 [201]
2015-08-27 14:01:01	clahey	It does: fmap ((++ [input]).('\n' :).spaces.(+1)) (use indent)
2015-08-27 14:01:03	Sindriav_	clahey: The point is, that you have to be *really* careful when writing new operators.
2015-08-27 14:01:06	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-27 14:01:45	<--	alanb99 (~alan@2.218.205.174) has quit (Quit: Leaving.)
2015-08-27 14:01:50	kristof	aweinstock: I think using a let binding is a lot better than just letting everyone willy-nilly return closures in between `
2015-08-27 14:01:50	<--	jamiely (8f702004@gateway/web/freenode/ip.143.112.32.4) has quit (Ping timeout: 246 seconds)
2015-08-27 14:01:52	clahey	Cool. I am happy to listen to any advice on the concept. I will even listen to "don't do it", but I doubt I will listen to that bit.
2015-08-27 14:01:59	<--	thedodd (~thedodd@23.253.242.125) has quit
2015-08-27 14:02:03	clahey	I mean, I doubt I will obey that bit.
2015-08-27 14:02:14	Hijiri	@where learnhaskell
2015-08-27 14:02:14	lambdabot	https://github.com/bitemyapp/learnhaskell
2015-08-27 14:02:17	Hijiri	^Pokinawa
2015-08-27 14:02:19	arkeet	then I hope I don't have to read your code.
2015-08-27 14:02:20	arkeet	:-)
2015-08-27 14:02:32	clahey	So, is there a more readable way to write the bit I just shared?
2015-08-27 14:02:34	<--	fabianvf (~fabianvf@216.30.185.217) has quit (Remote host closed the connection)
2015-08-27 14:02:47	Pokinawa	Hijiri: sweet! cheers.
2015-08-27 14:03:06	aweinstock	kristof: (liftA2 (+) (pure 1) (pure 2)) has more parens than (pure 1 `liftA2 (+)` pure2)
2015-08-27 14:03:18	arkeet	I would honestly just fmap a lambda in that particular case.
2015-08-27 14:03:22	<--	stef204 (~stef204@unaffiliated/stef-204/x-384198) has left #haskell ("WeeChat 1.3")
2015-08-27 14:03:24	<--	GLM (a1b5fd14@gateway/web/cgi-irc/kiwiirc.com/ip.161.181.253.20) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-08-27 14:03:45	aweinstock	kristof: and parens scare people from lisp, so we should obviously improve backticks so as to welcome newcomes to haskell! ;)
2015-08-27 14:03:57	<--	laar (~lars@ip60-210-173-82.adsl2.static.versatel.nl) has quit (Remote host closed the connection)
2015-08-27 14:03:58	clahey	fmap (indentValue -> '\n' : spaces indentValue ++ [input]) (use indent)
2015-08-27 14:04:01	clahey	Interesting.
2015-08-27 14:04:03	arkeet	mhm
2015-08-27 14:04:12	aweinstock	s/newcomes/newcomers/
2015-08-27 14:04:15	bitemyapp	I want backticks, but for parenthetical commentary in vocalized conversation.
2015-08-27 14:04:20	clahey	I missed a backslash, but yeah.
2015-08-27 14:04:33	arkeet	I'd probably use a shorter variable name but yes.
2015-08-27 14:04:50	kristof	aweinstock: still: no thank you.
2015-08-27 14:04:51	<--	skeet70_ (~skeet70@inet-hqmc08-o.oracle.com) has quit (Remote host closed the connection)
2015-08-27 14:04:51	aweinstock	bitemyapp: could you elaborate?
2015-08-27 14:04:56	-->	enaqx (~enaqx@188.163.69.11) has joined #haskell
2015-08-27 14:04:57	clahey	fmap (\i -> '\n' : space (i + 1) ++ [input]) (use indent)
2015-08-27 14:05:00	clahey	Interesting.
2015-08-27 14:05:09	clahey	Probably liftM instead of fmap, but that's neither here nor there.
2015-08-27 14:05:14	<--	daishi (~me@ool-18bd77e0.dyn.optonline.net) has quit (Remote host closed the connection)
2015-08-27 14:05:27	<--	obb (~user@HSI-KBW-085-216-105-176.hsi.kabelbw.de) has quit (Quit: Leaving)
2015-08-27 14:05:32	Sindriav_	You could even do ` flip fmap (use indent) $ \val ->  '\n' : spaces val ++ pure input `,  but that's kinda stretching it
2015-08-27 14:05:35	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Ping timeout: 265 seconds)
2015-08-27 14:05:35	<--	kognate (kognate@nat/ibm/x-rvpirujcyzfqeacl) has quit (Remote host closed the connection)
2015-08-27 14:05:42	quchen	liftM has a single use case left, namely in "fmap = liftM".
2015-08-27 14:05:46	arkeet	about fmap vs liftM, I can only think of one case where one might use liftM.
2015-08-27 14:05:48	arkeet	which is that.
2015-08-27 14:05:55	arkeet	(defining a Functor instance in terms of a Monad instance)
2015-08-27 14:06:04	<--	dgpratt (~dpratt71@207.182.200.34) has quit (Ping timeout: 265 seconds)
2015-08-27 14:06:08	-->	kognate (kognate@nat/ibm/x-pqnjbmpvwlqvdvse) has joined #haskell
2015-08-27 14:06:24	<--	mkusher (~mkusher@93.170.184.174) has quit (Ping timeout: 246 seconds)
2015-08-27 14:06:26	quchen	Well, 7.10 is still somewhat new, so there's room for compatibility liftMs I guess.
2015-08-27 14:07:19	catgocat	@pl getFilesTree path = getDirectoryContents path >>= mapM dirOrFile . filter (`notElem` [".", ".."])
2015-08-27 14:07:20	lambdabot	getFilesTree = (mapM dirOrFile . filter (`notElem` [".", ".."]) =<<) . getDirectoryContents
2015-08-27 14:07:41	<--	Yuras (~Yuras@37.44.118.15) has quit (Read error: Connection reset by peer)
2015-08-27 14:08:53	-->	filmacka_ (~filmackay@host109-154-139-13.range109-154.btcentralplus.com) has joined #haskell
2015-08-27 14:09:11	--	Guest56321 is now known as paul0
2015-08-27 14:09:32	<--	filmacka_ (~filmackay@host109-154-139-13.range109-154.btcentralplus.com) has quit (Read error: Connection reset by peer)
2015-08-27 14:09:45	<--	clrnd (~alvarez@190.104.195.2) has quit (Quit: leaving)
2015-08-27 14:09:57	-->	Jeanne-Kamikaze (~Jeanne-Ka@184.Red-88-9-37.dynamicIP.rima-tde.net) has joined #haskell
2015-08-27 14:10:24	<--	hmrm (~hmrm@173-29-150-72.client.mchsi.com) has quit (Ping timeout: 246 seconds)
2015-08-27 14:10:37	-->	filmacka_ (~filmackay@host109-154-139-13.range109-154.btcentralplus.com) has joined #haskell
2015-08-27 14:10:38	<--	kognate (kognate@nat/ibm/x-pqnjbmpvwlqvdvse) has quit (Ping timeout: 264 seconds)
2015-08-27 14:10:42	<--	splodingsocks (~textual@63.90.74.129) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-27 14:10:53	<--	frerich (~frerich@kde/raabe) has quit (Remote host closed the connection)
2015-08-27 14:11:07	-->	superturrican (~chatzilla@61.207.4.85.dynamic.wline.res.cust.swisscom.ch) has joined #haskell
2015-08-27 14:11:52	<--	enaqx (~enaqx@188.163.69.11) has quit (Ping timeout: 265 seconds)
2015-08-27 14:12:04	<--	augur (~augur@c-73-46-94-9.hsd1.fl.comcast.net) has quit (Ping timeout: 260 seconds)
2015-08-27 14:12:54	-->	hmrm (~hmrm@173-29-150-72.client.mchsi.com) has joined #haskell
2015-08-27 14:13:33	<--	pantsman- (~pantsman@cpc12-haye16-2-0-cust45.haye.cable.virginm.net) has quit (Ping timeout: 246 seconds)
2015-08-27 14:13:34	<--	filmacka_ (~filmackay@host109-154-139-13.range109-154.btcentralplus.com) has quit (Read error: Connection reset by peer)
2015-08-27 14:14:05	-->	filmackay (~filmackay@176-227-134-124.ip.skylogicnet.com) has joined #haskell
2015-08-27 14:14:15	<--	Gurkenglas (~Gurkengla@p5490C12E.dip0.t-ipconnect.de) has quit (Ping timeout: 246 seconds)
2015-08-27 14:14:37	quchen	There is some way to annotate a tree (e.g. an AST with position information) using something related to the finally tagless approach. Does anyone have a reference for that? I only remember vague details. It's somehow possible to combine the tagless approach with Fix to build a generically traversable syntax tree or something along those lines.
2015-08-27 14:14:41	quchen	Ring a bell for anyone?
2015-08-27 14:14:54	quchen	I've got a problem my gut tells me asks for this. :-)
2015-08-27 14:15:53	-->	conal (~textual@50.242.71.57) has joined #haskell
2015-08-27 14:16:16	aweinstock	quchen: http://brianmckenna.org/blog/type_annotation_cofree ?
2015-08-27 14:16:19	bitemyapp	quchen: I don't know about finally tag---dammit.
2015-08-27 14:16:22	bitemyapp	aweinstock: beat me to it.
2015-08-27 14:16:35	<--	danvet (~daniel@2a02:168:56c9:0:22cf:30ff:fe4c:37d6) has quit (Ping timeout: 252 seconds)
2015-08-27 14:16:48	<--	jeadre (~jeadre@li1421-113.members.linode.com) has quit (Remote host closed the connection)
2015-08-27 14:16:53	aweinstock	I had just read that for the first time today, and still had the tab open :)
2015-08-27 14:16:55	bitemyapp	quchen: if you want straight-up tree representation, then you may just want finally tagless.
2015-08-27 14:17:21	bitemyapp	quchen: another search term "HOAS"
2015-08-27 14:17:36	<--	zhulikas (~zhulikas@2001:41d0:52:cff::3e0) has quit (Ping timeout: 246 seconds)
2015-08-27 14:17:50	-->	GLM (a1b5fd14@gateway/web/cgi-irc/kiwiirc.com/ip.161.181.253.20) has joined #haskell
2015-08-27 14:18:03	<--	burdges (~burdges@160.197-225-89.dsl.completel.net) has quit (Ping timeout: 252 seconds)
2015-08-27 14:18:16	quchen	aweinstock, bitemyapp: Thanks for the pointers!
2015-08-27 14:18:44	-->	jeadre (~jeadre@li1421-113.members.linode.com) has joined #haskell
2015-08-27 14:19:00	-->	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has joined #haskell
2015-08-27 14:19:06	quchen	My use case would be an annotated AST I'd like to perform things like transformations on. This is fairly easy (via patterns) on an unannotated (ordinary ADT) tree, but the tag gets in the way.
2015-08-27 14:19:10	-->	agocorona (547fb55c@gateway/web/freenode/ip.84.127.181.92) has joined #haskell
2015-08-27 14:19:15	-->	enaqx (~enaqx@188.163.69.11) has joined #haskell
2015-08-27 14:19:22	-->	dgpratt (~dpratt71@pool-72-65-100-156.ptldme.east.myfairpoint.net) has joined #haskell
2015-08-27 14:19:28	quchen	I can add an annotation to every field, but that's not very maintainable.
2015-08-27 14:19:33	-->	atondwal (~atondwal@199.111.59.199) has joined #haskell
2015-08-27 14:19:42	quchen	That train of thought leads to things like finally tagless, so that's where I had that idea from.
2015-08-27 14:19:49	clahey	@help
2015-08-27 14:19:50	lambdabot	help <command>. Ask for help for <command>. Try 'list' for all commands
2015-08-27 14:19:59	quchen	And a colleague keeps mentioning pairing it with Fix f = …
2015-08-27 14:20:02	<--	shiv_ (uid67486@gateway/web/irccloud.com/x-nrgnsfdnfrwlqunk) has quit (Quit: Connection closed for inactivity)
2015-08-27 14:20:56	<--	unclechu (~unclechu@188.162.166.20) has quit (Quit: Leaving.)
2015-08-27 14:21:05	ReinH	catgocat: The version that works is the one that I meant ;)
2015-08-27 14:21:06	-->	cads (~M@104-9-5-196.lightspeed.tukrga.sbcglobal.net) has joined #haskell
2015-08-27 14:21:14	-->	Ayey_ (~rune@0135301590.0.fullrate.dk) has joined #haskell
2015-08-27 14:21:19	ReinH	quchen: Everything eventually leads to finally tagless ;)
2015-08-27 14:21:31	quchen	ReinH: :-þ
2015-08-27 14:21:45	ReinH	quchen: That's a category theory joke quchen. I spent a lot of time researching it.
2015-08-27 14:21:56	quchen	Oh, then I didn't get the joke.
2015-08-27 14:21:59	ReinH	finally.
2015-08-27 14:22:09	quchen	I didn't get that one either.
2015-08-27 14:22:09	-->	splodingsocks (~textual@63.90.74.129) has joined #haskell
2015-08-27 14:22:12	clahey	@djinn Monad m => (a -> b -> m c) -> a -> m b -> m c
2015-08-27 14:22:12	lambdabot	-- f cannot be realized.
2015-08-27 14:28:56	--	irc: disconnected from server
2015-08-27 14:29:27	-->	RouxTheDay (~RouxTheDa@199.21.87.214) has joined #haskell
2015-08-27 14:29:27	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-27 14:29:27	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-27 14:29:27	--	Channel #haskell: 1519 nicks (1 op, 0 voices, 1518 normals)
2015-08-27 14:29:27	--	URL for #haskell: http://www.haskell.org/
2015-08-27 14:29:28	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-27 14:29:30	<--	mgallo (~mgallo@78-134-79-171.v4.ngi.it) has quit (Quit: leaving)
2015-08-27 14:29:40	bitemyapp	ReinH: rails benefits from there being a massive collection of "$THING_IN_RAILS" projects on Github.
2015-08-27 14:45:08	--	irc: disconnected from server
2015-08-27 14:45:35	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-27 14:45:35	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-27 14:45:35	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-27 14:45:36	--	Channel #haskell: 1504 nicks (1 op, 0 voices, 1503 normals)
2015-08-27 14:45:36	--	URL for #haskell: http://www.haskell.org/
2015-08-27 14:45:36	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-27 14:45:37	Sindriav_	Maybe even use TemplateHaskell eventually to do something like "foo :: FilePath -> Options -> CLI ()" -> "foo FILE [options]"
2015-08-27 14:45:54	agocorona	pure code also can be parallelized, but it is not used very much
2015-08-27 14:46:00	Cale	GLM: There's an analogy to fast food restaurants I don't completely hate: Parallelism is like having multiple people working behind the counter to serve customers more quickly. Concurrency is like having multiple queues for customers to wait in, so that more than one customer can be served at the same time (even if there's just one guy behind the counter running around to make everything).
2015-08-27 14:46:24	Cale	GLM: You can combine the two things, but they're not really the same :)
2015-08-27 14:46:38	GLM	Cale:That makes a bit more sense. I'll be sure to read the book though in my free tiem
2015-08-27 14:46:52	<--	filmack__ (~filmackay@host109-154-139-13.range109-154.btcentralplus.com) has quit (Ping timeout: 240 seconds)
2015-08-27 14:47:42	Cale	GLM: There's a primitive called par for very simple parallelism in Haskell. Evaluating  par x y  will cause x to be put in a queue of expressions to be evaluated on some processor (if there's time available before it's needed), before resulting in y
2015-08-27 14:48:27	<--	eatsfoobars (~eatsfooba@ppp-94-69-105-96.home.otenet.gr) has quit
2015-08-27 14:48:44	GLM	Any other books I should read beyond LYAH?
2015-08-27 14:48:52	-->	conal (~textual@50.242.71.57) has joined #haskell
2015-08-27 14:49:07	-->	abraham_tark (~abraham_t@81.36.43.5.rev.vodafone.pt) has joined #haskell
2015-08-27 14:49:08	Cale	GLM: A lot of people recommend http://www.seas.upenn.edu/~cis194/fall14/spring13/lectures.html
2015-08-27 14:49:15	Sindriav_	@where real world haskell
2015-08-27 14:49:15	lambdabot	http://book.realworldhaskell.org/read/ <-- the comprehensive xmonad configuration syntax reference
2015-08-27 14:49:20	<--	bamboo (~bamboo@179.98.108.195) has quit (Quit: bamboo)
2015-08-27 14:49:25	Sindriav_	:D
2015-08-27 14:49:31	agocorona	the simon Marlow bible of concurrent programming
2015-08-27 14:49:48	-->	stef204 (~stef204@unaffiliated/stef-204/x-384198) has joined #haskell
2015-08-27 14:50:04	agocorona	http://chimera.labs.oreilly.com/books/1230000000929
2015-08-27 14:50:05	Cale	lol, xmonad configuration syntax reference
2015-08-27 14:50:13	<--	filmackay (~filmackay@176-227-134-124.ip.skylogicnet.com) has quit
2015-08-27 14:50:16	Cale	Who put that there? :D
2015-08-27 14:50:17	-->	zipper (~luv_panda@unaffiliated/zipper) has joined #haskell
2015-08-27 14:51:46	<--	atondwal (~atondwal@199.111.59.199) has quit (Quit: WeeChat 1.2)
2015-08-27 14:51:51	<--	Luke (~luke@unaffiliated/luke) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-27 14:52:06	<--	Freefood (~freefood@109.128.200.8) has quit (Remote host closed the connection)
2015-08-27 14:52:17	<--	itsu (~user@modemcable009.244-161-184.mc.videotron.ca) has quit (Remote host closed the connection)
2015-08-27 14:52:17	geekosaur	o.O
2015-08-27 14:52:58	arkeet	haha
2015-08-27 14:53:07	bitemyapp	Cale: lmao
2015-08-27 14:53:15	-->	funfunctor (~edward@CPE-121-211-246-20.hhui7.cht.bigpond.net.au) has joined #haskell
2015-08-27 14:53:38	Sindriav_	sensible_chuckle.png
2015-08-27 14:53:44	-->	emilypi (~emily@2604:2000:e029:3400:8009:cbb3:b7c8:1bb1) has joined #haskell
2015-08-27 14:53:49	GLM	Cale:I already went throught that courses' contact but I appreciate it
2015-08-27 14:54:05	<--	croyd (~croyd@129.10.9.18) has quit (Remote host closed the connection)
2015-08-27 14:54:27	-->	strburst (~allen@lawn-128-61-26-37.lawn.gatech.edu) has joined #haskell
2015-08-27 14:54:41	-->	popsi__ (~popsi@cable-24-135-197-234.dynamic.sbb.rs) has joined #haskell
2015-08-27 14:55:01	<--	vyorkin (~vyorkin@185.79.100.73) has quit (Ping timeout: 260 seconds)
2015-08-27 14:55:10	<--	stef204 (~stef204@unaffiliated/stef-204/x-384198) has quit (Quit: WeeChat 1.3)
2015-08-27 14:55:57	<--	ulfdoz (~mary@2.165.81.50) has quit (Ping timeout: 260 seconds)
2015-08-27 14:56:16	<--	kristof (~kristof@unaffiliated/kristof) has quit (Ping timeout: 244 seconds)
2015-08-27 14:56:50	-->	CuddlyBacon (~CuddlyBac@nat-198-95-226-236.netapp.com) has joined #haskell
2015-08-27 14:57:54	<--	taira (~quassel@taira-comp.kvi.sgsnet.se) has quit (Read error: Connection reset by peer)
2015-08-27 14:59:43	<--	jgertm (~amontimur@46.128.43.80.dynamic.cablesurf.de) has quit (Ping timeout: 265 seconds)
2015-08-27 15:00:05	<--	jfischoff (~jonathanf@skedgeme103.s.subnet.rcn.com) has quit (Quit: jfischoff)
2015-08-27 15:00:17	<--	nshepperd (~nshepperd@ppp118-209-2-228.lns20.mel4.internode.on.net) has quit (Ping timeout: 260 seconds)
2015-08-27 15:00:23	<--	jomg (~jomg@ip5f5ad5bc.dynamic.kabel-deutschland.de) has quit (Quit: Leaving)
2015-08-27 15:01:12	-->	burdges (~burdges@160.197-225-89.dsl.completel.net) has joined #haskell
2015-08-27 15:01:22	-->	migimunz (~migimunz@79-101-241-66.dynamic.isp.telekom.rs) has joined #haskell
2015-08-27 15:01:24	<--	nkaretnikov (~nikita@unaffiliated/nkar) has quit (Ping timeout: 244 seconds)
2015-08-27 15:01:39	<--	FireFly (~firefly@oftn/member/FireFly) has quit (Ping timeout: 265 seconds)
2015-08-27 15:01:47	<--	biglama (~Day_dream@fon75-2-78-192-179-102.fbxo.proxad.net) has quit (Remote host closed the connection)
2015-08-27 15:01:50	-->	h-core (~me@ool-18bd77e0.dyn.optonline.net) has joined #haskell
2015-08-27 15:01:53	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-27 15:02:05	<--	dan_f (~dan@wireless-165-124-144-197.nuwlan.northwestern.edu) has quit (Quit: dan_f)
2015-08-27 15:02:54	-->	Polarina (~polarina@wesnoth/translator/Polarina) has joined #haskell
2015-08-27 15:22:58	--	irc: disconnected from server
2015-08-27 15:23:26	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-27 15:23:26	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-27 15:23:26	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-27 15:23:26	--	Channel #haskell: 1488 nicks (1 op, 0 voices, 1487 normals)
2015-08-27 15:23:26	--	URL for #haskell: http://www.haskell.org/
2015-08-27 15:23:26	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-27 15:23:26	Welkin	wow, I never knew you were in Kenya
2015-08-27 15:23:30	-->	hmrm (~hmrm@173-29-150-72.client.mchsi.com) has joined #haskell
2015-08-27 15:23:39	--	mudphone` is now known as mudphone
2015-08-27 16:23:43	--	irc: disconnected from server
2015-08-27 16:24:12	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-27 16:24:12	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-27 16:24:12	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-27 16:24:12	--	Channel #haskell: 1472 nicks (1 op, 0 voices, 1471 normals)
2015-08-27 16:24:12	--	URL for #haskell: http://www.haskell.org/
2015-08-27 16:24:12	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-27 18:43:52	--	irc: disconnected from server
2015-08-27 18:44:19	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-27 18:44:19	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-27 18:44:19	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-27 18:44:19	--	Channel #haskell: 1445 nicks (1 op, 0 voices, 1444 normals)
2015-08-27 18:44:19	--	URL for #haskell: http://www.haskell.org/
2015-08-27 18:44:19	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-27 18:44:35	<--	ap01 (~anshu@ool-457c0ba3.dyn.optonline.net) has quit (Ping timeout: 244 seconds)
2015-08-27 18:57:52	--	irc: disconnected from server
2015-08-27 18:58:16	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-27 18:58:16	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-27 18:58:16	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-27 18:58:16	--	Channel #haskell: 1455 nicks (1 op, 0 voices, 1454 normals)
2015-08-27 18:58:16	--	URL for #haskell: http://www.haskell.org/
2015-08-27 18:58:16	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-27 18:59:56	<--	pleasework (~pleasewor@c-69-249-1-50.hsd1.pa.comcast.net) has quit (Remote host closed the connection)
2015-08-27 18:59:56	<--	mmhat (~mmh@p5DDE5FD9.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.3)
2015-08-27 19:00:04	jaconwil	there are 18650 with nominal voltage 3.2V called LiFePO4, and 18650 with nominal voltage 3.7V called ...?
2015-08-27 19:00:30	-->	hucksy (~hucksy@p549FDB0E.dip0.t-ipconnect.de) has joined #haskell
2015-08-27 19:00:31	<--	splodingsocks (~textual@c-67-177-26-139.hsd1.ut.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-27 19:47:53	--	irc: disconnected from server
2015-08-27 19:48:19	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-27 19:48:19	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-27 19:48:19	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-27 19:48:20	--	Channel #haskell: 1449 nicks (1 op, 0 voices, 1448 normals)
2015-08-27 19:48:20	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-27 20:00:21	--	irc: disconnected from server
2015-08-27 20:39:28	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:9531:7479:21fd:176c) has joined #haskell
2015-08-27 20:39:28	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-27 20:39:28	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-27 20:39:28	--	Channel #haskell: 1433 nicks (1 op, 0 voices, 1432 normals)
2015-08-27 20:39:28	--	URL for #haskell: http://www.haskell.org/
2015-08-27 20:39:28	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-27 20:39:31	-->	alem0lars (alem0lars@0xcc.alem0lars.me) has joined #haskell
2015-08-27 20:39:33	glguy_	There's always glirc ;-)
2015-08-27 20:39:46	geekosaur	as I said, I use hexchat. there are lots of others for various platforms, and there are also alternative web clients that know how to connect to freenode
2015-08-27 20:40:02	-->	xacktm (xacktm@unaffiliated/xacktm) has joined #haskell
2015-08-27 20:40:13	-->	psy_ (~psy@43.224.156.117) has joined #haskell
2015-08-27 20:40:28	-->	lucasbrunialti (~lucasbrun@191.248.164.202) has joined #haskell
2015-08-27 20:40:59	-->	darkf (~darkf___@unaffiliated/darkf) has joined #haskell
2015-08-27 20:41:10	<--	Laserbear (~Laserbear@c-73-223-160-142.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2015-08-27 20:41:46	Imagine	ah okay perfect
2015-08-27 20:42:12	felixn	glguy_: do you know how I make it give some useful output? @_@  like if it succeeds or not
2015-08-27 20:42:17	<--	alang (~alang@2a01:4f8:d16:2240::2) has quit (Ping timeout: 256 seconds)
2015-08-27 20:42:33	felixn	the API isn't clicking with me
2015-08-27 20:42:47	-->	tristanp (~tristanp@c-50-159-71-64.hsd1.wa.comcast.net) has joined #haskell
2015-08-27 20:42:49	geekosaur	(irccloud seems to be used a lot, sadly I know it mosty because when it breaks a bunch of people disappear at the same time...)
2015-08-27 20:42:51	<--	horlicks_ (~simon@tickle.compsoc.man.ac.uk) has quit (Ping timeout: 256 seconds)
2015-08-27 20:43:04	<--	kognate (~kognate@pool-71-112-205-52.pitbpa.fios.verizon.net) has quit (Remote host closed the connection)
2015-08-27 20:43:08	geekosaur	(as an alternative web client that is)
2015-08-27 20:43:14	-->	horlicks_ (~simon@tickle.compsoc.man.ac.uk) has joined #haskell
2015-08-27 20:43:27	-->	latermuse (~ron@st0395.nas811.p-hokkaido.nttpc.ne.jp) has joined #haskell
2015-08-27 20:43:51	-->	alang (~alang@2a01:4f8:d16:2240::2) has joined #haskell
2015-08-27 20:44:06	latermuse	Is it possible to use IO inside an instance declaration? I want my show instance to change depending on the current time.
2015-08-27 20:44:12	<--	Imagine (6c3195a6@gateway/web/freenode/ip.108.49.149.166) has quit (Quit: Page closed)
2015-08-27 20:44:28	<--	jle` (~mstksg@unaffiliated/mstksg) has quit (Ping timeout: 244 seconds)
2015-08-27 20:44:41	c_wraith	latermuse: that's not something show can do
2015-08-27 20:45:04	-->	Imagine (~Imagine@pool-108-49-149-166.bstnma.fios.verizon.net) has joined #haskell
2015-08-27 20:45:11	c_wraith	latermuse: in general, show *should* produce something that's valid haskell code.  (Not always possible, but that's the ideal)
2015-08-27 20:45:20	Imagine	okay perfect
2015-08-27 20:45:44	latermuse	is it possible to send a pre-computed function to the show instance and only be used during 'show'?
2015-08-27 20:45:45	-->	codesoup (~codesoup@CPE68b6fcf580d3-CM68b6fcf580d0.cpe.net.cable.rogers.com) has joined #haskell
2015-08-27 20:45:45	<--	wedens (~wedens@unaffiliated/wedens) has quit (Remote host closed the connection)
2015-08-27 20:45:46	glguy_	Felixn: I'll look at your coffee in almost exactly 15 minutes when I'm back at a computer if no one else has helped you first
2015-08-27 20:45:53	felixn	Imagine: make a ShowIO class :D
2015-08-27 20:45:54	-->	Eiam_ (~mine@unaffiliated/eiam) has joined #haskell
2015-08-27 20:45:57	glguy_	Your code*
2015-08-27 20:46:08	Imagine	felixn - I don't think that was for me :)
2015-08-27 20:46:21	-->	u_ (~phillip@grd0963.urh.uiuc.edu) has joined #haskell
2015-08-27 20:46:23	Hijiri	Imagine and latermuse have the same color in my irc client
2015-08-27 20:46:27	Hijiri	so I was confused too for a moment
2015-08-27 20:46:32	latermuse	haha, sorry about that
2015-08-27 20:46:33	felixn	Imagine: meh you're both green on my screen :D  textual needs to step up their color picking algorithm
2015-08-27 20:46:40	c_wraith	Same color is obviously the same person, right?
2015-08-27 20:46:46	latermuse	I dont use colors on my screen
2015-08-27 20:46:47	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-27 20:46:49	<--	noodles1 (~noodles@s178255151130.blix.com) has quit (Ping timeout: 256 seconds)
2015-08-27 20:46:53	felixn	c_wraith: right on dark teal
2015-08-27 20:46:54	Imagine	lol Hijiri has both green and blue, and now felixn has green as well
2015-08-27 20:46:57	c_wraith	I can clearly distinguish 1439 different shades easily. :)
2015-08-27 20:47:14	-->	gentleben (~gentleben@c-98-207-43-107.hsd1.ca.comcast.net) has joined #haskell
2015-08-27 20:47:15	latermuse	c_wraith: how did you come up with that number?
2015-08-27 20:47:18	Imagine	wait just kidding
2015-08-27 20:47:24	<--	redxaxder (~redxaxder@98.200.241.31) has quit (Ping timeout: 250 seconds)
2015-08-27 20:47:24	Imagine	green is because it has my name in it
2015-08-27 20:47:29	c_wraith	latermuse: number of people in the channel when I said it. :)
2015-08-27 20:47:39	latermuse	;D
2015-08-27 20:47:46	<--	Tadgh (~Tadgh@24.6.78.86) has quit (Ping timeout: 260 seconds)
2015-08-27 20:48:12	-->	EvanR (~evan@unaffiliated/evanr) has joined #haskell
2015-08-27 20:48:50	latermuse	I guess ill make a ShowIO class, thanks guys
2015-08-27 20:49:12	-->	XorSwap (~XorSwap@wnpgmb016qw-ds01-214-177.dynamic.mtsallstream.net) has joined #haskell
2015-08-27 20:49:15	<--	u__ (~phillip@grd0160.urh.uiuc.edu) has quit (Ping timeout: 252 seconds)
2015-08-27 20:49:24	latermuse	or maybe just a pretty printer
2015-08-27 20:49:40	arkeet	what do you need a class for?
2015-08-27 20:51:28	-->	samrat (~samrat@123.236.183.215) has joined #haskell
2015-08-27 20:51:35	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 265 seconds)
2015-08-27 20:52:30	<--	EvanR (~evan@unaffiliated/evanr) has quit (Ping timeout: 245 seconds)
2015-08-27 20:52:59	<--	tristanp (~tristanp@c-50-159-71-64.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2015-08-27 20:54:04	<--	jaconwil (~bc8157e4@static-71-174-73-11.bstnma.fios.verizon.net) has quit (Quit: CGI:IRC)
2015-08-27 20:54:06	<--	dgpratt_ (~dpratt71@pool-72-65-111-153.ptldme.east.myfairpoint.net) has quit (Ping timeout: 255 seconds)
2015-08-27 20:54:12	-->	Welkin (~Welkin@rrcs-97-78-71-195.se.biz.rr.com) has joined #haskell
2015-08-27 20:54:13	-->	jaconwil (~bc8157e4@static-71-174-73-11.bstnma.fios.verizon.net) has joined #haskell
2015-08-27 20:55:07	latermuse	arkeet: in general or for my case?
2015-08-27 20:55:24	-->	AndroUser (~androirc@2600:1000:b129:2ac4:0:10:82ba:801) has joined #haskell
2015-08-27 20:55:32	<--	zhulikas (~zhulikas@2001:41d0:52:cff::3e0) has quit (Ping timeout: 246 seconds)
2015-08-27 20:55:33	AndroUser	Hi can anyone see what im typing
2015-08-27 20:55:39	arkeet	no, no one can see what your typing.
2015-08-27 20:55:47	-->	bq (~chatzilla@123.155.155.218) has joined #haskell
2015-08-27 20:55:52	AndroUser	Ok thanks arkeet you da real man
2015-08-27 20:55:52	-->	tristanp (~tristanp@c-50-159-71-64.hsd1.wa.comcast.net) has joined #haskell
2015-08-27 20:55:54	<--	XorSwap (~XorSwap@wnpgmb016qw-ds01-214-177.dynamic.mtsallstream.net) has quit (Ping timeout: 265 seconds)
2015-08-27 20:55:55	-->	Tadgh (~Tadgh@24.6.78.86) has joined #haskell
2015-08-27 20:56:08	arkeet	latermuse: for your case.
2015-08-27 20:56:12	<--	glguy_ (~glguy@haskell/developer/glguy) has quit (Read error: Connection reset by peer)
2015-08-27 20:56:21	-->	gem (~gem@111.92.126.239) has joined #haskell
2015-08-27 20:56:25	-->	glguy_ (~glguy@haskell/developer/glguy) has joined #haskell
2015-08-27 20:56:48	-->	nkhodyunya (~Adium@dnm.137.102.124.92.dsl.krasnet.ru) has joined #haskell
2015-08-27 20:57:21	-->	mauke_ (~mauke@p3m/member/mauke) has joined #haskell
2015-08-27 20:57:33	-->	jle` (~mstksg@ip68-99-187-200.oc.oc.cox.net) has joined #haskell
2015-08-27 20:57:33	<--	jle` (~mstksg@ip68-99-187-200.oc.oc.cox.net) has quit (Changing host)
2015-08-27 20:57:33	-->	jle` (~mstksg@unaffiliated/mstksg) has joined #haskell
2015-08-27 20:57:34	-->	pt1 (~pt1@195.29.92.186) has joined #haskell
2015-08-27 20:57:39	latermuse	arkeet: I thought about it a bit more and think I am looking for a pretty printer, not ShowIO. I was going to use the ShowIO class to generalize over printing data that changes over time.
2015-08-27 20:57:42	-->	ttt_fff (c01f6999@gateway/web/freenode/ip.192.31.105.153) has joined #haskell
2015-08-27 20:57:53	<--	j2j (~Thunderbi@ool-435055cc.dyn.optonline.net) has quit (Ping timeout: 244 seconds)
2015-08-27 20:58:10	latermuse	arkeet: But it makes more sense to just make a pretty printer function and supply it with the time
2015-08-27 20:58:14	ttt_fff	is there a builtin in haskell for: take this text string, change every \ to \\ and every " to \" ?
2015-08-27 20:59:16	arkeet	if you want it to *only* make those substitutions you can write it yourself. possibly with >>= or something.
2015-08-27 20:59:19	<--	basearcher (~textual@208.66.26.41) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-27 20:59:20	ttt_fff	basically a builtin for escaping text
2015-08-27 20:59:39	arkeet	`show` will escape more stuff.
2015-08-27 20:59:42	<--	concept (52d4530a@gateway/web/freenode/ip.82.212.83.10) has quit (Ping timeout: 246 seconds)
2015-08-27 20:59:46	arkeet	(and put quotes around the whole thing.)
2015-08-27 21:00:03	-->	noodles1 (~noodles@s178255151130.blix.com) has joined #haskell
2015-08-27 21:00:26	<--	mauke (~mauke@p3m/member/mauke) has quit (Ping timeout: 240 seconds)
2015-08-27 21:00:30	jaconwil	> reverse . drop 1 . reverse . drop 1 . show $ "hi\\there"
2015-08-27 21:00:31	lambdabot	 "hi\\\\there"
2015-08-27 21:00:38	<--	jo__ (uid41683@gateway/web/irccloud.com/x-zhkxosipcuacajzw) has quit (Quit: Connection closed for inactivity)
2015-08-27 21:00:55	-->	pzu (~textual@82.95.239.200) has joined #haskell
2015-08-27 21:00:59	<--	ohpesky (~ohpesky@DHCP-23105.iis.sinica.edu.tw) has quit (Ping timeout: 256 seconds)
2015-08-27 21:01:06	<--	Tadgh (~Tadgh@24.6.78.86) has quit (Ping timeout: 240 seconds)
2015-08-27 21:01:11	ttt_fff	i'm writing a EDSL that compiles to JS
2015-08-27 21:01:13	-->	AaronFriel (~AaronFrie@67.212.119.147) has joined #haskell
2015-08-27 21:01:17	ttt_fff	"show" is probably not what I want to use
2015-08-27 21:01:21	felixn	http://lpaste.net/139763 <-- does this error while deriving MonadPlus look familiar to anyone?  I'm trying to fix a package on hackage
2015-08-27 21:01:23	ttt_fff	for converting Text -> JSString
2015-08-27 21:02:20	<--	u_ (~phillip@grd0963.urh.uiuc.edu) has quit (Ping timeout: 272 seconds)
2015-08-27 21:02:35	felixn	ttt_fff: https://hackage.haskell.org/package/json-0.9.1/docs/Text-JSON.html should work
2015-08-27 21:02:48	felixn	toJSString, it's right in there!
2015-08-27 21:02:48	<--	pt1 (~pt1@195.29.92.186) has quit (Ping timeout: 264 seconds)
2015-08-27 21:03:46	<--	jeadre (~jeadre@li1421-113.members.linode.com) has quit (Remote host closed the connection)
2015-08-27 21:04:09	--	mauke_ is now known as mauke
2015-08-27 21:04:25	-->	u_ (~phillip@grd0963.urh.uiuc.edu) has joined #haskell
2015-08-27 21:04:28	<--	Zeitgeist_ (~mkn@unaffiliated/damiel) has quit (Quit: Konversation terminated!)
2015-08-27 21:04:43	-->	ecthiender (~Anon@unaffiliated/ecthiender) has joined #haskell
2015-08-27 21:04:52	-->	centrinia (~centrinia@2602:306:bd0d:a690:6ce7:cffe:cb6e:2017) has joined #haskell
2015-08-27 21:05:24	--	paf31_away is now known as paf31
2015-08-27 21:05:42	-->	jeadre (~jeadre@li1421-113.members.linode.com) has joined #haskell
2015-08-27 21:05:48	<--	samrat (~samrat@123.236.183.215) has quit (Ping timeout: 264 seconds)
2015-08-27 21:05:52	-->	CoconutCrab (~Cua@unaffiliated/coconutcrab) has joined #haskell
2015-08-27 21:06:07	<--	tmtwd (~tmtwd@CPE0c473da71813-CM0c473da71810.cpe.net.cable.rogers.com) has quit (Ping timeout: 252 seconds)
2015-08-27 21:06:34	-->	samrat (~samrat@123.236.183.215) has joined #haskell
2015-08-27 21:06:41	<--	lethjakman (~lethjakma@71.56.221.51) has quit (Ping timeout: 244 seconds)
2015-08-27 21:06:47	<--	jeadre (~jeadre@li1421-113.members.linode.com) has quit (Remote host closed the connection)
2015-08-27 21:06:55	-->	cognominal (~cognomina@87-231-91-9.rev.numericable.fr) has joined #haskell
2015-08-27 21:06:57	<--	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has quit (Read error: Connection reset by peer)
2015-08-27 21:07:21	-->	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has joined #haskell
2015-08-27 21:07:22	-->	tristanp_ (~tristanp@c-50-159-71-64.hsd1.wa.comcast.net) has joined #haskell
2015-08-27 21:07:45	-->	zhulikas (~zhulikas@2001:41d0:52:cff::3e0) has joined #haskell
2015-08-27 21:08:06	<--	tristanp (~tristanp@c-50-159-71-64.hsd1.wa.comcast.net) has quit (Ping timeout: 240 seconds)
2015-08-27 21:08:13	-->	MrScout (~MrScout@unaffiliated/mrscout) has joined #haskell
2015-08-27 21:08:35	<--	u_ (~phillip@grd0963.urh.uiuc.edu) has quit (Remote host closed the connection)
2015-08-27 21:08:43	-->	jeadre (~jeadre@li1421-113.members.linode.com) has joined #haskell
2015-08-27 21:08:57	<--	zos (~zos@37.120.69.136) has quit (Ping timeout: 255 seconds)
2015-08-27 21:09:00	<--	michaelneale (~textual@ppp121-44-171-181.lns20.syd7.internode.on.net) has quit (Quit: Back later)
2015-08-27 21:09:18	<--	i-amd3 (~i_amd3@125x102x70x118.ap125.ftth.ucom.ne.jp) has quit (Remote host closed the connection)
2015-08-27 21:10:02	-->	emc2 (~emc2@2001:470:1f11:617:5ef7:830:9e60:2038) has joined #haskell
2015-08-27 21:10:03	-->	mea-culpa (~user@95.72.147.212) has joined #haskell
2015-08-27 21:10:51	AndroUser	Arkeeeeeeeet :-)
2015-08-27 21:10:52	-->	Laserbear (~Laserbear@c-73-223-160-142.hsd1.ca.comcast.net) has joined #haskell
2015-08-27 21:11:30	<--	MrScout (~MrScout@unaffiliated/mrscout) has quit (Read error: Connection reset by peer)
2015-08-27 21:11:49	-->	Kaidelong (~kaidelong@50-78-166-218-static.hfc.comcastbusiness.net) has joined #haskell
2015-08-27 21:12:07	-->	MrScout (~MrScout@unaffiliated/mrscout) has joined #haskell
2015-08-27 21:13:20	<--	croyd (~croyd@146-115-81-34.c3-0.sbo-ubr1.sbo.ma.cable.rcn.com) has quit (Remote host closed the connection)
2015-08-27 21:13:38	-->	zcd (~zcd@2601:647:4001:5e8d:be5f:f4ff:fe55:7451) has joined #haskell
2015-08-27 21:13:59	-->	i-amd3 (~i_amd3@125x102x70x118.ap125.ftth.ucom.ne.jp) has joined #haskell
2015-08-27 21:14:33	<--	Imagine (~Imagine@pool-108-49-149-166.bstnma.fios.verizon.net) has quit (Quit: Leaving)
2015-08-27 21:14:37	-->	paulsh94 (~paulsh94@2601:647:4602:8421:a2ac:e0d2:40ec:7634) has joined #haskell
2015-08-27 21:14:41	<--	paulsh94 (~paulsh94@2601:647:4602:8421:a2ac:e0d2:40ec:7634) has quit (Client Quit)
2015-08-27 21:14:57	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-27 21:15:14	--	paf31 is now known as paf31_away
2015-08-27 21:15:26	-->	Tadgh (~Tadgh@24.6.78.86) has joined #haskell
2015-08-27 21:15:49	<--	OrangeShark (~OrangeSha@2602:306:c5c9:a3e0:4957:16c0:663e:e984) has quit (Quit: Leaving)
2015-08-27 21:15:57	-->	kadoban (~mud@unaffiliated/kadoban) has joined #haskell
2015-08-27 21:15:58	<--	Big_G (~Big_G@c-50-181-217-15.hsd1.wa.comcast.net) has quit (Read error: No route to host)
2015-08-27 21:16:53	-->	alphaNJ (uid26470@gateway/web/irccloud.com/x-qijpmnvkiejepfyl) has joined #haskell
2015-08-27 21:17:48	-->	tristanp (~tristanp@2601:602:8a00:1310::4) has joined #haskell
2015-08-27 21:18:28	<--	tristanp_ (~tristanp@c-50-159-71-64.hsd1.wa.comcast.net) has quit (Read error: Connection reset by peer)
2015-08-27 21:18:33	ttt_fff	what libraries does Fay/Haste/GHCJS use for set/map in JS? (building a mini EDSL -> JS, and need functional set/map impls)
2015-08-27 21:19:17	-->	hyunwoo (uid26826@gateway/web/irccloud.com/x-gpvseseoyounvvbb) has joined #haskell
2015-08-27 21:19:35	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 265 seconds)
2015-08-27 21:20:05	<--	pzu (~textual@82.95.239.200) has left #haskell ("Textual IRC Client: www.textualapp.com")
2015-08-27 21:20:23	<--	nrk- (~b@ppp121-45-198-72.lns20.cbr1.internode.on.net) has quit (Ping timeout: 246 seconds)
2015-08-27 21:20:32	-->	pzu (~textual@82.95.239.200) has joined #haskell
2015-08-27 21:20:48	-->	nrk- (~b@ppp121-45-212-170.lns20.cbr1.internode.on.net) has joined #haskell
2015-08-27 21:21:02	<--	nkhodyunya (~Adium@dnm.137.102.124.92.dsl.krasnet.ru) has quit (Quit: Leaving.)
2015-08-27 21:21:27	<--	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has quit (Read error: Connection reset by peer)
2015-08-27 21:21:43	-->	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has joined #haskell
2015-08-27 21:22:26	<--	tristanp (~tristanp@2601:602:8a00:1310::4) has quit (Remote host closed the connection)
2015-08-27 21:22:37	-->	Big_G (~Big_G@c-50-181-217-15.hsd1.wa.comcast.net) has joined #haskell
2015-08-27 21:22:45	<--	Literphor_ (~alfred@209.237.92.139) has quit (Quit: Literphor_)
2015-08-27 21:22:46	-->	Mayzie (~Daniel.is@unaffiliated/mayzie) has joined #haskell
2015-08-27 21:22:46	-->	tristanp (~tristanp@c-50-159-71-64.hsd1.wa.comcast.net) has joined #haskell
2015-08-27 21:22:46	<--	AaronFriel (~AaronFrie@67.212.119.147) has quit (Quit: Leaving)
2015-08-27 21:22:46	<--	pzu (~textual@82.95.239.200) has quit (Client Quit)
2015-08-27 21:23:01	-->	darenthis (~darenthis@cpc76742-dals23-2-0-cust353.20-2.cable.virginm.net) has joined #haskell
2015-08-27 21:23:01	-->	pzu (~textual@82.95.239.200) has joined #haskell
2015-08-27 21:23:03	-->	nrk-_ (~b@ppp121-45-212-243.lns20.cbr1.internode.on.net) has joined #haskell
2015-08-27 21:23:58	-->	daniel-s (~daniel-s@mu00053769.eng.monash.edu.au) has joined #haskell
2015-08-27 21:24:06	<--	pzu (~textual@82.95.239.200) has quit (Client Quit)
2015-08-27 21:25:24	-->	hatds (~chatzilla@c-174-53-152-116.hsd1.mn.comcast.net) has joined #haskell
2015-08-27 21:25:46	-->	nrk-__ (~b@ppp121-45-209-24.lns20.cbr1.internode.on.net) has joined #haskell
2015-08-27 21:25:46	lpaste_	glguy pasted “for felixn” at http://lpaste.net/139765
2015-08-27 21:25:52	<--	tristanp (~tristanp@c-50-159-71-64.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2015-08-27 21:25:52	<--	nrk- (~b@ppp121-45-212-170.lns20.cbr1.internode.on.net) has quit (Ping timeout: 265 seconds)
2015-08-27 21:25:53	--	nrk-__ is now known as nrk-
2015-08-27 21:25:58	<--	Tadgh (~Tadgh@24.6.78.86) has quit (Ping timeout: 250 seconds)
2015-08-27 21:26:06	-->	zos (~zos@37.120.69.136) has joined #haskell
2015-08-27 21:26:25	-->	Tadgh (~Tadgh@24.6.78.86) has joined #haskell
2015-08-27 21:26:33	felixn	glguy_: woah!!  let me check that out, I was just messing with Control.Monad.Unify after getting it to compile
2015-08-27 21:26:41	--	hatds is now known as dosboot
2015-08-27 21:26:55	-->	chaosmasttter (~chaosmast@p4FC56064.dip0.t-ipconnect.de) has joined #haskell
2015-08-27 21:27:05	<--	nrk-_ (~b@ppp121-45-212-243.lns20.cbr1.internode.on.net) has quit (Ping timeout: 245 seconds)
2015-08-27 21:27:16	glguy	felixn: That code at least loads and you can see how you'd run one of the examples
2015-08-27 21:27:20	<--	darenthis (~darenthis@cpc76742-dals23-2-0-cust353.20-2.cable.virginm.net) has quit (Ping timeout: 244 seconds)
2015-08-27 21:28:48	-->	tristanp (~tristanp@2601:602:8a00:1310::4) has joined #haskell
2015-08-27 21:28:55	glguy	felixn: You can add "x' <- applyBindings x" to the example to resolve x rather than getting it back as a variable that you have to look up in the final bindings, among lots of other things
2015-08-27 21:29:00	-->	EvanR (~evan@unaffiliated/evanr) has joined #haskell
2015-08-27 21:29:37	<--	glguy_ (~glguy@haskell/developer/glguy) has quit (Quit: Bye)
2015-08-27 21:30:25	-->	nkhodyunya (~Adium@dnm.137.102.124.92.dsl.krasnet.ru) has joined #haskell
2015-08-27 21:30:25	<--	gamegoblin (~grant@64.187.168.233) has quit (Read error: Connection reset by peer)
2015-08-27 21:30:46	<--	psacrifice (psacrifice@gateway/shell/panicbnc/x-ilgqtsudtnmeulqo) has quit (Quit: PanicBNC - http://PanicBNC.net)
2015-08-27 21:30:49	<--	alang (~alang@2a01:4f8:d16:2240::2) has quit (Quit: ZNC - http://znc.in)
2015-08-27 21:30:50	<--	bcoppens (~bartcopp@kde/coppens) has quit (Remote host closed the connection)
2015-08-27 21:30:55	<--	nopf (~frosch@static.142.192.47.78.clients.your-server.de) has quit (Remote host closed the connection)
2015-08-27 21:30:56	-->	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has joined #haskell
2015-08-27 21:30:58	-->	fractalcat (~sio@124-171-21-198.dyn.iinet.net.au) has joined #haskell
2015-08-27 21:31:02	<--	jaspervdj (~jaspervdj@jaspervdj.be) has quit (Remote host closed the connection)
2015-08-27 21:31:02	-->	devol (~quassel@d54C49939.access.telenet.be) has joined #haskell
2015-08-27 21:31:08	<--	pflanze (~chrisirc@a.christianjaeger.ch) has quit (Remote host closed the connection)
2015-08-27 21:31:17	<--	cmn (~cmn@78.47.67.53) has quit (Remote host closed the connection)
2015-08-27 21:31:18	<--	haasn (~haasn@static.102.126.46.78.clients.your-server.de) has quit (Quit: haasn)
2015-08-27 21:31:19	<--	srhb (~srhb@static.101.127.47.78.clients.your-server.de) has quit (Quit: Bye!)
2015-08-27 21:31:59	<--	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 244 seconds)
2015-08-27 21:32:30	<--	nrk- (~b@ppp121-45-209-24.lns20.cbr1.internode.on.net) has quit (Ping timeout: 245 seconds)
2015-08-27 21:32:34	<--	funfunctor (~edward@CPE-121-211-246-20.hhui7.cht.bigpond.net.au) has quit (Ping timeout: 260 seconds)
2015-08-27 21:32:45	-->	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-27 21:32:45	felixn	glguy: ah nice, I did want that, how u doin dis?
2015-08-27 21:33:07	<--	Tadgh (~Tadgh@24.6.78.86) has quit (Ping timeout: 265 seconds)
2015-08-27 21:33:33	glguy	Doing which?
2015-08-27 21:33:50	<--	sku1d (~freenode@typesafe.de) has quit (Ping timeout: 240 seconds)
2015-08-27 21:34:08	-->	yfeldblum (~yfeldblum@2620:10d:c081:1110::120f) has joined #haskell
2015-08-27 21:34:25	felixn	make it work :D  I've been poking at this library for a few days
2015-08-27 21:34:29	-->	nrk- (~b@ppp121-45-201-103.lns20.cbr1.internode.on.net) has joined #haskell
2015-08-27 21:35:25	<--	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has quit (Ping timeout: 245 seconds)
2015-08-27 21:35:45	Kaidelong	looks like stack just wasn't built with a workflow involving something fancier than a text editor in mind?
2015-08-27 21:36:19	Kaidelong	looks like I have to install GHC, ghc-mod, cabal-install etc myself if I want global availability of them
2015-08-27 21:36:40	Kaidelong	perhaps I need to edit the global configuration file?
2015-08-27 21:36:55	Chobbes	Kaidelong: you can add stack's binaries to $PATH?
2015-08-27 21:36:58	Kaidelong	but the stack command line tool should have things that do that via CLI if I was meant to do that
2015-08-27 21:37:09	Kaidelong	Chobbes: but I can't get stack to actually build any binaries
2015-08-27 21:37:27	Chobbes	Kaidelong: why not?
2015-08-27 21:37:51	Kaidelong	perhaps I'm doing it wrong, could you walk me through first time startup?
2015-08-27 21:37:59	Kaidelong	the bin directory is in my path, but it is empty
2015-08-27 21:38:10	Kaidelong	what do I need to do to populate it?
2015-08-27 21:38:35	Chobbes	Kaidelong: have you tried `stack init` on a project with a .cabal file?
2015-08-27 21:38:38	glguy	felixn: No magic, just a matter of looking at the types and the error messages when it wouldn't compile, and expecting a unification library to work a certain way
2015-08-27 21:38:47	-->	Tadgh (~Tadgh@24.6.78.86) has joined #haskell
2015-08-27 21:38:54	Kaidelong	Mmm, I might have, but let me try it again
2015-08-27 21:39:02	Lokathor	stack install <package> will install an executable if that's what the package builds, even from not within a project. After that you can at least use "stack exec binary"
2015-08-27 21:39:06	-->	wedens (~wedens@unaffiliated/wedens) has joined #haskell
2015-08-27 21:39:15	Chobbes	Kaidelong: it should prompt you to do `stack setup` if it wants to download GHC.
2015-08-27 21:39:28	Lokathor	i don't know how to get it to always work without using "stack exec" though :/
2015-08-27 21:39:49	Kaidelong	"refusing to overwrite existing stack.yaml, please delete before running stack init or if you are sure use '--force'"
2015-08-27 21:39:52	Chobbes	Kaidelong: I believe it will also use the system GHC by default if it's an acceptable version. There are options for turning that on / off. See `stack`
2015-08-27 21:39:59	-->	sku1d (~freenode@typesafe.de) has joined #haskell
2015-08-27 21:40:05	jle`	what's a nice way of representing a polynomial on one unknown?
2015-08-27 21:40:11	jle`	right now i'm using (Int -> Double)
2015-08-27 21:40:14	Chobbes	Kaidelong: stack.yaml just describes some extra stuff like where to get bonus packages from.
2015-08-27 21:40:15	Kaidelong	Chobbes: I am trying to manage everything with stack
2015-08-27 21:40:25	Kaidelong	so I didn't install haskell at all
2015-08-27 21:40:28	Chobbes	Kaidelong: if you have not customized that yet, then it is safe to --force or remove it.
2015-08-27 21:40:44	c_wraith	jle`: depends on your use case.  [Double] is sometimes better.  As well as other similar approaches
2015-08-27 21:40:53	Kaidelong	alright, it told me
2015-08-27 21:41:07	jle`	c_wraith: I tried Double first, but addition became a bit of a pain
2015-08-27 21:41:08	Kaidelong	"Setting codepage to UTF-8 (65001) to ensure correct output from GHC"
2015-08-27 21:41:19	c_wraith	jle`: store them reversed.
2015-08-27 21:41:27	-->	foreignFunction (~ai@ip-4761.sunline.net.ua) has joined #haskell
2015-08-27 21:41:31	jle`	most significant bit as the head, or the last?
2015-08-27 21:41:32	Kaidelong	then that it was writing stack.yaml based on yesod-simple.cabal
2015-08-27 21:41:33	c_wraith	jle`: basically every algorithm works better if they're reversed.  Except printing.
2015-08-27 21:41:35	<--	nrk- (~b@ppp121-45-201-103.lns20.cbr1.internode.on.net) has quit (Ping timeout: 260 seconds)
2015-08-27 21:41:38	-->	im_learning (~bourne@117.247.190.244) has joined #haskell
2015-08-27 21:41:38	jle`	either one was annoying for me ><
2015-08-27 21:41:43	-->	srhb (~srhb@static.101.127.47.78.clients.your-server.de) has joined #haskell
2015-08-27 21:41:44	-->	pt1 (~pt1@195.29.92.186) has joined #haskell
2015-08-27 21:41:58	Kaidelong	then "checking against build plan lts-3.2" then "selected resolver: lts-3.2", then it wrote out stack.yaml
2015-08-27 21:42:11	Kaidelong	didn't say anything about doing a setup
2015-08-27 21:42:20	<--	emc2 (~emc2@2001:470:1f11:617:5ef7:830:9e60:2038) has quit (Ping timeout: 244 seconds)
2015-08-27 21:42:28	Chobbes	Kaidelong: okay, you might have already done that. Does `stack build` build your project?
2015-08-27 21:42:35	Kaidelong	stack exec ghci brings up ghci
2015-08-27 21:42:44	-->	ohpesky (~ohpesky@DHCP-23105.iis.sinica.edu.tw) has joined #haskell
2015-08-27 21:42:54	Kaidelong	mmm, maybe I'm wrong about where the bindir is, then =/
2015-08-27 21:43:12	Chobbes	Kaidelong: you should be able to use `stack ghc` to run ghc and `stack ghci` to use ghci.
2015-08-27 21:43:33	Chobbes	Not sure where it hides the binaries for the compilers.
2015-08-27 21:43:35	<--	im_learning (~bourne@117.247.190.244) has left #haskell
2015-08-27 21:43:54	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-27 21:44:10	Kaidelong	AppData\Roaming\local\bin is where I thought the binaries would be, but that is empty
2015-08-27 21:44:25	Chobbes	Kaidelong: Windows?
2015-08-27 21:44:34	Kaidelong	yes
2015-08-27 21:44:42	--	Guest18388 is now known as mathu
2015-08-27 21:44:48	<--	mathu (~matt@104.236.250.51) has quit (Changing host)
2015-08-27 21:44:48	-->	mathu (~matt@unaffiliated/mathu) has joined #haskell
2015-08-27 21:44:59	-->	P1RATEZ (piratez@unaffiliated/p1ratez) has joined #haskell
2015-08-27 21:45:02	<--	Tadgh (~Tadgh@24.6.78.86) has quit (Ping timeout: 250 seconds)
2015-08-27 21:45:10	Chobbes	Ah. No idea about Windows to be honest. You should be able to make some kind of alias for `stack ghc` and `stack ghci`, though?
2015-08-27 21:45:35	Kaidelong	I could do that through powershell, actually
2015-08-27 21:45:36	-->	haasn (~haasn@2a01:4f8:d13:5245::2) has joined #haskell
2015-08-27 21:45:50	Kaidelong	hmm, I wonder though, would the alias be visible to stuff like IntelliJ?
2015-08-27 21:46:02	Kaidelong	they probably just use the SYSTEM function or something like that
2015-08-27 21:46:28	<--	pt1 (~pt1@195.29.92.186) has quit (Ping timeout: 252 seconds)
2015-08-27 21:46:45	-->	totalconfusion (~totalconf@CPE-60-225-20-224.home33.cht.bigpond.net.au) has joined #haskell
2015-08-27 21:46:52	Chobbes	Also there appears to be some IDE API / client thing so you can probably integrate it with the IDE of your choice if this has not already been done.
2015-08-27 21:46:59	-->	nablv (~nabeel@117.247.190.244) has joined #haskell
2015-08-27 21:47:03	-->	ttt_fff_ (c01f6999@gateway/web/freenode/ip.192.31.105.153) has joined #haskell
2015-08-27 21:47:05	<--	nablv (~nabeel@117.247.190.244) has left #haskell
2015-08-27 21:47:13	Kaidelong	okay, looks like cabal-helper-wrapper has been installed in some place where stack isn't expecting it to be
2015-08-27 21:47:20	ttt_fff_	I have this code: https://gist.github.com/anonymous/2ccdf7e4f3c98f16b209 . How should I change my DSL expr system so that JSConsoleLog has type JSIO () ?
2015-08-27 21:47:22	Kaidelong	and this is what's preventing "stack install" from working
2015-08-27 21:47:35	felixn	but got: "Just Nothing" <-- amusing test assertion
2015-08-27 21:47:50	Lokathor	note, the current release doesn't work with "stack ghci" on windows i think
2015-08-27 21:47:53	-->	lodin_ (~lodin@c-31-209-2-44.cust.bredband2.com) has joined #haskell
2015-08-27 21:48:13	Lokathor	well, not everywhere. it tries to load the local config, and if that fails then it'll fail
2015-08-27 21:48:20	<--	codedmart (~codedmart@c-174-52-158-160.hsd1.ut.comcast.net) has quit (Quit: Leaving.)
2015-08-27 21:48:20	Lokathor	but stack exect ghci will still work
2015-08-27 21:48:20	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 245 seconds)
2015-08-27 21:48:33	ttt_fff_	hmm, do I wnat GADTs with "data JSIO a where ..." ?
2015-08-27 21:48:39	<--	slack1256 (~slack1256@190-21-30-239.baf.movistar.cl) has quit (Quit: Konversation terminated!)
2015-08-27 21:48:40	Lokathor	this is fixed in the next release, or if you built stack from git
2015-08-27 21:48:43	Kaidelong	indeed, "stack ghci" fails
2015-08-27 21:48:52	Kaidelong	but "stack exec ghci" works
2015-08-27 21:49:05	Kaidelong	mm, that might be bad
2015-08-27 21:49:28	felixn	ttt_fff_: are you building a VM, or transcompiler?
2015-08-28 07:31:30	--	irc: disconnected from server
2015-08-28 07:31:49	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:848b:fcd0:84:2ac3) has joined #haskell
2015-08-28 07:31:49	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-28 07:31:49	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-28 07:31:49	--	Channel #haskell: 1510 nicks (1 op, 0 voices, 1509 normals)
2015-08-28 07:31:49	--	URL for #haskell: http://www.haskell.org/
2015-08-28 07:31:49	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-28 07:31:58	<--	stianhj (~stian@80.91.33.135) has quit (Quit: WeeChat 1.3)
2015-08-28 07:32:12	<--	gothicsouth (~gothicsou@cpe-76-177-66-223.natcky.res.rr.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-28 07:33:06	-->	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has joined #haskell
2015-08-28 07:33:12	<--	glguy_ (~glguy@haskell/developer/glguy) has quit (Read error: Connection reset by peer)
2015-08-28 07:33:16	-->	glguy` (~glguy@haskell/developer/glguy) has joined #haskell
2015-08-28 07:33:24	<--	mostalive (~mostalive@109.224.219.36) has quit (Ping timeout: 264 seconds)
2015-08-28 07:33:30	-->	EunChe (~eunche@221.154.182.251) has joined #haskell
2015-08-28 07:33:54	-->	OrangeShark (~OrangeSha@2602:306:c5c9:a3e0:5876:46bf:829c:36fe) has joined #haskell
2015-08-28 07:34:54	-->	catgocat (~catgocat@93.102.73.228.rev.optimus.pt) has joined #haskell
2015-08-28 07:35:05	<--	Peaker (~Peaker@85.65.227.152.dynamic.barak-online.net) has quit (Ping timeout: 256 seconds)
2015-08-28 07:35:17	-->	jutaro (~jutaro@p200300455C7930A39883C403417EA0C1.dip0.t-ipconnect.de) has joined #haskell
2015-08-28 07:35:21	<--	muesli4 (~sx@p54A016F4.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2015-08-28 07:35:28	-->	strburst (~allen@128.61.26.37) has joined #haskell
2015-08-28 07:36:33	-->	urodna (~urodna@unaffiliated/urodna) has joined #haskell
2015-08-28 07:36:35	-->	bmorphism (~bmorphism@74.114.47.2) has joined #haskell
2015-08-28 07:37:36	-->	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-28 07:37:37	-->	meditans (~user@adsl-ull-109-113.51-151.net24.it) has joined #haskell
2015-08-28 07:37:51	-->	proteusguy (~proteusgu@ppp-110-168-229-245.revip5.asianet.co.th) has joined #haskell
2015-08-28 07:37:55	<--	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has quit (Ping timeout: 256 seconds)
2015-08-28 07:37:59	<--	Intolerable (~Adium@host81-138-103-242.in-addr.btopenworld.com) has quit (Quit: Leaving.)
2015-08-28 07:38:00	<--	EunChe (~eunche@221.154.182.251) has quit (Ping timeout: 260 seconds)
2015-08-28 07:38:33	-->	tusj (~tusj@190.89-10-144.nextgentel.com) has joined #haskell
2015-08-28 07:38:35	meditans	to anyone who used the hlint library: did you manage to parse successfully a file with `parseModuleEx`?
2015-08-28 07:38:54	-->	Intolerable (~Adium@host81-138-103-242.in-addr.btopenworld.com) has joined #haskell
2015-08-28 07:39:07	meditans	I must be missing something obvious, because I continue getting ParseError
2015-08-28 07:39:09	-->	ely-se (~rightfold@a82-161-178-6.adsl.xs4all.nl) has joined #haskell
2015-08-28 07:39:13	<--	terlar (~terje@h-37-123-145-122.na.cust.bahnhof.se) has quit (Quit: WeeChat 1.3)
2015-08-28 07:39:14	meditans	maybe mpickering
2015-08-28 07:39:29	-->	michel_slm (uid16025@gateway/web/irccloud.com/x-cwhbtunuegidjvsk) has joined #haskell
2015-08-28 07:39:34	mpickering	hello
2015-08-28 07:39:44	mpickering	can you paste the file you are trying to parse?
2015-08-28 07:39:59	meditans	yeah, it's the lens-4.9 module
2015-08-28 07:40:06	<--	Ven (~textual@62-2-219-218.static.cablecom.ch) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-08-28 07:40:06	mpickering	you can also try parsing it with "hlint hse <file.hs>" 
2015-08-28 07:40:09	meditans	just Control/Lens.hs
2015-08-28 07:40:31	mpickering	what is the parse error you are getting?
2015-08-28 07:40:53	meditans	So, the parse message is "Parse error: #"
2015-08-28 07:41:08	<--	Literphor_ (~alfred@209.237.92.139) has quit (Quit: Literphor_)
2015-08-28 07:41:08	<--	erkin (~erkin@unaffiliated/erkin) has quit (Ping timeout: 244 seconds)
2015-08-28 07:41:21	mpickering	ah you need to configure it to run CPP first
2015-08-28 07:41:29	meditans	the parseErrorContents is "    , module Control.Lens.Review\n    , module Control.Lens.Setter\n> #ifndef DISABLE_TEMPLATE_HASKELL\n    , module Control.Lens.TH\n  #endif\n"
2015-08-28 07:41:34	meditans	mpickering: how so?
2015-08-28 07:41:59	-->	free_beard (~mircea@unaffiliated/free-beard/x-6152516) has joined #haskell
2015-08-28 07:42:08	<--	nkhodyunya1 (~Adium@dnm.119.65.124.92.dsl.krasnet.ru) has quit (Quit: Leaving.)
2015-08-28 07:42:51	<--	tusj (~tusj@190.89-10-144.nextgentel.com) has quit (Remote host closed the connection)
2015-08-28 07:42:58	edwardk	meditans: look at github.com/ekmett/lens at tests/hlint.hs -- that uses the hlint library to parse all the lens files =)
2015-08-28 07:43:03	mpickering	by setting CppFlags in ParseOptions
2015-08-28 07:43:18	-->	tusj (~tusj@190.89-10-144.nextgentel.com) has joined #haskell
2015-08-28 07:43:19	edwardk	but it cheats and just calls 'hlint'
2015-08-28 07:43:45	<--	sigma914 (~sigma@80.76.204.146) has quit (Remote host closed the connection)
2015-08-28 07:43:45	<--	proteusguy (~proteusgu@ppp-110-168-229-245.revip5.asianet.co.th) has quit (Ping timeout: 245 seconds)
2015-08-28 07:43:50	-->	dm3 (~dm3@78.60.230.119) has joined #haskell
2015-08-28 07:44:00	<--	malkomalko (~malkomalk@ool-457a2213.dyn.optonline.net) has quit (Quit: Lost terminal)
2015-08-28 07:44:11	-->	the_2nd (~the_2nd@2a02:8070:4381:3700::3) has joined #haskell
2015-08-28 07:44:15	<--	tusj (~tusj@190.89-10-144.nextgentel.com) has quit (Remote host closed the connection)
2015-08-28 07:44:27	the_2nd	is there a method to check whether a value is between two others? or within a range?
2015-08-28 07:44:32	the_2nd	is x between 3 and 7
2015-08-28 07:44:43	-->	tusj (~tusj@190.89-10-144.nextgentel.com) has joined #haskell
2015-08-28 07:44:56	the_2nd	x between a and b
2015-08-28 07:45:04	the_2nd	where i dont know whether a or b is the smaller
2015-08-28 07:45:13	<--	ely-se (~rightfold@a82-161-178-6.adsl.xs4all.nl) has quit (Quit: leaving)
2015-08-28 07:45:21	<--	eatman (~eatman@anthemis.grenoble.inria.fr) has quit (Quit: Lost terminal)
2015-08-28 07:45:25	-->	Noldorin (~noldorin@unaffiliated/noldorin) has joined #haskell
2015-08-28 07:45:39	the_2nd	in c++ i have ( (x > a && x < b) || (x < a && x > b))
2015-08-28 07:46:25	frerich	the_2nd: There is 'inRange', e.g.
2015-08-28 07:46:27	-->	nkhodyunya (~Adium@dnm.119.65.124.92.dsl.krasnet.ru) has joined #haskell
2015-08-28 07:46:31	frerich	> inRange (3, 7) 5
2015-08-28 07:46:33	lambdabot	 True
2015-08-28 07:46:45	EvanR	> inRange (7, 3) 5
2015-08-28 07:46:46	-->	tinyblak (~tinyblak@114.111.167.202) has joined #haskell
2015-08-28 07:46:46	-->	malkomalko (~malkomalk@ool-457a2213.dyn.optonline.net) has joined #haskell
2015-08-28 07:46:47	lambdabot	 False
2015-08-28 07:47:03	<--	KarolisK (~karolis@78-60-68-107.static.zebra.lt) has quit (Quit: Konversation terminated!)
2015-08-28 07:47:03	<--	tommah (~tommah@67-210-179-56.fidnet.com) has quit (Ping timeout: 252 seconds)
2015-08-28 07:47:06	EvanR	> inRange (min 7 3, max 7 3) 5
2015-08-28 07:47:08	lambdabot	 True
2015-08-28 07:47:24	-->	Tadgh (~Tadgh@24.6.78.86) has joined #haskell
2015-08-28 07:47:28	-->	urodna_ (~urodna@cpe-68-174-17-78.si.res.rr.com) has joined #haskell
2015-08-28 07:47:35	<--	urodna (~urodna@unaffiliated/urodna) has quit (Ping timeout: 246 seconds)
2015-08-28 07:47:39	the_2nd	EvanR, thanks
2015-08-28 07:47:56	frerich	> all (inRange (3, 7)) [3..7]
2015-08-28 07:47:58	lambdabot	 True
2015-08-28 07:48:06	frerich	Both bounds are included, it seems.
2015-08-28 07:48:44	EvanR	> all (inRange (0.0, 100.0)) [0.0 .. 100.0]
2015-08-28 07:48:46	lambdabot	     No instance for (Ix a0) arising from a use of ‘inRange’
2015-08-28 07:48:46	lambdabot	     The type variable ‘a0’ is ambiguous
2015-08-28 07:48:46	lambdabot	     Note: there are several potential instances:
2015-08-28 09:11:31	--	irc: disconnected from server
2015-08-28 09:11:57	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-28 09:11:57	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-28 09:11:57	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-28 09:11:57	--	Channel #haskell: 1508 nicks (1 op, 0 voices, 1507 normals)
2015-08-28 09:11:57	--	URL for #haskell: http://www.haskell.org/
2015-08-28 09:11:58	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-28 09:11:58	<--	mariusmarius (~mariusmar@2620:10d:c0a1:f80::c:aab5) has quit (Quit: Leaving.)
2015-08-28 09:12:08	-->	Tadgh (~Tadgh@24.6.78.86) has joined #haskell
2015-08-28 09:12:10	 *	hackagebot amazonka-redshift 1.2.0.1 - Amazon Redshift SDK.  https://hackage.haskell.org/package/amazonka-redshift-1.2.0.1 (BrendanHay)
2015-08-28 09:12:11	 *	hackagebot amazonka-opsworks 1.2.0.1 - Amazon OpsWorks SDK.  https://hackage.haskell.org/package/amazonka-opsworks-1.2.0.1 (BrendanHay)
2015-08-28 09:12:13	 *	hackagebot amazonka-emr 1.2.0.1 - Amazon Elastic MapReduce SDK.  https://hackage.haskell.org/package/amazonka-emr-1.2.0.1 (BrendanHay)
2015-08-28 09:12:14	athan	ocharles__: Okay cool, I'm just trying to get all perspectives on it. Thank you :)
2015-08-28 09:12:15	 *	hackagebot amazonka-cognito-identity 1.2.0.1 - Amazon Cognito Identity SDK.  https://hackage.haskell.org/package/amazonka-cognito-identity-1.2.0.1 (BrendanHay)
2015-08-28 09:12:17	 *	hackagebot amazonka-ssm 1.2.0.1 - Amazon Simple Systems Management Service SDK.  https://hackage.haskell.org/package/amazonka-ssm-1.2.0.1 (BrendanHay)
2015-08-28 09:12:43	-->	tommah (~tommah@67-210-179-56.fidnet.com) has joined #haskell
2015-08-28 09:12:45	<--	elementalest (~elemental@unaffiliated/elementalest) has quit (Quit: Quit: Quit: Quit: OK)
2015-08-28 09:12:57	-->	ulfdoz (~mary@2.164.151.112) has joined #haskell
2015-08-28 09:13:11	-->	elementalest (~elemental@ppp118-209-149-239.lns20.mel8.internode.on.net) has joined #haskell
2015-08-28 09:13:11	<--	elementalest (~elemental@ppp118-209-149-239.lns20.mel8.internode.on.net) has quit (Changing host)
2015-08-28 09:13:11	-->	elementalest (~elemental@unaffiliated/elementalest) has joined #haskell
2015-08-28 09:13:52	-->	pyon (~pyon@unaffiliated/pyon) has joined #haskell
2015-08-28 09:13:58	<--	voltalio (~voltalio@173-14-36-210-Michigan.hfc.comcastbusiness.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-28 09:14:39	<--	bearbite (~callen@198.199.80.102) has quit (Remote host closed the connection)
2015-08-28 09:14:54	<--	tulcod (~tulcod@unaffiliated/tulcod) has quit (Ping timeout: 260 seconds)
2015-08-28 09:15:20	erisco	people complain about error novels in C++
2015-08-28 09:15:23	erisco	I wonder if they've used pipes
2015-08-28 09:15:31	<--	hive-mind (pranq@mail.bbis.us) has quit (Remote host closed the connection)
2015-08-28 09:15:56	<--	proteusguy (~proteusgu@ppp-110-168-229-245.revip5.asianet.co.th) has quit (Ping timeout: 246 seconds)
2015-08-28 09:16:25	pyon	erisco: Even with annotated type signatures, are the errors bad? :-O
2015-08-28 09:16:28	<--	strburst (~allen@lawn-128-61-26-37.lawn.gatech.edu) has quit (Ping timeout: 260 seconds)
2015-08-28 09:16:31	-->	lucasbrunialti (~lucasbrun@201.6.225.38) has joined #haskell
2015-08-28 09:16:34	-->	hive-mind (pranq@mail.bbis.us) has joined #haskell
2015-08-28 09:17:19	 *	hackagebot amazonka-ml 1.2.0.1 - Amazon Machine Learning SDK.  https://hackage.haskell.org/package/amazonka-ml-1.2.0.1 (BrendanHay)
2015-08-28 09:17:21	 *	hackagebot amazonka-workspaces 1.2.0.1 - Amazon WorkSpaces SDK.  https://hackage.haskell.org/package/amazonka-workspaces-1.2.0.1 (BrendanHay)
2015-08-28 09:17:23	 *	hackagebot amazonka-dynamodb 1.2.0.1 - Amazon DynamoDB SDK.  https://hackage.haskell.org/package/amazonka-dynamodb-1.2.0.1 (BrendanHay)
2015-08-28 09:17:25	 *	hackagebot amazonka-rds 1.2.0.1 - Amazon Relational Database Service SDK.  https://hackage.haskell.org/package/amazonka-rds-1.2.0.1 (BrendanHay)
2015-08-28 09:17:27	 *	hackagebot amazonka-ds 1.2.0.1 - Amazon Directory Service SDK.  https://hackage.haskell.org/package/amazonka-ds-1.2.0.1 (BrendanHay)
2015-08-28 09:17:33	<--	lucasbrunialti (~lucasbrun@201.6.225.38) has quit (Remote host closed the connection)
2015-08-28 09:18:12	<--	Freefood (~freefood@2a02:a03f:163a:9700:b8e6:aaf4:26b4:db57) has quit (Remote host closed the connection)
2015-08-28 09:18:24	erisco	I haven't gotten the types right once for pipes
2015-08-28 09:18:27	erisco	very hard to use
2015-08-28 09:18:55	-->	Sixmsj (~Sixmsj@c-50-131-110-35.hsd1.ca.comcast.net) has joined #haskell
2015-08-28 09:19:34	<--	jedai (~jedai@ADijon-652-1-206-59.w90-56.abo.wanadoo.fr) has quit (Read error: Connection reset by peer)
2015-08-28 09:20:25	-->	RegEchse (~regechse@ipbcc0bf64.dynamic.kabel-deutschland.de) has joined #haskell
2015-08-28 09:20:31	<--	Tadgh (~Tadgh@24.6.78.86) has quit (Ping timeout: 260 seconds)
2015-08-28 09:20:50	-->	dmj (~user@c-76-29-40-59.hsd1.il.comcast.net) has joined #haskell
2015-08-28 09:21:17	-->	martin-t (~martin-t@199.201.64.129) has joined #haskell
2015-08-28 09:21:27	<--	edsko (~edsko@46.7.106.187) has quit (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
2015-08-28 09:21:49	--	greves is now known as Guest55692
2015-08-28 09:21:49	<--	Guest55692 (~greves@36-224-115-93.dynamic-ip.hinet.net) has quit (Killed (hobana.freenode.net (Nickname regained by services)))
2015-08-28 09:21:49	--	Guest32272 is now known as greves
2015-08-28 09:22:18	-->	kmels (~kmels@186.64.110.122) has joined #haskell
2015-08-28 09:22:24	-->	Guest55692 (~greves@36-224-115-93.dynamic-ip.hinet.net) has joined #haskell
2015-08-28 09:22:25	<--	saulzar (~oliver@121-74-241-215.telstraclear.net) has quit (Ping timeout: 244 seconds)
2015-08-28 09:22:30	 *	hackagebot amazonka-cloudwatch-logs 1.2.0.1 - Amazon CloudWatch Logs SDK.  https://hackage.haskell.org/package/amazonka-cloudwatch-logs-1.2.0.1 (BrendanHay)
2015-08-28 09:22:32	 *	hackagebot amazonka-route53 1.2.0.1 - Amazon Route 53 SDK.  https://hackage.haskell.org/package/amazonka-route53-1.2.0.1 (BrendanHay)
2015-08-28 09:22:34	 *	hackagebot amazonka-cloudsearch 1.2.0.1 - Amazon CloudSearch SDK.  https://hackage.haskell.org/package/amazonka-cloudsearch-1.2.0.1 (BrendanHay)
2015-08-28 09:22:36	 *	hackagebot amazonka-storagegateway 1.2.0.1 - Amazon Storage Gateway SDK.  https://hackage.haskell.org/package/amazonka-storagegateway-1.2.0.1 (BrendanHay)
2015-08-28 09:22:38	 *	hackagebot amazonka-ec2 1.2.0.1 - Amazon Elastic Compute Cloud SDK.  https://hackage.haskell.org/package/amazonka-ec2-1.2.0.1 (BrendanHay)
2015-08-28 09:22:40	-->	youngbaks (~youngbaks@41.204.187.12) has joined #haskell
2015-08-28 09:24:40	-->	catgocat (5d6649e4@gateway/web/freenode/ip.93.102.73.228) has joined #haskell
2015-08-28 09:24:41	-->	matt____ (6d949edb@gateway/web/freenode/ip.109.148.158.219) has joined #haskell
2015-08-28 09:24:49	catgocat	Do you guys help with the NICTA course?
2015-08-28 09:24:58	<--	matt____ (6d949edb@gateway/web/freenode/ip.109.148.158.219) has quit (Client Quit)
2015-08-28 09:25:00	catgocat	I am trying to do it on my own and I'm affraid I will not be able to do it
2015-08-28 09:25:27	erisco	I don't do homework, I've got parties to go to
2015-08-28 09:25:42	greves	so servant is basically for REST APIs, right?
2015-08-28 09:25:55	greves	is there a web server that's the node equivalent of express or koa?
2015-08-28 09:26:07	-->	sunakshi (uid68063@gateway/web/irccloud.com/x-ukircxbkpsyhnxnw) has joined #haskell
2015-08-28 09:26:57	-->	aartamonau (~shaleny@206.169.106.2) has joined #haskell
2015-08-28 09:27:16	-->	jedai (~jedai@ADijon-652-1-206-59.w90-56.abo.wanadoo.fr) has joined #haskell
2015-08-28 09:27:40	 *	hackagebot amazonka-kms 1.2.0.1 - Amazon Key Management Service SDK.  https://hackage.haskell.org/package/amazonka-kms-1.2.0.1 (BrendanHay)
2015-08-28 09:27:42	 *	hackagebot amazonka-elastictranscoder 1.2.0.1 - Amazon Elastic Transcoder SDK.  https://hackage.haskell.org/package/amazonka-elastictranscoder-1.2.0.1 (BrendanHay)
2015-08-28 09:27:44	 *	hackagebot amazonka-lambda 1.2.0.1 - Amazon Lambda SDK.  https://hackage.haskell.org/package/amazonka-lambda-1.2.0.1 (BrendanHay)
2015-08-28 09:27:46	 *	hackagebot amazonka-ecs 1.2.0.1 - Amazon EC2 Container Service SDK.  https://hackage.haskell.org/package/amazonka-ecs-1.2.0.1 (BrendanHay)
2015-08-28 09:27:48	 *	hackagebot cryptonite 0.7 - Cryptography Primitives sink  https://hackage.haskell.org/package/cryptonite-0.7 (VincentHanquez)
2015-08-28 09:27:56	athan	greves: There are a ton
2015-08-28 09:28:08	greves	any recommendations?
2015-08-28 09:28:13	athan	Have you seen Scotty? It's a lot like sinatra
2015-08-28 09:28:25	athan	there's also Spock, which has more care toward authentication and type safety
2015-08-28 09:28:38	srhb	catgocat: While some people recommend against the channel, a lot of people in #haskell-beginners also do NICTA, so they might be helpful.
2015-08-28 09:28:50	athan	I made one, too - Nested-Routes - for even more precision in your routing
2015-08-28 09:28:59	catgocat	I have already asked for help there
2015-08-28 09:29:00	-->	araujo (~araujo@gentoo/developer/araujo) has joined #haskell
2015-08-28 09:29:03	catgocat	but they don't seem to be very active
2015-08-28 09:29:07	catgocat	at least not in my timezone
2015-08-28 09:29:10	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 245 seconds)
2015-08-28 09:29:21	srhb	catgocat: It varies based on time, indeed. Did you ask about something concrete, or just some kind of declaration of future help?
2015-08-28 09:29:28	srhb	I imagine the latter will not be very effective. :-)
2015-08-28 09:29:35	athan	greves: WAI is actually the equivalent to Connect
2015-08-28 09:29:36	greves	i'm not familiar with sinatra as i don't do ruby
2015-08-28 09:29:45	<--	nour (~nour@spike.experteer.de) has quit (Quit: Leaving)
2015-08-28 09:29:53	bitemyapp	athan: I always thought of it as being like Rack.
2015-08-28 09:30:01	<--	oish (~charlie@host81-130-206-144.in-addr.btopenworld.com) has quit (Quit: leaving)
2015-08-28 09:30:02	bitemyapp	did the Ruby community get ahead of me since I last dipped in or what?
2015-08-28 09:30:03	greves	web frameworks i know django and node express/koa/hapi
2015-08-28 09:30:09	athan	greves: You declare your routes with string variables - like `get "foo/bar/:var:" or something
2015-08-28 09:30:37	athan	bitemyapp: Oh, Connect is node.js :)
2015-08-28 09:30:38	<--	benma (~benma@46-126-157-104.dynamic.hispeed.ch) has quit (Ping timeout: 246 seconds)
2015-08-28 09:30:39	catgocat	srhb maybe
2015-08-28 09:30:40	bitemyapp	wai is a bit like wsgi as well.
2015-08-28 09:30:43	athan	the underbelly for Express
2015-08-28 09:30:45	bitemyapp	athan: oh right, whatever.
2015-08-28 09:30:51	erisco	okay finally
2015-08-28 09:30:54	-->	sebaseba (b157c512@gateway/web/freenode/ip.177.87.197.18) has joined #haskell
2015-08-28 09:30:56	bitemyapp	cool kids and their jay-esses
2015-08-28 09:31:00	<--	osa1 (~omer@156-56-64-199.dhcp-bl.indiana.edu) has quit (Ping timeout: 264 seconds)
2015-08-28 09:31:03	erisco	do monad transformers ever become easier? jeepers
2015-08-28 09:31:03	athan	bitemyapp: Javascript.js
2015-08-28 09:31:05	greves	hmm
2015-08-28 09:31:05	srhb	catgocat: Well, feel free to pose concrete questions there or here.
2015-08-28 09:31:09	bitemyapp	erisco: yes
2015-08-28 09:31:10	<--	swade61 (~swade61@host81-149-190-248.in-addr.btopenworld.com) has left #haskell
2015-08-28 09:31:15	<--	aartamonau (~shaleny@206.169.106.2) has quit (Ping timeout: 256 seconds)
2015-08-28 09:31:18	bitemyapp	erisco: what's causing you friction?
2015-08-28 09:31:24	erisco	monad transformers
2015-08-28 09:31:24	athan	erisco: We need co-lift
2015-08-28 09:31:26	erisco	wasn't I clear?
2015-08-28 09:31:36	<--	EvanR (~evan@unaffiliated/evanr) has quit (Ping timeout: 264 seconds)
2015-08-28 09:31:37	greves	i would basically just want something that uses middleware similar to koa, if you know that
2015-08-28 09:31:46	bitemyapp	erisco: that was an invitation to paste :P
2015-08-28 09:31:49	greves	it's my fav web server at the moment but want to try something in haskell just for a learning
2015-08-28 09:31:50	athan	erisco: mtl-style contextual induction over stacks ftw
2015-08-28 09:31:52	greves	-a
2015-08-28 09:32:03	athan	I don't :\
2015-08-28 09:32:15	athan	greves: Go with scotty! It's pretty easy :)
2015-08-28 09:32:16	greves	do you know express?
2015-08-28 09:32:18	<--	sebaseba (b157c512@gateway/web/freenode/ip.177.87.197.18) has quit (Client Quit)
2015-08-28 09:32:38	bitemyapp	greves: Koa's stuff sounds like typical web app monad / WAI middleware stuff.
2015-08-28 09:32:39	-->	kadoban (~mud@unaffiliated/kadoban) has joined #haskell
2015-08-28 09:32:56	greves	yeah, probably - i dont know WAI though just looking all of these up now
2015-08-28 09:33:16	greves	obviously there is a star trek theme going with the scotty/spock thing but trying to see what the differences are
2015-08-28 09:33:20	bitemyapp	greves: usually the simplest thing if you want a function that monkeys around with the web app stuff is to have it live in whatever app/handler monad your stack uses or make it WAI middleware (takes app as an argument, returns a new app, potentially different in behavior)
2015-08-28 09:33:39	-->	pi3r18 (~pi3r@109.139.75.7) has joined #haskell
2015-08-28 09:34:19	codedmart	greves: Sorry trying to read backlog but I know express/koa.
2015-08-28 09:34:23	-->	disgrntld (~levi@12.228.157.10) has joined #haskell
2015-08-28 09:34:53	greves	codedmart: so which of those 2 would you say is more similar
2015-08-28 09:34:56	-->	tennix (~ztennix@unaffiliated/tennix) has joined #haskell
2015-08-28 09:34:59	greves	those 2 = spock/scotty
2015-08-28 09:35:02	<--	dmag_ (~damian@81.128.163.110) has quit (Quit: Gotta run.)
2015-08-28 09:35:10	greves	or neither :P
2015-08-28 09:35:11	<--	skeet70_ (~skeet70@inet-hqmc02-o.oracle.com) has quit (Ping timeout: 240 seconds)
2015-08-28 09:35:46	greves	and yesod seems to be a popular one, no?
2015-08-28 09:35:54	-->	Sindriav_ (~textual@88.103.123.123) has joined #haskell
2015-08-28 09:35:57	athan	greves: The primer server is called Warp :0
2015-08-28 09:35:58	codedmart	greves: Well scotty more for it being more minimalistic then spock, but they are both sinatraesque.
2015-08-28 09:36:04	athan	yesod is like Rails
2015-08-28 09:36:15	-->	dan_f (~dan@24-148-32-207.c3-0.grn-ubr1.chi-grn.il.cable.rcn.com) has joined #haskell
2015-08-28 09:36:29	-->	albeit (~albeit___@184.69.201.250) has joined #haskell
2015-08-28 09:36:56	<--	dan_f (~dan@24-148-32-207.c3-0.grn-ubr1.chi-grn.il.cable.rcn.com) has quit (Client Quit)
2015-08-28 09:36:59	-->	mariusmarius (~mariusmar@2620:10d:c0a1:f80::c:f22b) has joined #haskell
2015-08-28 09:37:00	<--	perspectival (perspectiv@nat/redhat/x-opcanvpzjefuxzeg) has quit (Ping timeout: 250 seconds)
2015-08-28 09:37:09	codedmart	greves: Spock started out from Scotty, but removed all traces of Scotty once they were able to. Spock provides more out of the box then Scotty, but you could get the same with Scotty using middleware.
2015-08-28 09:37:24	<--	marcus-aurelius (~quassel@p20030073AF0EA2524425155A3514E6BB.dip0.t-ipconnect.de) has quit (Ping timeout: 244 seconds)
2015-08-28 09:37:28	-->	skeet70 (~skeet70@inet-hqmc01-o.oracle.com) has joined #haskell
2015-08-28 09:38:01	greves	oh ok
2015-08-28 09:38:03	-->	lucasbrunialti (~lucasbrun@201.6.225.38) has joined #haskell
2015-08-28 09:38:21	greves	interesting so those 2 and yesod are all similar to ruby servers, which i know nothing about :P
2015-08-28 09:38:22	<--	Herogx_ (~Herogx@109.78.221.115) has quit (Read error: Connection reset by peer)
2015-08-28 09:38:38	codedmart	Well express was modeled after sinatra.
2015-08-28 09:38:47	codedmart	So similar ideas
2015-08-28 09:39:02	greves	oh ok
2015-08-28 09:39:17	greves	so yesod is more like "batteries included" kind of thing, yeah?
2015-08-28 09:39:23	codedmart	Yeah
2015-08-28 09:39:26	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 244 seconds)
2015-08-28 09:39:27	-->	rgrinberg (uid50668@gateway/web/irccloud.com/x-lhrzcqaghfyggbra) has joined #haskell
2015-08-28 09:39:36	greves	do all of these play nice with websockets?
2015-08-28 09:40:07	<--	lucasbrunialti (~lucasbrun@201.6.225.38) has quit (Remote host closed the connection)
2015-08-28 09:40:16	-->	Literphor_ (~alfred@209.237.92.139) has joined #haskell
2015-08-28 09:40:21	-->	lucasbrunialti (~lucasbrun@201.6.225.38) has joined #haskell
2015-08-28 09:40:32	erisco	bitemyapp, you're too late
2015-08-28 09:40:33	-->	Tadgh (~Tadgh@2602:306:8064:4390:2516:e533:f2ec:6d21) has joined #haskell
2015-08-28 09:40:42	-->	cbaatz (~cb@46-127-141-225.dynamic.hispeed.ch) has joined #haskell
2015-08-28 09:41:06	codedmart	greves: I have used websockets with wai, but not scotty or spock directly. I know yesod has websockets capabilities as well.
2015-08-28 09:41:21	codedmart	So most likely yes they do.
2015-08-28 09:41:49	<--	illabout (~as0e8fy@softbank126072088075.bbtec.net) has quit (Quit: さようなら)
2015-08-28 09:42:36	<--	ndrei (~avo@AMontsouris-651-1-160-158.w82-123.abo.wanadoo.fr) has quit (Ping timeout: 260 seconds)
2015-08-28 09:42:41	greves	ok
2015-08-28 09:42:45	athan	greves: Be prepared to code :)
2015-08-28 09:42:48	greves	i'll do some reading then, thanks ;)
2015-08-28 09:42:51	athan	er, typecheck
2015-08-28 09:43:14	greves	athan well, i'm still learning haskell - haven't written much at all yet in it so i figure this will be a good project to learn the language
2015-08-28 09:43:15	greves	:)
2015-08-28 09:43:24	<--	catgocat (5d6649e4@gateway/web/freenode/ip.93.102.73.228) has quit (Ping timeout: 246 seconds)
2015-08-28 09:44:16	erisco	bitemyapp, do you know pipes a bit?
2015-08-28 09:44:21	erisco	because any pointers would help
2015-08-28 09:44:24	erisco	I know I am doing it all wrong
2015-08-28 09:44:30	<--	Literphor_ (~alfred@209.237.92.139) has quit (Ping timeout: 240 seconds)
2015-08-28 09:44:37	codedmart	greves: Good luck! bitemyapp has an awesome book I am reading through now. Highly recommend it.
2015-08-28 09:44:41	-->	ProofTechnique (~Ptech@65-183-137-193-dhcp.burlingtontelecom.net) has joined #haskell
2015-08-28 09:44:53	-->	tennix (~ztennix@unaffiliated/tennix) has joined #haskell
2015-08-28 09:44:57	greves	bitemyapp is the author?
2015-08-28 09:44:58	bitemyapp	erisco: yes, later.
2015-08-28 09:44:59	-->	mkster_ (~mkster@i577B7DC7.versanet.de) has joined #haskell
2015-08-28 09:45:02	bitemyapp	greves: yes
2015-08-28 09:45:05	bitemyapp	and my coauthor Julie
2015-08-28 09:45:10	bitemyapp	http://haskellbook.com/
2015-08-28 09:45:14	R0b0t1	Can there be a type of all types which don't contain themselves?
2015-08-28 09:45:15	greves	oh nice
2015-08-28 09:45:55	<--	CMCDragonkai (~nobody@ec2-52-8-178-236.us-west-1.compute.amazonaws.com) has left #haskell
2015-08-28 09:46:04	-->	CMCDragonkai (~nobody@ec2-52-8-178-236.us-west-1.compute.amazonaws.com) has joined #haskell
2015-08-28 09:46:10	-->	Ke (jkarlson@pdpc/supporter/active/ke) has joined #haskell
2015-08-28 09:46:15	-->	aartamonau (~shaleny@206.169.106.2) has joined #haskell
2015-08-28 09:46:23	<--	Intolerable (~Adium@host81-138-103-242.in-addr.btopenworld.com) has quit (Quit: Leaving.)
2015-08-28 09:46:24	erisco	bitemyapp, well I might know pipes by later too
2015-08-28 09:46:35	-->	EvanR (~evan@unaffiliated/evanr) has joined #haskell
2015-08-28 09:46:58	-->	MrScout (~MrScout@unaffiliated/mrscout) has joined #haskell
2015-08-28 09:47:00	<--	b0oh (~b0oh@h-72-214.a137.corp.bahnhof.se) has quit
2015-08-28 09:47:10	<--	yqt (~yqt@81.88.230.28) has quit (Ping timeout: 240 seconds)
2015-08-28 09:47:12	-->	raichoo (~raichoo@i59F6AF2D.versanet.de) has joined #haskell
2015-08-28 09:47:42	<--	mkster (~mkster@i577B47DA.versanet.de) has quit (Ping timeout: 244 seconds)
2015-08-28 09:48:13	<--	Iskarlar_ (~Iskarlar@D9641F32.static.ziggozakelijk.nl) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-28 09:48:20	<--	emc2 (~emc2@208.71.37.101) has quit (Ping timeout: 246 seconds)
2015-08-28 09:49:34	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 250 seconds)
2015-08-28 09:50:01	<--	rcosta (~rcosta@217.38.91.209) has quit (Remote host closed the connection)
2015-08-28 09:50:12	<--	lucasbrunialti (~lucasbrun@201.6.225.38) has quit (Remote host closed the connection)
2015-08-28 09:50:59	<--	joehh (~joe@203-206-108-209.dyn.iinet.net.au) has quit (Ping timeout: 250 seconds)
2015-08-28 09:51:03	<--	michel_slm (uid16025@gateway/web/irccloud.com/x-cwhbtunuegidjvsk) has quit (Quit: Connection closed for inactivity)
2015-08-28 09:51:47	-->	moplove_ (~moplove@67.78.34.138) has joined #haskell
2015-08-28 09:52:46	<--	ldbrandy (~Adium@2620:10d:c090:200::5:dfef) has quit (Quit: Leaving.)
2015-08-28 09:53:17	-->	voltalio (~voltalio@173-14-36-210-Michigan.hfc.comcastbusiness.net) has joined #haskell
2015-08-28 09:56:59	--	irc: disconnected from server
2015-08-28 09:57:27	-->	RouxTheDay (~RouxTheDa@199.21.87.214) has joined #haskell
2015-08-28 09:57:27	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-28 09:57:27	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-28 09:57:27	--	Channel #haskell: 1505 nicks (1 op, 0 voices, 1504 normals)
2015-08-28 09:57:27	--	URL for #haskell: http://www.haskell.org/
2015-08-28 09:57:27	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-28 09:57:37	-->	trism (~jconti@unaffiliated/trism) has joined #haskell
2015-08-28 09:58:20	<--	arenz (~arenz@185.44.133.227) has quit (Ping timeout: 250 seconds)
2015-08-28 09:58:47	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 272 seconds)
2015-08-28 10:00:26	--	irc: disconnected from server
2015-08-28 10:02:22	-->	RouxTheDay (~RouxTheDa@199.21.87.214) has joined #haskell
2015-08-28 10:02:22	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-28 10:02:22	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-28 10:02:22	--	Channel #haskell: 1502 nicks (1 op, 0 voices, 1501 normals)
2015-08-28 10:02:22	--	URL for #haskell: http://www.haskell.org/
2015-08-28 10:02:22	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-28 10:02:32	<--	juanpaucar (~juanpauca@181.39.194.178) has quit (Remote host closed the connection)
2015-08-28 10:03:31	aweinstock	erisco: type-alias (Producer (Either (DecodeError m) Text) m) to something shorter?
2015-08-28 10:03:33	-->	pi3r18 (~pi3r@39.22-201-80.adsl-dyn.isp.belgacom.be) has joined #haskell
2015-08-28 10:03:43	-->	tennix (~ztennix@124.64.137.45) has joined #haskell
2015-08-28 10:03:43	<--	pi3r18 (~pi3r@39.22-201-80.adsl-dyn.isp.belgacom.be) has quit (Client Quit)
2015-08-28 10:03:44	<--	rfmind_ (~ruslan@2a02:a03f:425:6400:28c:faff:fe88:26cf) has quit (Ping timeout: 244 seconds)
2015-08-28 10:03:46	<--	tennix (~ztennix@124.64.137.45) has quit (Changing host)
2015-08-28 10:03:46	-->	tennix (~ztennix@unaffiliated/tennix) has joined #haskell
2015-08-28 10:04:17	<--	rfmind (~ruslan@250.105-64-87.adsl-dyn.isp.belgacom.be) has quit (Ping timeout: 255 seconds)
2015-08-28 10:04:30	-->	rfmind (~ruslan@250.105-64-87.adsl-dyn.isp.belgacom.be) has joined #haskell
2015-08-28 10:04:33	aweinstock	(since it appears multiple times in the signature)
2015-08-28 10:04:34	-->	jinblack (~jinblack@ip184-189-234-229.sb.sd.cox.net) has joined #haskell
2015-08-28 10:04:35	-->	mauris (~mauris@2601:58a:100:1dbb:c095:e98d:7a0f:49f2) has joined #haskell
2015-08-28 10:04:35	<--	mauris (~mauris@2601:58a:100:1dbb:c095:e98d:7a0f:49f2) has quit (Changing host)
2015-08-28 10:04:35	-->	mauris (~mauris@unaffiliated/nooodl) has joined #haskell
2015-08-28 10:04:50	erisco	:t join :: Either a (Either b c) -> Either b c
2015-08-28 10:04:51	lambdabot	    Couldn't match type ‘a1’ with ‘b1’
2015-08-28 10:04:51	lambdabot	      ‘a1’ is a rigid type variable bound by
2015-08-28 10:04:51	lambdabot	           an expression type signature:
2015-08-28 10:04:55	<--	wei2912 (~wei2912@unaffiliated/wei2912) has quit (Remote host closed the connection)
2015-08-28 10:04:59	<--	mariusmarius (~mariusmar@2620:10d:c0a1:f80::c:f22b) has quit (Quit: Leaving.)
2015-08-28 10:05:12	-->	rfmind_ (~ruslan@2a02:a03f:425:6400:28c:faff:fe88:26cf) has joined #haskell
2015-08-28 10:05:38	erisco	oh I see what it did, silly ghc
2015-08-28 10:06:01	<--	Freefood (~freefood@2a02:a03f:163a:9700:f9a9:7729:64a4:625e) has quit (Ping timeout: 252 seconds)
2015-08-28 10:06:05	erisco	of course if 'a' is type classed it won't care, it will just add that as a constraint
2015-08-28 10:06:32	erisco	:t join :: (Functor a) => Either a (Either b c) -> Either b c
2015-08-28 10:06:33	lambdabot	    Expecting one more argument to ‘a’
2015-08-28 10:06:33	lambdabot	    The first argument of ‘Either’ should have kind ‘*’,
2015-08-28 10:06:33	lambdabot	      but ‘a’ has kind ‘* -> *’
2015-08-28 10:06:38	erisco	right right
2015-08-28 10:06:47	erisco	:t join :: (Monoid a) => Either a (Either b c) -> Either b c
2015-08-28 10:06:48	lambdabot	    Couldn't match type ‘a1’ with ‘b1’
2015-08-28 10:06:49	lambdabot	      ‘a1’ is a rigid type variable bound by
2015-08-28 10:06:49	lambdabot	           an expression type signature:
2015-08-28 10:06:52	erisco	oh come on
2015-08-28 10:06:56	-->	osa1 (~omer@129-79-241-173.dhcp-bl.indiana.edu) has joined #haskell
2015-08-28 10:06:58	erisco	well something like this is happening
2015-08-28 10:07:04	-->	nomeata (~jojo@nomeata.de) has joined #haskell
2015-08-28 10:07:22	erisco	:t join :: (Monoid a) => Either a (Either Int c) -> Either Int c
2015-08-28 10:07:24	lambdabot	    Couldn't match type ‘a1’ with ‘Int’
2015-08-28 10:07:25	lambdabot	      ‘a1’ is a rigid type variable bound by
2015-08-28 10:07:25	lambdabot	           an expression type signature:
2015-08-28 10:07:43	erisco	what in the actual
2015-08-28 10:08:02	<--	davidfetter (~chatzilla@2601:643:8100:f00:ca60:ff:fe2a:7216) has quit (Disconnected by services)
2015-08-28 10:08:16	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 246 seconds)
2015-08-28 10:08:22	mauke	join :: m (m a) -> m a, not m' (m a) -> m a
2015-08-28 10:08:34	<--	edon (~user@albalug/edon) has quit (Ping timeout: 260 seconds)
2015-08-28 10:08:39	-->	davidfetter_ (~chatzilla@2601:643:8100:f00:ca60:ff:fe2a:7216) has joined #haskell
2015-08-28 10:08:42	--	davidfetter_ is now known as davidfetter
2015-08-28 10:09:40	-->	tsou (~tsou@unaffiliated/tsou) has joined #haskell
2015-08-28 10:09:45	aweinstock	:t join :: Either a (Either a b) -> Either a b
2015-08-28 10:09:46	lambdabot	Either a (Either a b) -> Either a b
2015-08-28 10:10:05	erisco	why is this happening
2015-08-28 10:10:25	<--	rwiggins (~rwiggins@unaffiliated/rwiggins) has quit (Quit: Quitting)
2015-08-28 10:10:55	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-28 10:11:03	arkeet	:t return :: b -> Either a b
2015-08-28 10:11:04	lambdabot	b -> Either a b
2015-08-28 10:11:07	<--	albeit (~albeit___@184.69.201.250) has quit (Remote host closed the connection)
2015-08-28 10:11:13	arkeet	> (return :: b -> Either Int b) 0
2015-08-28 10:11:15	lambdabot	 Right 0
2015-08-28 10:11:19	arkeet	oh yeah.
2015-08-28 10:11:27	arkeet	brain not working oops.
2015-08-28 10:11:38	<--	Swizec (~swizec@c-67-164-98-169.hsd1.ca.comcast.net) has quit (Quit: Computer has gone to sleep.)
2015-08-28 10:12:46	<--	twb (~twb@203.7.155.119) has quit (Remote host closed the connection)
2015-08-28 10:12:52	-->	twanvl (~twanvl@dhcp-077-250-086-217.chello.nl) has joined #haskell
2015-08-28 10:13:01	erisco	it is the fact I am annotating it
2015-08-28 10:13:33	<--	frodwith (~pdriver@cpe-72-128-209-23.wi.res.rr.com) has quit (Remote host closed the connection)
2015-08-28 10:13:37	erisco	:t join :: (Monoid Int) => Either Int (Either Int c) -> Either Int c
2015-08-28 10:13:38	lambdabot	    No instance for (Monoid Int)
2015-08-28 10:13:38	lambdabot	      arising from an expression type signature
2015-08-28 10:13:38	lambdabot	    In the expression:
2015-08-28 10:13:42	-->	tennix (~ztennix@unaffiliated/tennix) has joined #haskell
2015-08-28 10:13:47	erisco	well fine, ghci doesn't complain for this though
2015-08-28 10:13:58	erisco	but whatever, that is the point
2015-08-28 10:13:59	<--	jinblack (~jinblack@ip184-189-234-229.sb.sd.cox.net) has quit (Ping timeout: 272 seconds)
2015-08-28 10:14:00	-->	erikd (~erikd@S010698fc11652497.vc.shawcable.net) has joined #haskell
2015-08-28 10:14:05	<--	kolko (~kolko@46.48.58.17) has quit (Ping timeout: 240 seconds)
2015-08-28 10:14:14	<--	u999 (5965b74a@gateway/web/freenode/ip.89.101.183.74) has quit (Quit: Page closed)
2015-08-28 10:14:15	<--	alaunus (~connor@antharia.dhcp.egr.msu.edu) has quit (Ping timeout: 250 seconds)
2015-08-28 10:14:31	erisco	you've got something where the variable is still free to pick, so it picks a = Int
2015-08-28 10:14:35	erisco	then adds the constraint Monoid Int
2015-08-28 10:14:55	erisco	which is not actually satisfiable but it might not tell you :P
2015-08-28 10:15:17	<--	brulo (~brulo@cpe-76-170-76-201.socal.res.rr.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-28 10:15:38	-->	archdria (~archdria@85-69-116-77.rev.numericable.fr) has joined #haskell
2015-08-28 10:16:36	-->	Iskarlar (~Iskarlar@D9641F32.static.ziggozakelijk.nl) has joined #haskell
2015-08-28 10:17:08	-->	brulo (~brulo@cpe-76-170-76-201.socal.res.rr.com) has joined #haskell
2015-08-28 10:17:47	<--	strburst (~allen@lawn-128-61-26-37.lawn.gatech.edu) has quit (Ping timeout: 264 seconds)
2015-08-28 10:17:51	-->	frerich (~frerich@kde/raabe) has joined #haskell
2015-08-28 10:18:09	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 240 seconds)
2015-08-28 10:18:18	-->	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has joined #haskell
2015-08-28 10:19:57	<--	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has quit (Remote host closed the connection)
2015-08-28 10:20:00	-->	caumeslasal (~Thunderbi@mar92-10-82-239-65-141.fbx.proxad.net) has joined #haskell
2015-08-28 10:23:53	<--	caumeslasal (~Thunderbi@mar92-10-82-239-65-141.fbx.proxad.net) has quit (Remote host closed the connection)
2015-08-28 10:23:53	erisco	okay well this is a pain
2015-08-28 10:23:53	erisco	:t try
2015-08-28 10:23:53	lambdabot	Exception e => IO a -> IO (Either e a)
2015-08-28 10:23:53	erisco	see, what Exception type will this be
2015-08-28 10:23:53	erisco	I don't get it
2015-08-28 10:23:53	-->	caumeslasal (~Thunderbi@mar92-10-82-239-65-141.fbx.proxad.net) has joined #haskell
2015-08-28 10:23:53	<--	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has quit (Ping timeout: 260 seconds)
2015-08-28 10:23:53	-->	ndrei (~avo@37.163.196.131) has joined #haskell
2015-08-28 10:23:53	<--	yamadapc (~yamadapc@179.208.211.248) has quit (Remote host closed the connection)
2015-08-28 10:23:53	aweinstock	erisco: I think it's the callee's choice?
2015-08-28 10:23:53	barrucadu	Whatever you need it to be. If GHC can't figure it out from the context, it'll ask you for a type signature.
2015-08-28 10:23:53	d-snp	is the C-- compiler written in haskell?
2015-08-28 10:23:53	<--	cyborg-one (~cyborg-on@130-0-62-179.broadband.tenet.odessa.ua) has quit (Ping timeout: 244 seconds)
2015-08-28 10:23:56	-->	SrPx (b3b1270e@gateway/web/freenode/ip.179.177.39.14) has joined #haskell
2015-08-28 10:23:59	-->	tennix (~ztennix@unaffiliated/tennix) has joined #haskell
2015-08-28 10:24:00	erisco	how can it be whatever I want it to be
2015-08-28 10:24:03	barrucadu	If the wrapped `IO a` throws an exception of a different type, then `try` won't catch it
2015-08-28 10:24:11	<--	basearcher (~textual@208.66.26.41) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-28 10:24:26	erisco	what? geezus
2015-08-28 10:24:36	shachaf	The Cmm compiler is.
2015-08-28 10:24:43	<--	mattyw (~mattyw@host86-129-77-252.range86-129.btcentralplus.com) has quit (Quit: Leaving)
2015-08-28 10:24:48	barrucadu	You can use the `SomeException` type to match all exceptions
2015-08-28 10:24:57	-->	Geraldine (~mc@148.81.117.56) has joined #haskell
2015-08-28 10:25:22	d-snp	thanks shachaf I'll try and find out how I get it :P
2015-08-28 10:25:43	-->	cognominal (~cognomina@87-231-91-9.rev.numericable.fr) has joined #haskell
2015-08-28 10:25:49	<--	itsu (~user@modemcable009.244-161-184.mc.videotron.ca) has quit (Ping timeout: 245 seconds)
2015-08-28 10:26:11	-->	Jackneill (~Jackneill@unaffiliated/jackneill) has joined #haskell
2015-08-28 10:26:12	-->	laar (~lars@ip60-210-173-82.adsl2.static.versatel.nl) has joined #haskell
2015-08-28 10:26:15	erisco	but I can't know what kind of exceptions will be thrown
2015-08-28 10:26:30	athan	d-snp: Check out comp-cert if you want to see a sweet C compiler :)
2015-08-28 10:26:31	 *	erisco sighs
2015-08-28 10:26:45	barrucadu	Ideally if a thing might throw exceptions, the documentation will tell you which ones
2015-08-28 10:26:50	 *	barrucadu doesn't like exceptions
2015-08-28 10:26:53	shachaf	d-snp: With GHC.
2015-08-28 10:27:17	<--	athan (~athan@174-29-90-143.hlrn.qwest.net) has quit (Quit: Konversation terminated!)
2015-08-28 10:27:25	d-snp	shachaf: it's in the main ghc.git right?
2015-08-28 10:27:27	erisco	Java might actually do this better
2015-08-28 10:27:39	-->	ldbrandy (~Adium@2620:10d:c090:200::6:abcf) has joined #haskell
2015-08-28 10:28:08	-->	Welkin (~Welkin@rrcs-97-78-71-195.se.biz.rr.com) has joined #haskell
2015-08-28 10:28:33	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 272 seconds)
2015-08-28 10:28:41	d-snp	yes java does it better
2015-08-28 10:29:05	<--	srenatus (uid322@gateway/web/irccloud.com/x-jhadahsjjukcwwvp) has quit (Quit: Connection closed for inactivity)
2015-08-28 10:29:12	d-snp	it's the most crazy thing in haskell, a real wart if you ask me
2015-08-28 10:29:24	-->	gothicsouth (~gothicsou@cpe-76-177-66-223.natcky.res.rr.com) has joined #haskell
2015-08-28 10:29:49	d-snp	it's also one of Javas best features, C# not including it was a populist move
2015-08-28 10:29:52	d-snp	so there, opinions :D
2015-08-28 10:29:57	-->	basearcher (~textual@208.66.26.41) has joined #haskell
2015-08-28 10:30:05	<--	jgt (~jgt@46.175.231.179.maxnet.net.pl) has quit (Ping timeout: 244 seconds)
2015-08-28 10:30:18	-->	HarveyPwca (~HarveyPwc@50-196-205-130-static.hfc.comcastbusiness.net) has joined #haskell
2015-08-28 10:30:47	-->	dm3 (~dm3@78.60.230.119) has joined #haskell
2015-08-28 10:31:19	-->	ptcek (~ptcek@89.239.24.150) has joined #haskell
2015-08-28 10:31:36	-->	Sly1986 (~sly1986@83.246.218.42) has joined #haskell
2015-08-28 10:31:58	-->	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has joined #haskell
2015-08-28 10:32:11	erisco	I don't like exceptions either but that is what IO gives you
2015-08-28 10:32:17	erisco	I am going to guess these are all IOException or something
2015-08-28 10:32:22	erisco	then I don't have to deal with any other types
2015-08-28 10:32:23	erisco	I hope
2015-08-28 18:16:48	--	irc: disconnected from server
2015-08-28 18:17:03	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-28 18:17:03	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-28 18:17:03	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-28 18:17:03	--	Channel #haskell: 1431 nicks (1 op, 0 voices, 1430 normals)
2015-08-28 18:17:03	--	URL for #haskell: http://www.haskell.org/
2015-08-28 18:17:03	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-28 18:18:21	<--	vmeson (~rmacleod@24-212-184-107.cable.teksavvy.com) has quit (Quit: Konversation terminated!)
2015-08-28 18:18:53	-->	qwitwa (~qwitwa@host86-183-31-41.range86-183.btcentralplus.com) has joined #haskell
2015-08-28 18:19:00	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Ping timeout: 264 seconds)
2015-08-28 18:19:03	-->	rodlogic (~rodlogic@71.235.61.168) has joined #haskell
2015-08-28 19:26:41	--	irc: disconnected from server
2015-08-28 19:27:05	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-28 19:27:05	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-28 19:27:05	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-28 19:27:05	--	Channel #haskell: 1415 nicks (1 op, 0 voices, 1414 normals)
2015-08-28 19:27:05	--	URL for #haskell: http://www.haskell.org/
2015-08-28 19:27:05	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-28 19:27:22	<--	kosorith (~kosorith@159-205-252-137.adsl.inetia.pl) has quit (Client Quit)
2015-08-28 19:27:44	-->	thays (~thays@c-50-143-164-143.hsd1.ca.comcast.net) has joined #haskell
2015-08-28 20:32:55	--	irc: disconnected from server
2015-08-28 20:33:13	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:4184:2f5b:43b5:6ccb) has joined #haskell
2015-08-28 20:33:13	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-28 20:33:13	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-28 20:33:14	--	Channel #haskell: 1398 nicks (1 op, 0 voices, 1397 normals)
2015-08-28 20:33:14	--	URL for #haskell: http://www.haskell.org/
2015-08-28 20:33:14	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-28 20:34:02	<--	gabriel_ (~gabriel@r167-62-73-167.dialup.adsl.anteldata.net.uy) has quit (Ping timeout: 272 seconds)
2015-08-28 20:36:04	-->	bgamari (~bgamari@HSI-KBW-109-193-204-037.hsi7.kabel-badenwuerttemberg.de) has joined #haskell
2015-08-28 20:36:34	-->	gothicsouth (~gothicsou@cpe-76-177-66-223.natcky.res.rr.com) has joined #haskell
2015-08-28 20:38:06	<--	fuzzyhorns (~fuzzyhorn@73.38.57.191) has quit (Remote host closed the connection)
2015-08-28 20:38:29	<--	bgamari (~bgamari@HSI-KBW-109-193-204-037.hsi7.kabel-badenwuerttemberg.de) has quit (Excess Flood)
2015-08-28 20:38:29	<--	NeverDie (~NeverDie@cpe-184-152-22-98.nyc.res.rr.com) has quit (Quit: I'm off to sleep. ZZZzzz…)
2015-08-28 20:38:30	<--	trism (~jconti@unaffiliated/trism) has quit (Remote host closed the connection)
2015-08-28 20:38:39	-->	fuzzyhorns (~fuzzyhorn@73.38.57.191) has joined #haskell
2015-08-28 20:39:58	<--	Taejo (~max@216.15.33.241) has quit (Ping timeout: 260 seconds)
2015-08-28 20:50:41	--	irc: disconnected from server
2015-08-28 20:50:59	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:85ff:5fb1:1084:2f04) has joined #haskell
2015-08-28 20:50:59	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-28 20:50:59	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-28 20:50:59	--	Channel #haskell: 1401 nicks (1 op, 0 voices, 1400 normals)
2015-08-28 20:50:59	--	URL for #haskell: http://www.haskell.org/
2015-08-28 20:50:59	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-28 20:51:35	<--	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 246 seconds)
2015-08-28 20:51:35	<--	davidfetter (~chatzilla@2601:643:8100:f00:ca60:ff:fe2a:7216) has quit (Ping timeout: 246 seconds)
2015-08-28 20:51:35	<--	cmccann (~cam@2601:541:4200:82b3:31ab:fcee:5969:91c9) has quit (Ping timeout: 246 seconds)
2015-08-28 20:51:36	-->	Stratege (~Stratege@unaffiliated/stratege) has joined #haskell
2015-08-28 20:52:48	<--	jeadre (~jeadre@li1421-113.members.linode.com) has quit (Remote host closed the connection)
2015-08-28 20:53:10	<--	bgamari (~bgamari@HSI-KBW-109-193-204-037.hsi7.kabel-badenwuerttemberg.de) has quit (Ping timeout: 244 seconds)
2015-08-28 20:54:16	--	paf31 is now known as paf31_away
2015-08-28 20:54:44	-->	jeadre (~jeadre@li1421-113.members.linode.com) has joined #haskell
2015-08-28 20:54:50	-->	bgamari (~bgamari@HSI-KBW-109-193-204-037.hsi7.kabel-badenwuerttemberg.de) has joined #haskell
2015-08-28 20:54:51	Welkin	are there any good resources on type equality constraints?
2015-08-28 20:55:11	Welkin	the https://downloads.haskell.org/~ghc/7.10.2/docs/html/users_guide/equality-constraints.html
2015-08-28 20:55:15	Welkin	this is prety sparse
2015-08-28 20:55:25	-->	mauke_ (~mauke@p3m/member/mauke) has joined #haskell
2015-08-28 20:56:04	-->	nemesis9 (~tony@184-98-92-8.phnx.qwest.net) has joined #haskell
2015-08-28 20:56:18	<--	bgamari (~bgamari@HSI-KBW-109-193-204-037.hsi7.kabel-badenwuerttemberg.de) has quit (Max SendQ exceeded)
2015-08-28 20:56:31	-->	jyh (uid107006@gateway/web/irccloud.com/x-yhoxkipvxxxdykqz) has joined #haskell
2015-08-28 20:56:49	<--	pacak (~pacak@2401:7400:e800:756f:8d91:7718:a1e8:5f3b) has quit (Ping timeout: 244 seconds)
2015-08-28 20:57:13	-->	Tiktalik (~tiktalik@unaffiliated/tiktalik) has joined #haskell
2015-08-28 20:57:14	<--	ansible1 (~kvirc@c-73-217-98-159.hsd1.co.comcast.net) has quit (Ping timeout: 260 seconds)
2015-08-28 20:58:33	-->	bgamari (~bgamari@HSI-KBW-109-193-204-037.hsi7.kabel-badenwuerttemberg.de) has joined #haskell
2015-08-28 20:58:41	<--	mauke (~mauke@p3m/member/mauke) has quit (Ping timeout: 252 seconds)
2015-08-28 20:58:50	--	mauke_ is now known as mauke
2015-08-28 21:01:28	<--	vili (~nick@2605:a000:ffc0:44:1da3:8295:212f:ece1) has quit (Ping timeout: 244 seconds)
2015-08-28 21:01:46	-->	vili (~nick@2605:a000:ffc0:44:1da3:8295:212f:ece1) has joined #haskell
2015-08-28 21:02:05	-->	samrat (~samrat@123.236.183.215) has joined #haskell
2015-08-28 21:02:10	-->	ezyang (~ezyang@biohazard-cafe.mit.edu) has joined #haskell
2015-08-28 21:02:36	tmillc	There used to be a link in the title containing a very good commentary on the different sites/methods of learning haskell
2015-08-28 21:02:47	ezyang	Is there a convenient way to read a file into a (Ptr a, Int); ala hGetBuf but automatically figuring out what the right buffer size is? 
2015-08-28 21:03:23	<--	nemesis9 (~tony@184-98-92-8.phnx.qwest.net) has left #haskell
2015-08-28 21:03:28	<--	johtso (uid563@gateway/web/irccloud.com/x-omltywehzhopiasd) has quit (Quit: Connection closed for inactivity)
2015-08-28 21:03:40	-->	tristanp (~tristanp@2601:602:8a00:1310::4) has joined #haskell
2015-08-28 21:04:07	-->	pacak (~pacak@2401:7400:e800:756f:8d91:7718:a1e8:5f3b) has joined #haskell
2015-08-28 21:04:20	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-28 21:04:22	ezyang	oh, bytestring has the stuff I need 
2015-08-28 21:05:14	-->	davidfetter (~chatzilla@2601:643:8100:f00:ca60:ff:fe2a:7216) has joined #haskell
2015-08-28 21:05:14	-->	cmccann (~cam@2601:541:4200:82b3:31ab:fcee:5969:91c9) has joined #haskell
2015-08-28 21:06:15	<--	thays (~thays@c-50-143-164-143.hsd1.ca.comcast.net) has quit (Ping timeout: 245 seconds)
2015-08-28 21:06:19	-->	nshepperd (~nshepperd@168.1.75.55-static.reverse.softlayer.com) has joined #haskell
2015-08-28 21:09:15	-->	EunChe (~eunche@221.154.182.251) has joined #haskell
2015-08-28 21:09:27	ReinH	 ezyang I was going to suggest mmap
2015-08-28 21:09:51	-->	voltalio (~voltalio@d28-23-148-121.dim.wideopenwest.com) has joined #haskell
2015-08-28 21:10:06	<--	voltalio (~voltalio@d28-23-148-121.dim.wideopenwest.com) has quit (Client Quit)
2015-08-28 21:10:12	-->	joco42_ (~joco42@dsl-hkibrasgw4-58c03a-80.dhcp.inet.fi) has joined #haskell
2015-08-28 21:10:16	--	paf31_away is now known as paf31
2015-08-28 21:12:08	ezyang	not cross platform 
2015-08-28 21:12:31	ezyang	if there is a function in GHC's boot libraries that does this portably I'd love to know :) 
2015-08-28 21:15:23	--	irc: disconnected from server
2015-08-28 21:15:41	-->	RouxTheD1 (~RouxTheDa@2601:645:8101:9a39:3965:b5f9:c333:e5ee) has joined #haskell
2015-08-28 21:15:41	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-28 21:15:41	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-28 21:15:42	--	Channel #haskell: 1405 nicks (1 op, 0 voices, 1404 normals)
2015-08-28 21:15:42	--	URL for #haskell: http://www.haskell.org/
2015-08-28 21:15:42	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-28 21:16:04	<--	skulls (~username@46.166.190.148) has quit (Quit: skulls)
2015-08-28 21:16:05	<--	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:85ff:5fb1:1084:2f04) has quit (Ping timeout: 240 seconds)
2015-08-28 21:16:39	-->	skulls (~username@gateway/vpn/privateinternetaccess/skulls) has joined #haskell
2015-08-28 21:17:28	<--	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 244 seconds)
2015-08-28 21:18:41	--	paf31 is now known as paf31_away
2015-08-28 21:19:01	<--	darenthis (~darenthis@cpc76742-dals23-2-0-cust353.20-2.cable.virginm.net) has quit (Ping timeout: 244 seconds)
2015-08-28 21:19:31	<--	saml_ (~saml@cpe-24-102-97-97.nyc.res.rr.com) has quit (Quit: Leaving)
2015-08-29 06:46:08	--	irc: disconnected from server
2015-08-29 06:46:26	-->	RouxTheD1 (~RouxTheDa@2601:645:8101:9a39:d48:ed90:2353:cdb7) has joined #haskell
2015-08-29 06:46:26	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-29 06:46:26	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-29 06:46:26	--	Channel #haskell: 1423 nicks (1 op, 0 voices, 1422 normals)
2015-08-29 06:46:26	--	Notice(hobana.freenode.net): [freenode-info] channel flooding and no channel staff around to help? Please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
2015-08-29 06:46:26	--	URL for #haskell: http://www.haskell.org/
2015-08-29 06:46:27	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-29 06:46:44	-->	dh (dh@bsd.ee) has joined #haskell
2015-08-29 06:47:13	<--	nour (~nour@x5ce51da9.dyn.telefonica.de) has quit (Ping timeout: 264 seconds)
2015-08-29 06:47:32	<--	Hex189 (~Hex@183.82.193.242) has quit (Client Quit)
2015-08-29 06:47:57	-->	cofo (uid86997@gateway/web/irccloud.com/x-gzsfpopgvcjsrctu) has joined #haskell
2015-08-29 06:48:14	-->	hamid (~nithp@unaffiliated/hamid) has joined #haskell
2015-08-29 06:48:16	 *	hackagebot bitx-bitcoin 0.5.0.1 - A Haskell library for working with the BitX bitcoin exchange.  https://hackage.haskell.org/package/bitx-bitcoin-0.5.0.1 (tebello_thejane)
2015-08-29 06:48:25	-->	Aruro (~alex@AAnnecy-653-1-80-43.w90-41.abo.wanadoo.fr) has joined #haskell
2015-08-29 06:48:28	<--	cyborg-one (~cyborg-on@130-0-62-179.broadband.tenet.odessa.ua) has quit (Quit: cyborg-one)
2015-08-29 06:50:00	-->	eatsfoobars (~eatsfooba@ppp-94-69-105-96.home.otenet.gr) has joined #haskell
2015-08-29 06:50:35	<--	eatsfoobars (~eatsfooba@ppp-94-69-105-96.home.otenet.gr) has quit (Max SendQ exceeded)
2015-08-29 06:51:12	<--	cita (~cita@unaffiliated/cita) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-29 06:51:30	<--	davidfetter (~chatzilla@2601:643:8100:f00:ca60:ff:fe2a:7216) has quit (Ping timeout: 246 seconds)
2015-08-29 06:51:51	-->	cognominal (~cognomina@87-231-91-9.rev.numericable.fr) has joined #haskell
2015-08-29 06:52:12	<--	funfunctor (~edward@CPE-121-211-246-20.hhui7.cht.bigpond.net.au) has quit (Ping timeout: 240 seconds)
2015-08-29 06:53:03	-->	umib0zu (~umib0zu@146-115-43-219.c3-0.abr-ubr1.sbo-abr.ma.cable.rcn.com) has joined #haskell
2015-08-29 06:53:22	<--	slack1256 (~slack1256@190-21-17-200.baf.movistar.cl) has quit (Quit: biking away)
2015-08-29 06:54:04	<--	burp (~quassel@188.165.218.18) has quit (Read error: Connection reset by peer)
2015-08-29 06:54:10	-->	Jeanne-Kamikaze (~Jeanne-Ka@184.Red-88-9-37.dynamicIP.rima-tde.net) has joined #haskell
2015-08-29 06:54:13	-->	burp (~quassel@ns337126.ip-188-165-218.eu) has joined #haskell
2015-08-29 06:54:18	-->	Ayey_ (~rune@0135301590.0.fullrate.dk) has joined #haskell
2015-08-29 06:56:27	<--	rfmind_ (~ruslan@2a02:a03f:425:6400:28c:faff:fe88:26cf) has quit (Ping timeout: 240 seconds)
2015-08-29 06:56:28	-->	foreignFunction (~ai@ip-4761.sunline.net.ua) has joined #haskell
2015-08-29 06:57:05	<--	burp (~quassel@ns337126.ip-188-165-218.eu) has quit (Client Quit)
2015-08-29 06:57:36	-->	Big_G (~Big_G@c-50-181-217-15.hsd1.wa.comcast.net) has joined #haskell
2015-08-29 06:58:13	-->	amiri_ (~amiri@cpe-104-174-60-215.socal.res.rr.com) has joined #haskell
2015-08-29 06:58:18	<--	Erlkonig (~Erlkonig@p3191087-ipngn19001marunouchi.tokyo.ocn.ne.jp) has quit (Ping timeout: 246 seconds)
2015-08-29 06:58:51	<--	Ayey_ (~rune@0135301590.0.fullrate.dk) has quit (Ping timeout: 240 seconds)
2015-08-29 06:59:39	-->	avn (~avn@78-56-108-78.static.zebra.lt) has joined #haskell
2015-08-29 06:59:49	<--	kdlv (~aa47f8@h187n14-far-a13.ias.bredband.telia.com) has quit (Ping timeout: 264 seconds)
2015-08-29 07:00:20	-->	burp (~quassel@ns337126.ip-188-165-218.eu) has joined #haskell
2015-08-29 07:19:30	--	irc: disconnected from server
2015-08-29 07:19:49	-->	RouxTheD1 (~RouxTheDa@2601:645:8101:9a39:70ca:d660:631a:56dd) has joined #haskell
2015-08-29 07:19:49	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-29 07:19:49	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:26
2015-08-29 07:19:49	--	Channel #haskell: 1430 nicks (1 op, 0 voices, 1429 normals)
2015-08-29 07:19:49	--	Notice(leguin.freenode.net): [freenode-info] channel flooding and no channel staff around to help? Please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
2015-08-29 07:19:49	--	URL for #haskell: http://www.haskell.org/
2015-08-29 07:19:49	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-29 07:19:53	-->	witt3rd (~witt3rd@70-89-112-141-Thayer-Residential-wa.hfc.comcastbusiness.net) has joined #haskell
2015-08-29 07:20:08	<--	jutaro (~jutaro@p200300455C7930A335434A48B9EEC5D0.dip0.t-ipconnect.de) has left #haskell
2015-08-29 07:21:04	<--	tinyblak (~tinyblak@114.111.167.202) has quit (Remote host closed the connection)
2015-08-29 07:21:14	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-29 07:21:52	-->	snyrk (~snyrk@adsl-84-227-251-154.adslplus.ch) has joined #haskell
2015-08-29 07:21:53	<--	Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Read error: Connection reset by peer)
2015-08-29 07:22:04	-->	tinyblak (~tinyblak@114.111.167.202) has joined #haskell
2015-08-29 07:22:09	-->	codedmart (~codedmart@c-174-52-158-160.hsd1.ut.comcast.net) has joined #haskell
2015-08-29 07:22:32	-->	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has joined #haskell
2015-08-29 07:22:59	-->	Jackneill (~Jackneill@unaffiliated/jackneill) has joined #haskell
2015-08-29 07:24:21	-->	rpfun (~user@68.196.177.99) has joined #haskell
2015-08-29 07:25:06	<--	tinyblak (~tinyblak@114.111.167.202) has quit (Remote host closed the connection)
2015-08-29 07:25:35	-->	mac10688 (~mac10688@c-69-180-251-120.hsd1.tn.comcast.net) has joined #haskell
2015-08-29 07:25:40	<--	qubitnerd (~neutrino@unaffiliated/electron/x-8286743) has quit (Ping timeout: 250 seconds)
2015-08-29 07:26:18	<--	Freefood (~freefood@2a02:a03f:163a:9700:3c5f:58b8:1b77:bf75) has quit (Remote host closed the connection)
2015-08-29 07:26:26	-->	EvanR (~evan@unaffiliated/evanr) has joined #haskell
2015-08-29 07:26:44	-->	dgpratt_ (~dpratt71@pool-72-65-101-120.ptldme.east.myfairpoint.net) has joined #haskell
2015-08-29 07:50:29	--	irc: disconnected from server
2015-08-29 07:50:47	-->	RouxTheD1 (~RouxTheDa@2601:645:8101:9a39:f467:3447:b951:4856) has joined #haskell
2015-08-29 07:50:47	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-29 07:50:47	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-29 07:50:47	--	Channel #haskell: 1437 nicks (1 op, 0 voices, 1436 normals)
2015-08-29 07:50:47	--	URL for #haskell: http://www.haskell.org/
2015-08-29 07:50:47	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-29 07:51:45	htebalaka	is there any reason Bifunctor doesn't depend on Functor?
2015-08-29 07:51:50	<--	frerich (~frerich@kde/raabe) has quit (Remote host closed the connection)
2015-08-29 07:52:27	<--	sdfgsdfg (~sdfgsdfg@unaffiliated/sdfgsdfg) has quit (Read error: Connection reset by peer)
2015-08-29 07:53:01	<--	piezoid (~piezoid@tsv35-1-78-232-144-90.fbx.proxad.net) has quit (Read error: Connection reset by peer)
2015-08-29 07:53:02	-->	piezo (~piezoid@tsv35-1-78-232-144-90.fbx.proxad.net) has joined #haskell
2015-08-29 07:53:02	--	piezo is now known as piezoid
2015-08-29 07:53:10	srhb	htebalaka: The kinds don't match.
2015-08-29 07:53:52	srhb	in class Bifunctor p, p :: * -> * -> *, but in Functor f, f :: * -> *
2015-08-29 07:54:10	<--	kritzcreek (5d81c9bc@gateway/web/cgi-irc/kiwiirc.com/ip.93.129.201.188) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-08-29 07:54:15	htebalaka	that didn't occur to me. i guess you can't do "class Functor (f a) => Bifunctor f"
2015-08-29 08:40:09	--	irc: disconnected from server
2015-08-29 08:40:36	-->	RouxTheD1 (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-29 08:40:36	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-29 08:40:36	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-29 08:40:36	--	Channel #haskell: 1438 nicks (1 op, 0 voices, 1437 normals)
2015-08-29 08:40:36	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-29 08:40:36	--	URL for #haskell: http://www.haskell.org/
2015-08-29 08:40:41	DrGamatos	cause with that in mind, i do not know if i should have a separate thread that should read from the handle constantly or not
2015-08-29 08:40:57	-->	MindlessDrone (~MindlessD@unaffiliated/mindlessdrone) has joined #haskell
2015-08-29 08:41:18	<--	cbaatz (~cb@46-127-141-225.dynamic.hispeed.ch) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-29 08:41:37	<--	pt1 (~pt1@195.29.92.186) has quit (Ping timeout: 250 seconds)
2015-08-29 08:41:40	-->	Lokathor (~Lokathor@65-129-88-40.bois.qwest.net) has joined #haskell
2015-08-29 08:41:43	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-29 08:42:00	-->	urodna (~urodna@unaffiliated/urodna) has joined #haskell
2015-08-29 08:42:24	<--	htebalaka (464216ed@gateway/web/freenode/ip.70.66.22.237) has quit (Ping timeout: 246 seconds)
2015-08-29 08:43:07	-->	cbaatz (~cb@46-127-141-225.dynamic.hispeed.ch) has joined #haskell
2015-08-29 08:43:10	<--	L8D (~L8D@cpe-70-123-155-208.austin.res.rr.com) has quit (Ping timeout: 240 seconds)
2015-08-29 08:43:11	-->	EunChe (~eunche@221.154.182.251) has joined #haskell
2015-08-29 08:43:53	<--	foreignFunction (~ai@ip-4761.sunline.net.ua) has quit (Read error: Connection reset by peer)
2015-08-29 08:44:04	-->	ulfdoz (~mary@2.164.60.13) has joined #haskell
2015-08-29 08:44:55	-->	ioanel (~Icedove@188.27.201.214) has joined #haskell
2015-08-29 08:44:57	mniip	monochrom, ok, so I've implemented the thing, now presumably comes the paper?
2015-08-29 08:45:02	<--	mizu_no_oto (~textual@rrcs-108-176-76-50.nys.biz.rr.com) has quit (Quit: Computer has gone to sleep.)
2015-08-29 08:45:14	--	paf31 is now known as paf31_away
2015-08-29 08:45:22	-->	Peaker (~Peaker@85.65.227.152.dynamic.barak-online.net) has joined #haskell
2015-08-29 08:45:56	-->	raichoo (~raichoo@mue-88-130-11-143.dsl.tropolys.de) has joined #haskell
2015-08-29 08:46:32	-->	BartAdv (uid90451@gateway/web/irccloud.com/x-yexutitmqtqqdwdx) has joined #haskell
2015-08-29 08:47:30	<--	EunChe (~eunche@221.154.182.251) has quit (Ping timeout: 240 seconds)
2015-08-29 08:48:52	-->	glguy_ (~glguy@haskell/developer/glguy) has joined #haskell
2015-08-29 08:48:53	<--	s00pcan (~chris@108-208-65-111.lightspeed.livnmi.sbcglobal.net) has quit (Ping timeout: 246 seconds)
2015-08-29 08:49:14	<--	erikd (~erikd@184.70.136.106) has quit (Ping timeout: 246 seconds)
2015-08-29 08:49:52	monochrom	perhaps what edwardk said, write some blog posts first, to practice writing.
2015-08-29 08:50:29	<--	zaquest (~zaquest@5.128.210.30) has quit (Quit: Leaving)
2015-08-29 08:50:48	-->	s00pcan (~chris@209.197.20.201) has joined #haskell
2015-08-29 08:50:49	-->	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has joined #haskell
2015-08-29 08:51:24	<--	Peaker (~Peaker@85.65.227.152.dynamic.barak-online.net) has quit (Ping timeout: 255 seconds)
2015-08-29 08:51:34	<--	xahry_ (contempt@my.barbie.wears.no-panties.org) has quit (Ping timeout: 265 seconds)
2015-08-29 08:52:01	<--	MindlessDrone (~MindlessD@unaffiliated/mindlessdrone) has quit (Ping timeout: 246 seconds)
2015-08-29 08:52:24	Welkin	formal papers are overrated :P
2015-08-29 08:52:37	<--	m104ru (~m104ru@77.241.45.39) has quit (Ping timeout: 256 seconds)
2015-08-29 08:52:40	-->	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-29 08:53:05	-->	pt1 (~pt1@195.29.92.186) has joined #haskell
2015-08-29 08:53:40	<--	Sindriav_ (~textual@88.103.123.123) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-29 08:53:48	<--	ulfdoz (~mary@2.164.60.13) has quit (Ping timeout: 264 seconds)
2015-08-29 08:54:08	-->	ecthiender (~ecthiende@unaffiliated/ecthiender) has joined #haskell
2015-08-29 08:54:28	-->	MindlessDrone (~MindlessD@unaffiliated/mindlessdrone) has joined #haskell
2015-08-29 08:55:03	-->	cchalmers (~textual@cpc1-shep13-2-0-cust104.8-3.cable.virginm.net) has joined #haskell
2015-08-29 08:55:20	-->	gothicsouth (~gothicsou@cpe-76-177-66-223.natcky.res.rr.com) has joined #haskell
2015-08-29 08:55:21	-->	xahry (contempt@my.barbie.wears.no-panties.org) has joined #haskell
2015-08-29 08:56:57	<--	fuzzyhorns (~fuzzyhorn@73.38.57.191) has quit (Read error: Connection reset by peer)
2015-08-29 08:57:28	-->	fuzzyhorns (~fuzzyhorn@73.38.57.191) has joined #haskell
2015-08-29 08:57:53	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined #haskell
2015-08-29 08:58:23	-->	zaquest (~zaquest@5.128.210.30) has joined #haskell
2015-08-29 08:58:59	<--	Zeitgeist_ (~mkn@unaffiliated/damiel) has quit (Quit: Konversation terminated!)
2015-08-29 08:59:07	-->	peldan (~peldan@c83-251-148-205.bredband.comhem.se) has joined #haskell
2015-08-29 08:59:55	<--	thunderrd_ (~thunderrd@110.78.148.23) has quit (Read error: Connection reset by peer)
2015-08-29 09:00:15	-->	thunderrd (~thunderrd@110.78.148.23) has joined #haskell
2015-08-29 09:02:03	silver	peer review isn't :P
2015-08-29 09:03:30	<--	fuzzyhorns (~fuzzyhorn@73.38.57.191) has quit (Remote host closed the connection)
2015-08-29 09:03:43	-->	laax (~laax@i59F5D2BA.versanet.de) has joined #haskell
2015-08-29 09:03:45	-->	fuzzyhorns (~fuzzyhorn@73.38.57.191) has joined #haskell
2015-08-29 09:04:35	<--	laax (~laax@i59F5D2BA.versanet.de) has left #haskell
2015-08-29 09:05:35	-->	XorSwap (~XorSwap@wnpgmb016qw-ds01-214-177.dynamic.mtsallstream.net) has joined #haskell
2015-08-29 09:06:40	-->	strburst (~allen@lawn-128-61-26-37.lawn.gatech.edu) has joined #haskell
2015-08-29 09:09:11	--	paf31_away is now known as paf31
2015-08-29 09:09:15	<--	cognominal (~cognomina@87-231-91-9.rev.numericable.fr) has quit (Quit: This computer has gone to sleep)
2015-08-29 09:09:25	<--	umib0zu (~umib0zu@146-115-43-219.c3-0.abr-ubr1.sbo-abr.ma.cable.rcn.com) has quit (Quit: umib0zu)
2015-08-29 09:10:41	-->	umib0zu (~umib0zu@146-115-43-219.c3-0.abr-ubr1.sbo-abr.ma.cable.rcn.com) has joined #haskell
2015-08-29 09:10:45	<--	Lokathor (~Lokathor@65-129-88-40.bois.qwest.net) has quit (Ping timeout: 256 seconds)
2015-08-29 09:11:21	-->	Zeitgeist_ (~mkn@unaffiliated/damiel) has joined #haskell
2015-08-29 09:11:43	-->	erkin (~erkin@unaffiliated/erkin) has joined #haskell
2015-08-29 09:12:23	-->	spopejoy (~stuart@ool-45785f12.dyn.optonline.net) has joined #haskell
2015-08-29 09:16:07	<--	kuribas (~user@94-226-249-99.access.telenet.be) has left #haskell ("ERC Version 5.3 (IRC client for Emacs)")
2015-08-29 09:16:07	-->	xenog (~xenog@95.83.250.118) has joined #haskell
2015-08-29 09:16:07	-->	not_on_fp (uid66332@gateway/web/irccloud.com/x-hvtcngaaixfwwqka) has joined #haskell
2015-08-29 09:16:07	-->	dwins (~dwins@c-73-200-135-248.hsd1.va.comcast.net) has joined #haskell
2015-08-29 09:16:07	-->	tomberek (6424595d@gateway/web/freenode/ip.100.36.89.93) has joined #haskell
2015-08-29 09:16:07	-->	xcv_ (~quassel@183.Red-83-39-220.dynamicIP.rima-tde.net) has joined #haskell
2015-08-29 09:16:07	<--	pyon (~pyon@unaffiliated/pyon) has quit (Quit: brb)
2015-08-29 09:16:34	<--	xcv_ (~quassel@183.Red-83-39-220.dynamicIP.rima-tde.net) has quit (Read error: Connection reset by peer)
2015-08-29 09:16:41	-->	xcv_ (~quassel@183.Red-83-39-220.dynamicIP.rima-tde.net) has joined #haskell
2015-08-29 09:17:13	-->	pyon (~pyon@unaffiliated/pyon) has joined #haskell
2015-08-29 09:18:59	-->	kmels (~kmels@184.62.151.186.static.intelnet.net.gt) has joined #haskell
2015-08-29 09:19:00	tomberek	conal: hello
2015-08-29 09:19:10	-->	hmrm (~hmrm@173-29-150-72.client.mchsi.com) has joined #haskell
2015-08-29 09:19:25	conal	tomberek: hi
2015-08-29 09:19:44	tomberek	i'm guessing you are conal elliot
2015-08-29 09:19:52	-->	jutaro (~jutaro@p5DDB042C.dip0.t-ipconnect.de) has joined #haskell
2015-08-29 09:19:54	-->	jiang42 (~jiang42@116.237.85.218) has joined #haskell
2015-08-29 09:20:01	conal	tomberek: close. i'm conal elliott
2015-08-29 09:20:08	tomberek	i wanted to ask about lambda-ccc
2015-08-29 09:20:25	conal	sure
2015-08-29 09:20:43	-->	P1RATEZ (piratez@unaffiliated/p1ratez) has joined #haskell
2015-08-29 09:21:00	-->	Hex189 (~Hex@h31-3-238-98.host.redstation.co.uk) has joined #haskell
2015-08-29 09:21:10	conal	tomberek: i did get your email, btw. was busy all day yesterday.
2015-08-29 09:21:17	-->	yqt (~yqt@81.88.230.28) has joined #haskell
2015-08-29 09:21:23	tomberek	i am trying to do something similar, I am starting with an arrow expression, perhaps adding to it to allow a CCC interpretation.... okay... yeah, basically that.
2015-08-29 09:22:02	conal	tomberek: i don't know what combination of CCC optimizations correspond to beta-eta normalization.
2015-08-29 09:22:06	tomberek	but it seems roundabout... is there a way to just normalize CCC without going through lambda calculus
2015-08-29 09:22:15	conal	tomberek: but i'd bet surprised if there weren't a correspondence.
2015-08-29 09:22:25	conal	(i'd *be* surprised)
2015-08-29 09:22:36	tomberek	i mean, if CCC = typed lambda calculus... there must be a way to "lift" the normalization into an algorithm directly in CCC
2015-08-29 09:22:50	conal	tomberek: that's my guess as well.
2015-08-29 09:23:14	-->	proteusguy (~proteusgu@ppp-110-168-229-245.revip5.asianet.co.th) has joined #haskell
2015-08-29 09:23:19	<--	qubozik (~qubozik@pool-68-238-241-108.phlapa.fios.verizon.net) has quit (Remote host closed the connection)
2015-08-29 09:23:27	<--	glguy_ (~glguy@haskell/developer/glguy) has quit (Quit: Bye)
2015-08-29 09:23:54	<--	bennofs (~benno@2a02:810a:8200:2934:e611:5bff:fef6:ce26) has quit (Ping timeout: 244 seconds)
2015-08-29 09:24:40	-->	Ayey_ (~rune@0135301590.0.fullrate.dk) has joined #haskell
2015-08-29 09:25:07	-->	qubozik (~qubozik@pool-68-238-241-108.phlapa.fios.verizon.net) has joined #haskell
2015-08-29 09:25:12	tomberek	i've been googling and searching, but i haven't found anything.... in the meantime, my other thought would be to just take advantage or lambda-ccc to do it. I see toCCC. Is there a "toLambda" and away to perform the normalization?  I guess: "what's the best way to hook into lambda-ccc?"
2015-08-29 09:26:00	tomberek	then all I would need is normalize = toCCC . normalizeL . toLambda for my datatype
2015-08-29 09:26:10	<--	m0rphism (~m0rphism@HSI-KBW-095-208-106-119.hsi5.kabel-badenwuerttemberg.de) has quit (Ping timeout: 240 seconds)
2015-08-29 09:27:01	<--	spopejoy (~stuart@ool-45785f12.dyn.optonline.net) has quit (Quit: spopejoy)
2015-08-29 09:27:26	conal	there isn't a toLambda, but there's probably something close. one could probably convert to the syntactic CCC, normalize, convert to a universal CCC (ie to all CCCs), and specialize to lambda calculus via the CCC interface.
2015-08-29 09:27:27	-->	callist0 (~Callisto@2602:306:3a1a:95f0:b9f3:c0d8:6a:6d65) has joined #haskell
2015-08-29 09:27:41	conal	tomberek: not sure that route came out clearly.
2015-08-29 09:28:18	<--	kakos_ (~kakos@c-50-134-213-241.hsd1.co.comcast.net) has quit (Ping timeout: 250 seconds)
2015-08-29 09:28:19	conal	tomberek: i intended lambda-ccc to have that sort of flexibility. unsure whether it does at the moment.
2015-08-29 09:28:26	tomberek	in fact, i'd be happy even with a way to do normal cartesian (not closed) normalization
2015-08-29 09:28:35	 *	hackagebot moesocks 0.1.1.10 - A functional firewall killer  https://hackage.haskell.org/package/moesocks-0.1.1.10 (JinjingWang)
2015-08-29 09:28:45	<--	malkomalko (~malkomalk@pool-71-190-38-179.nycmny.east.verizon.net) has quit (Ping timeout: 255 seconds)
2015-08-29 09:28:48	<--	ioanel (~Icedove@188.27.201.214) has quit (Remote host closed the connection)
2015-08-29 09:28:54	-->	juliohm (~julio@128.12.244.4) has joined #haskell
2015-08-29 09:28:54	<--	juliohm (~julio@128.12.244.4) has quit (Changing host)
2015-08-29 09:28:54	-->	juliohm (~julio@unaffiliated/juliohm) has joined #haskell
2015-08-29 09:28:55	-->	Freefood (~freefood@109.128.200.8) has joined #haskell
2015-08-29 09:28:56	tomberek	okay...  i also looked at Morte... it can do the lambda normalization, but i don't think it has any structure to route to-from CCC's
2015-08-29 09:29:54	--	paf31 is now known as paf31_away
2015-08-29 09:29:59	<--	qubozik (~qubozik@pool-68-238-241-108.phlapa.fios.verizon.net) has quit (Ping timeout: 260 seconds)
2015-08-29 09:30:00	<--	pyon (~pyon@unaffiliated/pyon) has quit (Quit: brb)
2015-08-29 09:30:11	-->	m0rphism (~m0rphism@HSI-KBW-095-208-106-119.hsi5.kabel-badenwuerttemberg.de) has joined #haskell
2015-08-29 09:30:14	conal	tomberek: ah, too bad.
2015-08-29 09:30:22	<--	marcus-aurelius (~quassel@p20030073AF0EA252B468AFB92FF62E74.dip0.t-ipconnect.de) has quit (Ping timeout: 246 seconds)
2015-08-29 09:30:45	-->	pyon (~pyon@unaffiliated/pyon) has joined #haskell
2015-08-29 09:30:56	-->	kakos (~kakos@c-50-134-213-241.hsd1.co.comcast.net) has joined #haskell
2015-08-29 09:30:57	-->	micmus (~micmus@acjp20.neoplus.adsl.tpnet.pl) has joined #haskell
2015-08-29 09:31:21	tomberek	would there be any value in merging, or rather extracting the common components in those two packages?
2015-08-29 09:31:33	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-29 09:31:41	conal	tomberek: i don't know, but i'll take a look at morte. thanks for the pointer.
2015-08-29 09:32:12	<--	MindlessDrone (~MindlessD@unaffiliated/mindlessdrone) has quit (Ping timeout: 252 seconds)
2015-08-29 09:32:18	<--	nkaretnikov (~nikita@unaffiliated/nkar) has quit (Ping timeout: 260 seconds)
2015-08-29 09:32:31	-->	ulfdoz (~mary@2.166.201.13) has joined #haskell
2015-08-29 09:32:49	-->	simon (~simon@hypnos.pronoia.dk) has joined #haskell
2015-08-29 09:33:08	-->	tmtwd (~tmtwd@CPE0c473da71813-CM0c473da71810.cpe.net.cable.rogers.com) has joined #haskell
2015-08-29 09:33:33	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2015-08-29 09:33:39	simon	if I've got some String functions, how do I quickcheck them without overwriting the Arbitrary instances?
2015-08-29 09:33:43	tomberek	i'd be happy to write the toLambda piece. But I'd need some literature. (i'm not sure I followed the route you intended)
2015-08-29 09:33:51	-->	MindlessDrone (~MindlessD@unaffiliated/mindlessdrone) has joined #haskell
2015-08-29 09:34:34	-->	lolisa (~marisa@205.175.97.105) has joined #haskell
2015-08-29 09:34:34	--	simon is now known as sshine
2015-08-29 09:35:41	-->	pyx (~pyx@unaffiliated/pyx) has joined #haskell
2015-08-29 09:35:52	-->	Involuntary (~Jeanne-Ka@184.Red-88-9-37.dynamicIP.rima-tde.net) has joined #haskell
2015-08-29 09:36:19	<--	pyx (~pyx@unaffiliated/pyx) has quit (Client Quit)
2015-08-29 09:36:30	conal	tomberek: my thought was to give a CCC instance for lambda terms. 
2015-08-29 09:36:37	<--	Erlkonig (~Erlkonig@p3191087-ipngn19001marunouchi.tokyo.ocn.ne.jp) has quit (Quit: Leaving...)
2015-08-29 09:36:52	tomberek	conal: yep, that would be equivalent
2015-08-29 09:36:53	sshine	do I create my own newtypes and create Arbitrary instances for those? as suggested in http://stackoverflow.com/questions/20934506/haskell-quickcheck-how-to-generate-only-printable-strings
2015-08-29 09:37:10	conal	tomberek: though now that i think of it, doing so would probably create a lot of un-normalized results, which i guess would defeat your purpose.
2015-08-29 09:37:22	<--	skeet70 (~skeet70@inet-hqmc01-o.oracle.com) has quit (Remote host closed the connection)
2015-08-29 09:37:48	-->	skeet70 (~skeet70@inet-hqmc01-o.oracle.com) has joined #haskell
2015-08-29 09:38:06	<--	athan (~athan@50.250.143.235) has quit (Ping timeout: 272 seconds)
2015-08-29 09:38:28	<--	viszu (~viszu@89-70-53-243.dynamic.chello.pl) has quit (Quit: Leaving.)
2015-08-29 09:38:34	conal	tomberek: i'll be afk for a while but back later today. and you know how to get me by email.
2015-08-29 09:38:37	tomberek	conal: would it? the next step would be normalization anyway, then your toCCC converts it to the form I need, not circuits, but an arrow expression. You and I are ending up at a similar point, I'm just starting with a CCC, you're converting Core into Lambda
2015-08-29 09:39:04	-->	viszu (~viszu@89-70-53-243.dynamic.chello.pl) has joined #haskell
2015-08-29 09:39:25	<--	Jeanne-Kamikaze (~Jeanne-Ka@184.Red-88-9-37.dynamicIP.rima-tde.net) has quit (Ping timeout: 244 seconds)
2015-08-29 09:40:40	tomberek	sshine: are you changing the behavior of Strings or need a particular structure in the Arbitrary String's?
2015-08-29 09:42:43	-->	nkaretnikov (~nikita@unaffiliated/nkar) has joined #haskell
2015-08-29 09:42:47	-->	martin-t (~martin-t@c-50-184-152-244.hsd1.ca.comcast.net) has joined #haskell
2015-08-29 09:43:32	<--	RegEchse (~regechse@ipbcc0bf64.dynamic.kabel-deutschland.de) has quit (Quit: <3 WeeChat (v1.4-dev))
2015-08-29 09:43:37	 *	hackagebot servant-mock 0.4.4.2 - Derive a mock server for free from your servant API types  https://hackage.haskell.org/package/servant-mock-0.4.4.2 (jkarni)
2015-08-29 09:44:22	-->	joneshf-laptop (~joneshf@98.208.35.89) has joined #haskell
2015-08-29 09:44:40	<--	wei2912 (~wei2912@unaffiliated/wei2912) has quit (Quit: Lost terminal)
2015-08-29 09:45:09	-->	mkster_ (~mkster@i577B734F.versanet.de) has joined #haskell
2015-08-29 09:45:24	-->	qubitnerd (~neutrino@unaffiliated/electron/x-8286743) has joined #haskell
2015-08-29 09:45:36	<--	digitalmentat (~parnell@2602:306:b890:a0c0:2142:4c75:f803:8331) has quit (Ping timeout: 244 seconds)
2015-08-29 09:46:17	<--	snyrk (~snyrk@adsl-84-227-251-154.adslplus.ch) has quit (Quit: leaving)
2015-08-29 09:46:26	-->	erikd (~erikd@184.70.136.106) has joined #haskell
2015-08-29 09:46:43	-->	larion (~larion@a83-162-181-111.adsl.xs4all.nl) has joined #haskell
2015-08-29 09:47:24	<--	enaqx (~enaqx@188.163.69.11) has quit (Remote host closed the connection)
2015-08-29 09:47:38	-->	junmin (~junmin@189-210-226-30.static.axtel.net) has joined #haskell
2015-08-29 09:47:56	-->	samrat (~samrat@123.236.183.215) has joined #haskell
2015-08-29 09:48:01	-->	L8D (~L8D@cpe-70-123-155-208.austin.res.rr.com) has joined #haskell
2015-08-29 09:48:20	<--	martin-t (~martin-t@c-50-184-152-244.hsd1.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-29 09:48:22	<--	mkster (~mkster@i577B7DC7.versanet.de) has quit (Ping timeout: 246 seconds)
2015-08-29 09:48:35	-->	enaqx (~enaqx@188.163.69.11) has joined #haskell
2015-08-29 09:49:05	<--	Welkin (~Welkin@rrcs-97-78-71-197.se.biz.rr.com) has quit (Ping timeout: 265 seconds)
2015-08-29 09:49:26	<--	enaqx (~enaqx@188.163.69.11) has quit (Client Quit)
2015-08-29 09:49:39	sshine	tomberek, I need one generator that generates morse code and one that generates strings with letters only.
2015-08-29 09:49:55	-->	snyrk (~snyrk@adsl-84-227-251-154.adslplus.ch) has joined #haskell
2015-08-29 09:49:58	<--	XorSwap (~XorSwap@wnpgmb016qw-ds01-214-177.dynamic.mtsallstream.net) has quit (Ping timeout: 246 seconds)
2015-08-29 09:49:59	sshine	tomberek, or rather, the functions that I'm testing needs morse code and letters as input.
2015-08-29 09:50:04	tomberek	then yes, a newtype would be appropriate
2015-08-29 09:50:39	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-29 09:51:17	tomberek	the `forAll` also works, but the newtype will help develop the rest of your code as well
2015-08-29 09:51:26	<--	bamboo (~bamboo@200-207-170-147.dial-up.telesp.net.br) has quit (Quit: bamboo)
2015-08-29 09:51:52	<--	snyrk (~snyrk@adsl-84-227-251-154.adslplus.ch) has quit (Client Quit)
2015-08-29 09:52:00	-->	snyrk (~snyrk@adsl-84-227-251-154.adslplus.ch) has joined #haskell
2015-08-29 09:52:23	<--	jiang42 (~jiang42@116.237.85.218) has quit (Remote host closed the connection)
2015-08-29 09:52:37	<--	snyrk (~snyrk@adsl-84-227-251-154.adslplus.ch) has quit (Client Quit)
2015-08-29 09:52:48	-->	PlebCrab (~Cua@unaffiliated/coconutcrab) has joined #haskell
2015-08-29 09:52:57	-->	snyrk (~snyrk@adsl-84-227-251-154.adslplus.ch) has joined #haskell
2015-08-29 09:53:12	-->	Paradisee (~quassel@2.239.28.120) has joined #haskell
2015-08-29 09:54:41	<--	umib0zu (~umib0zu@146-115-43-219.c3-0.abr-ubr1.sbo-abr.ma.cable.rcn.com) has quit (Quit: umib0zu)
2015-08-29 09:55:13	<--	cita (~cita@unaffiliated/cita) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-29 09:55:17	<--	L8D (~L8D@cpe-70-123-155-208.austin.res.rr.com) has quit (Ping timeout: 250 seconds)
2015-08-29 09:55:31	sshine	tomberek, you mean the moment I embed a String into some other type that needs to be tested, I can rely on the instance once again?
2015-08-29 09:55:34	-->	juanpablo_ (~juanpablo@181.39.194.178) has joined #haskell
2015-08-29 09:56:15	-->	umib0zu (~umib0zu@146-115-43-219.c3-0.abr-ubr1.sbo-abr.ma.cable.rcn.com) has joined #haskell
2015-08-29 09:56:40	-->	arjanb (8259a911@gateway/web/freenode/ip.130.89.169.17) has joined #haskell
2015-08-29 09:57:02	-->	enaqx (~enaqx@188.163.69.11) has joined #haskell
2015-08-29 09:57:14	<--	Argue (~Argue___@112.209.109.5) has quit (Read error: Connection reset by peer)
2015-08-29 09:58:39	 *	hackagebot glue-core 0.4.0 - Make better services.  https://hackage.haskell.org/package/glue-core-0.4.0 (seanparsons)
2015-08-29 09:58:40	<--	enaqx (~enaqx@188.163.69.11) has quit (Remote host closed the connection)
2015-08-29 09:58:50	<--	xenog (~xenog@95.83.250.118) has quit (Ping timeout: 240 seconds)
2015-08-29 09:58:52	-->	enaqx (~enaqx@188.163.69.11) has joined #haskell
2015-08-29 09:59:11	-->	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-29 09:59:25	<--	enaqx (~enaqx@188.163.69.11) has quit (Remote host closed the connection)
2015-08-29 09:59:58	-->	kdlv (~aa47f8@host-95-195-195-128.mobileonline.telia.com) has joined #haskell
2015-08-29 10:00:03	<--	juanpablo_ (~juanpablo@181.39.194.178) has quit (Ping timeout: 250 seconds)
2015-08-29 10:00:12	ReinH	Why represent morse code as a string? Why not data Morse = Dot | Dash | Space and then use [Morse]?
2015-08-29 10:00:42	<--	kdlv (~aa47f8@host-95-195-195-128.mobileonline.telia.com) has quit (Client Quit)
2015-08-29 10:01:41	<--	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 246 seconds)
2015-08-29 10:02:03	-->	digitalmentat (~parnell@2602:306:b890:a0c0:2142:4c75:f803:8331) has joined #haskell
2015-08-29 10:02:05	-->	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-29 10:02:07	<--	rusuatras (~textual@84.123.10.75.dyn.user.ono.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-08-29 10:02:12	-->	kdlv (~aa47f8@host-95-195-195-128.mobileonline.telia.com) has joined #haskell
2015-08-29 10:02:41	-->	chpatrick (~Patrick@217.155.192.24) has joined #haskell
2015-08-29 10:02:44	<--	dwins (~dwins@c-73-200-135-248.hsd1.va.comcast.net) has quit
2015-08-29 10:02:44	-->	cita (~cita@unaffiliated/cita) has joined #haskell
2015-08-29 10:03:17	<--	snyrk (~snyrk@adsl-84-227-251-154.adslplus.ch) has quit (Quit: leaving)
2015-08-29 10:03:52	-->	snyrk (~snyrk@adsl-84-227-251-154.adslplus.ch) has joined #haskell
2015-08-29 10:04:05	<--	hmrm (~hmrm@173-29-150-72.client.mchsi.com) has quit (Ping timeout: 240 seconds)
2015-08-29 10:04:14	<--	snyrk (~snyrk@adsl-84-227-251-154.adslplus.ch) has quit (Client Quit)
2015-08-29 10:04:20	-->	Sindriav_ (~textual@88.103.123.123) has joined #haskell
2015-08-29 10:04:25	-->	snyrk (~snyrk@adsl-84-227-251-154.adslplus.ch) has joined #haskell
2015-08-29 10:05:02	<--	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 265 seconds)
2015-08-29 10:05:04	hiptobecubic	why have space instead of [[Morse]] ?
2015-08-29 10:05:59	ReinH	true
2015-08-29 10:06:17	tomberek	all good points
2015-08-29 10:06:25	<--	Hex189 (~Hex@h31-3-238-98.host.redstation.co.uk) has quit (Ping timeout: 246 seconds)
2015-08-29 10:06:58	exio4	it depends, which representation is handier for your use case?
2015-08-29 10:07:16	-->	jackdare (~Andy@ip-64-134-102-174.public.wayport.net) has joined #haskell
2015-08-29 10:07:43	-->	mada (~mariano@181.170.72.150) has joined #haskell
2015-08-29 10:08:12	monochrom	if it is possible to have [Dot, Space, Space, Dot], and it is not equivalent to [Dot, Space, Dot], then you allow Space to live.
2015-08-29 10:08:37	<--	tomboy64 (~tomboy@dslb-088-075-062-112.088.075.pools.vodafone-ip.de) has quit (Changing host)
2015-08-29 10:08:37	-->	tomboy64 (~tomboy@unaffiliated/tomboy64) has joined #haskell
2015-08-29 10:08:40	 *	hackagebot glue-common 0.4.1 - Make better services.  https://hackage.haskell.org/package/glue-common-0.4.1 (seanparsons)
2015-08-29 10:08:42	 *	hackagebot glue-core 0.4.1 - Make better services.  https://hackage.haskell.org/package/glue-core-0.4.1 (seanparsons)
2015-08-29 10:08:44	 *	hackagebot glue-ekg 0.4.1 - Make better services.  https://hackage.haskell.org/package/glue-ekg-0.4.1 (seanparsons)
2015-08-29 10:08:47	monochrom	else, [Dot, Space, Space, Dot] is just a non-unique way to say [[Dot], [Dot]]
2015-08-29 10:08:54	<--	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 265 seconds)
2015-08-29 10:09:01	exio4	[[Dot], [], [Dot]] ? 
2015-08-29 10:09:35	monochrom	looks like we need NonemptyList too
2015-08-29 10:09:49	-->	rcyr (~rcyr@modemcable204.138-163-184.mc.videotron.ca) has joined #haskell
2015-08-29 10:09:49	monochrom	[NonemtpyList Morse]
2015-08-29 10:10:18	-->	mmhat (~mmh@p5DDE50BF.dip0.t-ipconnect.de) has joined #haskell
2015-08-29 10:11:23	-->	_sjs (~steven.sp@108-228-29-235.lightspeed.sntcca.sbcglobal.net) has joined #haskell
2015-08-29 10:11:28	-->	codedmart (~codedmart@c-174-52-158-160.hsd1.ut.comcast.net) has joined #haskell
2015-08-29 10:11:39	<--	fuzzyhorns (~fuzzyhorn@73.38.57.191) has quit (Remote host closed the connection)
2015-08-29 10:12:58	-->	jo__ (uid41683@gateway/web/irccloud.com/x-jcihpxccoevrflgg) has joined #haskell
2015-08-29 10:13:02	<--	cbaatz (~cb@46-127-141-225.dynamic.hispeed.ch) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-29 10:13:35	greves	i am unable to install yesod because of network package on windows... last post on this issue if anyone has any ideas: https://github.com/haskell/network/issues/125#issuecomment-136010033
2015-08-29 10:13:36	<--	Freefood (~freefood@109.128.200.8) has quit (Remote host closed the connection)
2015-08-29 10:13:36	<--	exferenceBot (~exference@x4d066cb3.dyn.telefonica.de) has quit (Ping timeout: 264 seconds)
2015-08-29 10:13:36	<--	lspitzner (~lspitzner@x4d066cb3.dyn.telefonica.de) has quit (Ping timeout: 264 seconds)
2015-08-29 10:13:36	<--	hexagoxel (~hexagoxel@x4d066cb3.dyn.telefonica.de) has quit (Ping timeout: 264 seconds)
2015-08-29 10:13:38	ReinH	All of these are significant improvements over String
2015-08-29 10:13:40	 *	hackagebot glue-example 0.4.1 - Make better services.  https://hackage.haskell.org/package/glue-example-0.4.1 (seanparsons)
2015-08-29 10:13:50	-->	hmrm (~hmrm@173-29-150-72.client.mchsi.com) has joined #haskell
2015-08-29 10:14:23	-->	hexagoxel (~hexagoxel@x4d066f02.dyn.telefonica.de) has joined #haskell
2015-08-29 10:14:26	-->	exferenceBot (~exference@x4d066f02.dyn.telefonica.de) has joined #haskell
2015-08-29 10:14:53	-->	lspitzner (~lspitzner@x4d066f02.dyn.telefonica.de) has joined #haskell
2015-08-29 10:16:51	<--	burp (~quassel@188.165.218.18) has quit (Read error: Connection reset by peer)
2015-08-29 10:17:20	<--	Involuntary (~Jeanne-Ka@184.Red-88-9-37.dynamicIP.rima-tde.net) has quit (Read error: Connection reset by peer)
2015-08-29 10:17:20	-->	grouzen (~grouzen@diagonal-interview.volia.net) has joined #haskell
2015-08-29 10:17:39	-->	ro6 (uid49734@gateway/web/irccloud.com/x-ejdaqfmejdveiani) has joined #haskell
2015-08-29 10:18:03	-->	burp (~quassel@ns337126.ip-188-165-218.eu) has joined #haskell
2015-08-29 10:18:05	ro6	I'm trying to set up a project under nix that needs 'cpphs' to build, but I'm not sure how to set up the 'shell.nix'
2015-08-29 10:18:30	<--	hmrm (~hmrm@173-29-150-72.client.mchsi.com) has quit (Ping timeout: 260 seconds)
2015-08-29 10:19:25	ro6	any 'nix' wizards around?
2015-08-29 10:19:50	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-29 10:19:51	-->	Sk0rn (~sk0rn@76-231-80-165.lightspeed.livnmi.sbcglobal.net) has joined #haskell
2015-08-29 10:20:10	-->	hzjd (~Adium@dhcp-18-189-46-41.dyn.mit.edu) has joined #haskell
2015-08-29 10:22:03	<--	P1RATEZ (piratez@unaffiliated/p1ratez) has quit
2015-08-29 10:22:09	<--	yqt (~yqt@81.88.230.28) has quit (Ping timeout: 250 seconds)
2015-08-29 10:22:47	-->	jiang42 (~jiang42@116.237.85.218) has joined #haskell
2015-08-29 10:23:33	-->	MrScout (~MrScout@unaffiliated/mrscout) has joined #haskell
2015-08-29 10:24:20	-->	blue_deref (~blue_dere@cpe-74-77-246-241.buffalo.res.rr.com) has joined #haskell
2015-08-29 10:25:10	<--	hamishmack (~hamishmac@209-82-80-116.dedicated.allstream.net) has quit (Quit: hamishmack)
2015-08-29 10:25:15	-->	joco42_ (~joco42@dsl-hkibrasgw4-58c03a-80.dhcp.inet.fi) has joined #haskell
2015-08-29 10:25:40	-->	lethjakman (~lethjakma@71.56.221.51) has joined #haskell
2015-08-29 10:25:52	-->	hamishmack (~hamishmac@209-82-80-116.dedicated.allstream.net) has joined #haskell
2015-08-29 10:26:07	<--	Clarice (~kristof@unaffiliated/kristof) has quit (Ping timeout: 256 seconds)
2015-08-29 10:26:16	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-29 10:26:33	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-29 10:27:27	<--	jiang42 (~jiang42@116.237.85.218) has quit (Ping timeout: 244 seconds)
2015-08-29 10:28:09	-->	arbelos (~slack@109.58.145.112.bredband.tre.se) has joined #haskell
2015-08-29 10:29:23	-->	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has joined #haskell
2015-08-29 10:29:35	-->	Geraldine (~mc@148.81.117.56) has joined #haskell
2015-08-29 10:30:01	-->	emilypi (~emily@2601:681:4301:237f:81ae:aa83:208b:665f) has joined #haskell
2015-08-29 10:30:19	-->	codedmart1 (~codedmart@c-174-52-158-160.hsd1.ut.comcast.net) has joined #haskell
2015-08-29 10:30:21	<--	codedmart1 (~codedmart@c-174-52-158-160.hsd1.ut.comcast.net) has quit (Client Quit)
2015-08-29 10:31:00	<--	juliohm (~julio@unaffiliated/juliohm) has quit (Quit: Leaving)
2015-08-29 10:31:35	<--	codedmart (~codedmart@c-174-52-158-160.hsd1.ut.comcast.net) has quit (Ping timeout: 244 seconds)
2015-08-29 10:31:50	<--	tinyblak (~tinyblak@114.111.167.202) has quit (Remote host closed the connection)
2015-08-29 10:32:03	-->	kadoban (~mud@unaffiliated/kadoban) has joined #haskell
2015-08-29 10:32:10	<--	hamishmack (~hamishmac@209-82-80-116.dedicated.allstream.net) has quit (Quit: hamishmack)
2015-08-29 10:34:09	-->	marcus-aurelius (~quassel@p20030073AF0EA252D986AEA4BA881EFF.dip0.t-ipconnect.de) has joined #haskell
2015-08-29 10:35:11	<--	shirt (~shirt@adsl-v01-3db14831dc15da1b.tau.ac.il) has quit (Ping timeout: 256 seconds)
2015-08-29 10:35:54	srhb	ro6: With the default setup it should be the default.nix you have to set them in, I think?
2015-08-29 10:36:05	srhb	ro6: But you should go ask the experts in #nixos if you get no responses here :)
2015-08-29 10:36:23	ro6	oh, I didn't realize they had a channel, thanks!
2015-08-29 10:36:29	<--	emilypi (~emily@2601:681:4301:237f:81ae:aa83:208b:665f) has quit (Quit: Leaving)
2015-08-29 10:37:24	jeltsch	marcus-aurelius: Ave Caesar!
2015-08-29 10:37:36	<--	abdoudjanifresh (~abdoudjan@41.140.28.247) has quit (Ping timeout: 264 seconds)
2015-08-29 10:37:45	-->	lldong (~lldong@183.16.168.190) has joined #haskell
2015-08-29 10:38:34	marcus-aurelius	Salve jeltsch!
2015-08-29 10:38:52	<--	kdlv (~aa47f8@host-95-195-195-128.mobileonline.telia.com) has quit (Ping timeout: 265 seconds)
2015-08-29 10:38:54	--	jeltsch is now known as asterix
2015-08-29 10:39:24	<--	snyrk (~snyrk@adsl-84-227-251-154.adslplus.ch) has quit (Quit: leaving)
2015-08-29 10:39:28	-->	vmeson (~rmacleod@24-212-184-107.cable.teksavvy.com) has joined #haskell
2015-08-29 10:39:31	-->	snyrk (~snyrk@adsl-84-227-251-154.adslplus.ch) has joined #haskell
2015-08-29 10:39:46	 *	asterix drinks some magic potion
2015-08-29 10:40:05	<--	Zoetrope (~Zoetrope@95-44-31-229-dynamic.agg2.kok.dbc-mgr.eircom.net) has quit (Read error: Connection reset by peer)
2015-08-29 10:40:16	-->	shirt (~shirt@adsl-v01-3db14831dc15da1b.tau.ac.il) has joined #haskell
2015-08-29 10:40:20	-->	Zoetrope (~Zoetrope@95-44-31-229-dynamic.agg2.kok.dbc-mgr.eircom.net) has joined #haskell
2015-08-29 10:40:28	-->	martin-t (~martin-t@c-50-184-152-244.hsd1.ca.comcast.net) has joined #haskell
2015-08-29 10:40:46	-->	L8D (~L8D@70.123.155.208) has joined #haskell
2015-08-29 10:40:52	--	asterix is now known as jeltsch
2015-08-29 10:40:59	<--	lldong (~lldong@183.16.168.190) has quit (Remote host closed the connection)
2015-08-29 10:41:23	-->	lldong (~lldong@183.16.168.190) has joined #haskell
2015-08-29 10:42:13	-->	xcombelle (~xcombelle@AToulouse-657-1-1082-207.w92-146.abo.wanadoo.fr) has joined #haskell
2015-08-29 10:44:35	-->	tristanp (~tristanp@2601:602:8a00:1310::4) has joined #haskell
2015-08-29 10:44:48	-->	rwiggins (~rwiggins@unaffiliated/rwiggins) has joined #haskell
2015-08-29 10:46:51	<--	umib0zu (~umib0zu@146-115-43-219.c3-0.abr-ubr1.sbo-abr.ma.cable.rcn.com) has quit (Quit: umib0zu)
2015-08-29 10:47:03	-->	lldong_ (~lldong@183.16.168.190) has joined #haskell
2015-08-29 10:47:26	-->	basearcher (~textual@208.66.26.41) has joined #haskell
2015-08-29 10:47:42	-->	EunChe (~eunche@221.154.182.251) has joined #haskell
2015-08-29 10:48:33	-->	zipper (~luv_panda@unaffiliated/zipper) has joined #haskell
2015-08-29 10:48:35	-->	cognominal (~cognomina@87-231-91-9.rev.numericable.fr) has joined #haskell
2015-08-29 10:50:30	-->	qubozik (~qubozik@pool-68-238-241-108.phlapa.fios.verizon.net) has joined #haskell
2015-08-29 10:51:45	<--	lethjakman (~lethjakma@71.56.221.51) has quit (Ping timeout: 240 seconds)
2015-08-29 10:51:50	<--	samrat (~samrat@123.236.183.215) has quit (Ping timeout: 240 seconds)
2015-08-29 10:51:53	-->	newbie___ (75c0bae4@gateway/web/freenode/ip.117.192.186.228) has joined #haskell
2015-08-29 10:52:01	newbie___	hello
2015-08-29 10:52:14	<--	EunChe (~eunche@221.154.182.251) has quit (Ping timeout: 244 seconds)
2015-08-29 10:52:17	<--	inhortte (~polaris@123.Red-88-10-134.dynamicIP.rima-tde.net) has quit (Quit: Leaving.)
2015-08-29 10:52:30	<--	micmus (~micmus@acjp20.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 240 seconds)
2015-08-29 10:52:37	<--	lldong (~lldong@183.16.168.190) has quit (Remote host closed the connection)
2015-08-29 10:52:47	newbie___	i have weird question but i'm sorry for disturbing the channel which would be busy answering programming question (smart questions)
2015-08-29 10:53:23	-->	Tyler (~Tyler@2601:602:c500:6cab:d0af:c0a6:17b7:4d65) has joined #haskell
2015-08-29 10:53:26	--	Tyler is now known as Epichero
2015-08-29 10:53:41	<--	abrar (~abrar@pool-108-6-208-11.nycmny.fios.verizon.net) has quit (Quit: WeeChat 1.1.1)
2015-08-29 10:53:50	-->	abrar (~abrar@pool-108-6-208-11.nycmny.fios.verizon.net) has joined #haskell
2015-08-29 10:54:16	newbie___	my question is  haskler always says these words learn haskell its makes you a better programmer what this means ? why not python ? i dont understand .. Is he lying ?!
2015-08-29 10:54:17	-->	bennofs (~benno@2a02:810a:8200:2934:e611:5bff:fef6:ce26) has joined #haskell
2015-08-29 10:54:27	<--	tmtwd (~tmtwd@CPE0c473da71813-CM0c473da71810.cpe.net.cable.rogers.com) has quit (Ping timeout: 256 seconds)
2015-08-29 10:54:28	-->	dan_f (~dan@24-148-32-207.c3-0.grn-ubr1.chi-grn.il.cable.rcn.com) has joined #haskell
2015-08-29 10:55:07	-->	samrat (~samrat@123.236.183.215) has joined #haskell
2015-08-29 10:55:22	<--	qubitnerd (~neutrino@unaffiliated/electron/x-8286743) has quit (Ping timeout: 272 seconds)
2015-08-29 10:55:46	-->	martin-t_ (~martin-t@199.201.64.2) has joined #haskell
2015-08-29 10:56:23	-->	shirt_ (~shirt@adsl-v01-3db14831dc15da1b.tau.ac.il) has joined #haskell
2015-08-29 10:56:42	<--	martin-t (~martin-t@c-50-184-152-244.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2015-08-29 10:56:43	<--	martin-t_ (~martin-t@199.201.64.2) has quit (Read error: Connection reset by peer)
2015-08-29 10:57:09	mpickering	do they say that learning python won't make you a better programmer?
2015-08-29 10:57:10	-->	godel (~gonzalo@190.18.148.147) has joined #haskell
2015-08-29 10:57:10	glguy	newbie___: Tell us what reasons he gave for his statement and we can help validate them
2015-08-29 10:57:34	dyreshark	newbie___: learning a new programming language can teach you new ways to solve problems.
2015-08-29 10:57:52	<--	MrScout (~MrScout@unaffiliated/mrscout) has quit (Ping timeout: 246 seconds)
2015-08-29 10:57:53	kadoban	newbie___: I'm of the opinion that learning many languages, with a broad range of semantics and abstractions, makes you a better programmer in general. In that sense haskell is probably good, since it's quite different from most languages people come in knowing.
2015-08-29 10:57:55	-->	martin-t (~martin-t@c-50-184-152-244.hsd1.ca.comcast.net) has joined #haskell
2015-08-29 10:58:13	dyreshark	^
2015-08-29 10:58:21	-->	umib0zu (~umib0zu@146-115-43-219.c3-0.abr-ubr1.sbo-abr.ma.cable.rcn.com) has joined #haskell
2015-08-29 10:58:24	monochrom	I concur with glguy
2015-08-29 10:58:45	 *	monochrom is not a fan of news-reporter questions
2015-08-29 10:58:53	newbie___	i didnt understand what they mean better programmer glguy  , isnt solving problems makes you better programmer ?
2015-08-29 10:59:00	<--	cchalmers (~textual@cpc1-shep13-2-0-cust104.8-3.cable.virginm.net) has quit (Read error: Connection reset by peer)
2015-08-29 10:59:22	glguy	newbie___: Ask your friend why he said that, see if he'll give more details
2015-08-29 10:59:43	<--	umib0zu (~umib0zu@146-115-43-219.c3-0.abr-ubr1.sbo-abr.ma.cable.rcn.com) has quit (Client Quit)
2015-08-29 10:59:44	monochrom	"Hey Hilary Clinton, I read something from Donald Trump's blog, what do you think?"
2015-08-29 10:59:53	--	paf31_away is now known as paf31
2015-08-29 11:00:02	<--	shirt (~shirt@adsl-v01-3db14831dc15da1b.tau.ac.il) has quit (Ping timeout: 260 seconds)
2015-08-29 11:00:09	newbie___	yes ! ofcourse glguy 
2015-08-29 11:00:13	Intolerable	if solving problems makes you a better programmer, what does a language that makes you better at solving problems do?
2015-08-29 11:00:38	-->	qubitnerd (~neutrino@unaffiliated/electron/x-8286743) has joined #haskell
2015-08-29 11:00:39	monochrom	does solving problems make you a better programmer?
2015-08-29 11:00:55	glguy	What about asking questions?
2015-08-29 11:00:56	<--	pt1 (~pt1@195.29.92.186) has quit (Remote host closed the connection)
2015-08-29 11:00:59	MarcelineVQ	Does making a man a knight make him a better fighter?
2015-08-29 11:01:10	voidzero	do I
2015-08-29 11:01:14	monochrom	asking questions makes you a better news reporter, it seems.
2015-08-29 11:01:15	voidzero	do I look fat in these pants?
2015-08-29 11:01:27	Intolerable	does a bear shit in the woods?
2015-08-29 11:01:28	glguy	monochrom: What about shouting questions?
2015-08-29 11:01:32	glguy	Are we on topic?
2015-08-29 11:01:54	-->	undoall (~undoall@2602:306:c444:340:4cf6:21ae:40e8:18be) has joined #haskell
2015-08-29 11:02:02	voidzero	the answers to all of these questions right after this short word from our sponsors.
2015-08-29 11:02:20	<--	jutaro (~jutaro@p5DDB042C.dip0.t-ipconnect.de) has quit (Ping timeout: 272 seconds)
2015-08-29 11:02:31	undoall	Is there a shorter and cleaner way to do the `modify $ \s -> s { field = value }` pattern?
2015-08-29 11:02:53	Intolerable	field .= value
2015-08-29 11:02:53	glguy	In lens that's: fieldLens .= value
2015-08-29 11:03:01	-->	xcombelle_ (~xcombelle@AToulouse-657-1-1082-207.w92-146.abo.wanadoo.fr) has joined #haskell
2015-08-29 11:03:02	<--	xcombelle_ (~xcombelle@AToulouse-657-1-1082-207.w92-146.abo.wanadoo.fr) has quit (Read error: Connection reset by peer)
2015-08-29 11:03:03	glguy	*highfive*
2015-08-29 11:03:04	-->	davik (32ad2c2f@gateway/web/freenode/ip.50.173.44.47) has joined #haskell
2015-08-29 11:03:13	bennofs	johnw: y
2015-08-29 11:03:14	undoall	Ah, I mean using the state monad.
2015-08-29 11:03:23	Intolerable	yeah, that's field .= value
2015-08-29 11:03:26	bennofs	undoall: you've discovered one of the problems that lenses solve
2015-08-29 11:03:29	Intolerable	:t (.=)
2015-08-29 11:03:30	jeltsch	Wasn’t there also some GHC extension that provides syntactic sugar for record field updates?
2015-08-29 11:03:31	lambdabot	MonadState s m => ASetter s s a b -> b -> m ()
2015-08-29 11:03:42	Intolerable	(note the MonadState)
2015-08-29 11:03:47	bennofs	> flip execState (1,2) $ _1 .= 5  -- using lens
2015-08-29 11:03:49	lambdabot	 (5,2)
2015-08-29 11:04:33	<--	xcombelle (~xcombelle@AToulouse-657-1-1082-207.w92-146.abo.wanadoo.fr) has quit (Remote host closed the connection)
2015-08-29 11:05:21	-->	gamegoblin (~grant@64.187.168.233) has joined #haskell
2015-08-29 11:05:22	-->	lldong (~lldong@183.16.168.190) has joined #haskell
2015-08-29 11:05:37	-->	danilo2 (5efe9199@gateway/web/freenode/ip.94.254.145.153) has joined #haskell
2015-08-29 11:06:00	-->	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-29 11:07:58	danilo2	Hello! :) I was looking today at the Vector package and I've noticed an interesting fact - the `modify` function has time colpexity of (m + k), where m is the number of elms in Vector and k is number of updates. I would like to ask you if when we use Vectors, and simply update them, GHC makes a real copy of the memory under the hood or it optimises it away? We've got also the mutable version of vectors, providing functions to modif
2015-08-29 11:08:06	danilo2	and I would prefer to stay in pure code here
2015-08-29 11:08:15	<--	qz (~quetzal@li272-85.members.linode.com) has quit (Quit: WeeChat 1.2-dev)
2015-08-29 11:08:26	<--	lkba (~AndChat43@avo189.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 260 seconds)
2015-08-29 11:10:24	<--	BartAdv (uid90451@gateway/web/irccloud.com/x-yexutitmqtqqdwdx) has quit (Quit: Connection closed for inactivity)
2015-08-29 11:11:41	-->	Clarice (~kristof@unaffiliated/kristof) has joined #haskell
2015-08-29 11:11:52	<--	joco42_ (~joco42@dsl-hkibrasgw4-58c03a-80.dhcp.inet.fi) has quit (Remote host closed the connection)
2015-08-29 11:12:59	-->	Jeanne-Kamikaze (~Jeanne-Ka@184.Red-88-9-37.dynamicIP.rima-tde.net) has joined #haskell
2015-08-29 11:13:11	<--	erkin (~erkin@unaffiliated/erkin) has quit (Ping timeout: 265 seconds)
2015-08-29 11:49:33	<--	PatrickRobotham (uid18270@gateway/web/irccloud.com/x-ztrjrlmmtkcstpyf) has quit (Quit: Connection closed for inactivity)
2015-08-29 11:49:56	--	irc: disconnected from server
2015-08-29 11:50:24	-->	RouxTheD1 (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-29 11:50:24	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-29 11:50:24	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-29 11:50:25	--	Channel #haskell: 1470 nicks (1 op, 0 voices, 1469 normals)
2015-08-29 11:50:25	--	Notice(holmes.freenode.net): [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
2015-08-29 11:50:26	--	URL for #haskell: http://www.haskell.org/
2015-08-29 11:50:26	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-29 11:50:26	<--	zipper (~luv_panda@unaffiliated/zipper) has quit (Ping timeout: 250 seconds)
2015-08-29 11:50:34	besenwesen	step 1. ask GHCi for the type of an expression. step 2. ask GHCi to typecheck the expression with the type it just inferred. step 3. type error. ┻━┻ ︵ヽ(`Д´)ﾉ︵ ┻━┻`
2015-08-29 11:50:39	srhb	programo: By default a file with no module declaration is a Main module, which must have a main IO action
2015-08-29 11:50:46	glguy	programo: If you omit a module declaration you get a default one of "module Main (main) where"
2015-08-29 11:50:54	srhb	programo: ie main = print x, for instance
2015-08-29 11:51:01	-->	rhaps0dy (~rhaps0dy@2a00:d880:5:2d8::a954) has joined #haskell
2015-08-29 11:51:27	<--	flamingspinach1 (flamingspi@gateway/vpn/mullvad/x-xcoicrydsnnclqfd) has quit (Remote host closed the connection)
2015-08-29 11:51:37	-->	brotknust (~brotknust@2a00:d0c0:200:0:b9:1a:9c2f:1) has joined #haskell
2015-08-29 11:51:53	<--	cads (~M@104-9-5-196.lightspeed.tukrga.sbcglobal.net) has quit (Quit: Leaving.)
2015-08-29 11:51:54	Welkin	it's always a great feeling when you write a function and you know it will typecheck before you run it
2015-08-29 11:51:58	glguy	 ┬─┬﻿ ノ( ゜-゜ノ)  Maybe just pastebin the example and leave the tables unflipped!
2015-08-29 11:51:58	Welkin	then you run it and it typechecks
2015-08-29 11:52:06	Welkin	glguy: hahahaha
2015-08-29 11:52:22	Welkin	glguy: have you been saving that one for a while? :P
2015-08-29 11:52:28	srhb	It's not like this really needs a paste. :P
2015-08-29 11:52:40	programo	What can I do now  for my program to run?
2015-08-29 11:52:40	-->	julmac (~julmac@82.221.107.179.adsl.inet-telecom.org) has joined #haskell
2015-08-29 11:52:49	srhb	programo: Add a line with main = print x, for instance
2015-08-29 11:52:57	-->	cads (~M@104-9-5-196.lightspeed.tukrga.sbcglobal.net) has joined #haskell
2015-08-29 11:52:59	voidzero	hum, optparse-applicative is difficult to grasp
2015-08-29 11:53:02	programo	okay
2015-08-29 11:53:07	besenwesen	dunno, i’ve come to accept that with DataKinds, anything is possible. me not having a clue probably doesn’t help, but still, this is pretty weird
2015-08-29 11:53:13	glguy	programo: Running your Haskell program means executing the main value
2015-08-29 11:53:18	<--	snyrk (~snyrk@adsl-84-227-251-154.adslplus.ch) has quit (Quit: leaving)
2015-08-29 11:53:23	<--	Freefood (~freefood@2a02:a03f:163a:9700:7889:eb11:5997:f3c4) has quit (Ping timeout: 256 seconds)
2015-08-29 11:53:25	-->	snyrk (~snyrk@adsl-84-227-251-154.adslplus.ch) has joined #haskell
2015-08-29 11:53:50	-->	adek (~adek@50.141.33.24) has joined #haskell
2015-08-29 11:53:52	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-29 11:54:15	<--	umib0zu (~umib0zu@146-115-43-219.c3-0.abr-ubr1.sbo-abr.ma.cable.rcn.com) has quit (Quit: umib0zu)
2015-08-29 11:54:24	programo	@glguy thank you ! It worked
2015-08-29 11:54:24	lambdabot	Unknown command, try @list
2015-08-29 11:54:25	-->	rul (~rul@sayshell.kalgan.cc) has joined #haskell
2015-08-29 11:54:29	-->	dcoutts (~duncan@unaffiliated/dcoutts) has joined #haskell
2015-08-29 11:54:37	glguy	programo: In #haskell, @ is used for bot commands
2015-08-29 11:55:19	programo	okay glguy thanks for the information
2015-08-29 11:55:37	<--	dan_f (~dan@24-148-32-207.c3-0.grn-ubr1.chi-grn.il.cable.rcn.com) has quit (Quit: dan_f)
2015-08-29 11:56:16	<--	Geraldine (~mc@148.81.117.56) has quit (Quit: WeeChat 1.2)
2015-08-29 11:56:23	<--	pyon (~pyon@unaffiliated/pyon) has quit (Quit: fix config)
2015-08-29 11:56:33	-->	mc (~mc@148.81.117.56) has joined #haskell
2015-08-29 11:56:44	-->	pyon (~pyon@unaffiliated/pyon) has joined #haskell
2015-08-29 11:56:47	-->	Bjarki (Bjarki@gateway/vpn/mullvad/x-qdcaeyfxovbguqvo) has joined #haskell
2015-08-29 11:56:48	-->	quazimodo (~quazimodo@155.143.14.28) has joined #haskell
2015-08-29 11:56:50	<--	hbar (~hbar@turing.phas.ubc.ca) has quit (Ping timeout: 240 seconds)
2015-08-29 11:56:50	srhb	voidzero: Have you done applicative parsers before?
2015-08-29 11:56:57	--	mc is now known as Guest11798
2015-08-29 11:57:07	srhb	voidzero: It's basically like building one of those and getting a command line program for free. :-)
2015-08-29 11:57:16	quazimodo	People, I'd like to ask this potentially off topic question here because I've found that haskelly people are more thoughtful about things than javascripty people
2015-08-29 12:01:12	quazimodo	I'm not sure if this applies in haskell programming, but Pub/Sub systems more and more are feeling to me like a glorified global variable that acts a lot like a stack
2015-08-29 12:01:12	quazimodo	well, perhaps not a stack, but a big global thing anyway that other things regularly check and see if any messages are left on it that they may be interested in
2015-08-29 12:01:12	voidzero	srhb, I have, but that was six long months ago, and now I got rusty
2015-08-29 12:01:12	glguy	felixn: You around?
2015-08-29 12:01:12	-->	jiang42 (~jiang42@116.237.85.218) has joined #haskell
2015-08-29 12:01:12	voidzero	srhb, It's probably smart to just grab my haskell books and give them another read first (which I've been telling myself for about 30 minutes now hehe)
2015-08-29 12:01:12	srhb	voidzero: Probably! If the examples aren't enough to get you going at least :)
2015-08-29 12:01:12	-->	Matrixiumn (Matrixiumn@unaffiliated/matrixiumn) has joined #haskell
2015-08-29 12:01:12	-->	akegalj (~akegalj@93-139-90-51.adsl.net.t-com.hr) has joined #haskell
2015-08-29 12:01:12	-->	xcombelle (~xcombelle@AToulouse-657-1-1082-207.w92-146.abo.wanadoo.fr) has joined #haskell
2015-08-29 12:01:14	<--	Guest11798 (~mc@148.81.117.56) has quit (Remote host closed the connection)
2015-08-29 12:01:36	-->	cyborg-one (~cyborg-on@130-0-62-179.broadband.tenet.odessa.ua) has joined #haskell
2015-08-29 12:01:52	<--	pyon (~pyon@unaffiliated/pyon) has quit (Quit: fix config)
2015-08-29 12:02:18	quazimodo	i guess i must be missing something
2015-08-29 12:02:25	<--	vlatkoB (~IRC_clien@unaffiliated/vlatkob) has quit (Remote host closed the connection)
2015-08-29 12:02:43	-->	predator217 (~predator1@p4FDC13FD.dip0.t-ipconnect.de) has joined #haskell
2015-08-29 12:02:50	-->	tdammers (~tdammers@unaffiliated/tdammers) has joined #haskell
2015-08-29 12:02:50	geekosaur	quazimodo, in some sense they are. if the checkers are distributed across processes, there's not a lot that can be done about it even in Haskell. within a process you can still need them for thread communication, and Haskell even has them in various forms (e.g. Chan, TChan)
2015-08-29 12:03:30	<--	kadoban (~mud@unaffiliated/kadoban) has quit (Ping timeout: 240 seconds)
2015-08-29 12:03:32	<--	predator117 (~predator1@p4FDC1B5D.dip0.t-ipconnect.de) has quit (Ping timeout: 250 seconds)
2015-08-29 12:03:37	geekosaur	...although they can be more principled if the endpoint is passed around instead of being a global
2015-08-29 12:03:39	voidzero	Staring at ((+) <$> Just 3 <*> Just 5) helped somewhat.. I get that this will be similar with multiple Parser values
2015-08-29 12:03:48	quazimodo	geekosaur: I've been using pubsub to emit signals from widgets on a html page. But i'm feeling that this is less and less 'sensical'
2015-08-29 12:03:55	voidzero	foo <$> Parser a <*> Parser b
2015-08-29 12:03:59	voidzero	but I will stop hurting myself now.
2015-08-29 12:04:10	-->	nikki93 (~nikki93@2601:645:4100:2590:5175:bde9:a4cf:c9ff) has joined #haskell
2015-08-29 12:11:34	--	irc: disconnected from server
2015-08-29 13:24:45	-->	RouxTheD1 (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-29 13:24:45	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-29 13:24:45	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-29 13:24:46	--	Channel #haskell: 1471 nicks (1 op, 0 voices, 1470 normals)
2015-08-29 13:24:46	--	URL for #haskell: http://www.haskell.org/
2015-08-29 13:24:46	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-29 13:24:58	-->	Clarice (~kristof@unaffiliated/kristof) has joined #haskell
2015-08-29 13:25:10	Adeon	that is, turn them from mutable and immutable, sometimes in O(1) time with some unsafety
2015-08-29 13:25:15	danilo2	Adeon: it has grow, but doesn't provide us functionality that I want - namely it doesn't grow automatically when there is insufficient allocated space
2015-08-29 13:25:30	Cale	hmm
2015-08-29 13:25:32	Adeon	wouldn't that be literally just one utility function to write
2015-08-29 13:25:52	Welkin	yeah
2015-08-29 13:25:58	Welkin	you can write your own dynamic arrays
2015-08-29 13:26:04	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-29 13:26:08	Cale	Are you sure you're not just looking for Data.Map or Data.IntMap instead?
2015-08-29 13:26:14	danilo2	Adeon: probalby, or few. But you know, if everyone would write it, it is more practical to make a library out of it :) I'm asking just because if there is nothing like I want, I will make a library for it
2015-08-29 13:26:58	<--	jeltsch (~wolfgang@kybi.ioc.ee) has quit (Ping timeout: 246 seconds)
2015-08-29 13:27:00	-->	tulcod (~tulcod@unaffiliated/tulcod) has joined #haskell
2015-08-29 13:27:20	-->	aa47f8 (~aa47f8@h187n14-far-a13.ias.bredband.telia.com) has joined #haskell
2015-08-29 13:27:24	-->	abg (~abg@192.77.237.65) has joined #haskell
2015-08-29 13:27:26	danilo2	Cale: no, I'm creating a graph. In the vector, there are elements and they point to other elements. It is crucial to have O(1) access times and I want to add and remove nodes from the graph. Sometimes we will need to grow the representation, but that will not be the often case
2015-08-29 13:28:01	-->	breadmonster (0e8b2df3@gateway/web/freenode/ip.14.139.45.243) has joined #haskell
2015-08-29 13:28:10	breadmonster	How do you do CLIs in Haskell?
2015-08-29 13:28:34	danilo2	Cale: I know that standard graph implementations base on IntMaps / Patricia trees etc - but for this use case I want to be able to travel between nodes in O(1)
2015-08-29 13:28:47	<--	jeadre (~jeadre@li1421-113.members.linode.com) has quit (Remote host closed the connection)
2015-08-29 13:29:30	<--	adek_ (~adek@199.201.64.3) has quit (Ping timeout: 255 seconds)
2015-08-29 13:29:51	<--	athan (~athan@173-14-18-245-Colorado.hfc.comcastbusiness.net) has quit (Ping timeout: 260 seconds)
2015-08-29 13:30:04	-->	juanpablo_ (~juanpablo@181.39.194.178) has joined #haskell
2015-08-29 13:30:28	<--	kdlv (~aa47f8@host-95-195-207-46.mobileonline.telia.com) has quit (Ping timeout: 246 seconds)
2015-08-29 13:30:44	-->	jeadre (~jeadre@li1421-113.members.linode.com) has joined #haskell
2015-08-29 13:30:49	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Remote host closed the connection)
2015-08-29 13:30:53	-->	adek (~adek@199.201.64.2) has joined #haskell
2015-08-29 13:30:59	Cale	danilo2: You can kind of think of the access time in an IntMap as O(1), since you have a very reasonable constant bound on how long it will take.
2015-08-29 13:31:00	Welkin	breadmonster: https://hackage.haskell.org/packages/#cat:User%20Interfaces
2015-08-29 13:31:26	Cale	danilo2: It's obviously a much worse number than following a single pointer
2015-08-29 13:31:52	<--	arbelos_ (~slack@79.138.134.16.mobile.tre.se) has quit (Quit: Leaving)
2015-08-29 13:32:01	breadmonster	Cale: Is it actually O(1)?
2015-08-29 13:32:04	Cale	yes
2015-08-29 13:32:31	breadmonster	Oh okay.
2015-08-29 13:32:38	Cale	breadmonster: There are only so many Ints, and so the size of an IntMap is bounded
2015-08-29 13:33:38	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-29 13:33:48	breadmonster	lol okay
2015-08-29 13:34:10	<--	juanpablo_ (~juanpablo@181.39.194.178) has quit (Ping timeout: 240 seconds)
2015-08-29 13:34:25	<--	umib0zu (~umib0zu@146-115-43-219.c3-0.abr-ubr1.sbo-abr.ma.cable.rcn.com) has quit (Quit: umib0zu)
2015-08-29 13:35:06	-->	lritter (~lritter@x5ce0c5ad.dyn.telefonica.de) has joined #haskell
2015-08-29 13:35:07	danilo2	Cale, hmm Of course, but it is much slower than accessing elms from Vector. I'm using it in the internal of a compiler and I the performance to traverse the graph is crucial. Because of that I will stick with ST Monad + MVector for it. from all the solutions above this will be the fastest one I suppose. 
2015-08-29 13:35:16	-->	gigabytes (~gigabytes@151.49.222.56) has joined #haskell
2015-08-29 13:35:46	<--	programo (~aswin@208-59-151-155.c3-0.mcm-ubr1.chi-mcm.il.cable.rcn.com) has quit (Ping timeout: 265 seconds)
2015-08-29 13:36:20	-->	EunChe (~eunche@221.154.182.251) has joined #haskell
2015-08-29 13:36:46	<--	adek (~adek@199.201.64.2) has quit (Ping timeout: 246 seconds)
2015-08-29 13:37:17	-->	Freefood (~freefood@109.128.200.8) has joined #haskell
2015-08-29 13:38:21	<--	bamboo (~bamboo@200-207-170-147.dial-up.telesp.net.br) has quit (Quit: bamboo)
2015-08-29 13:38:32	-->	L8D (~L8D@cpe-70-123-155-208.austin.res.rr.com) has joined #haskell
2015-08-29 13:38:33	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-29 13:39:09	-->	bros (62408887@gateway/web/freenode/ip.98.64.136.135) has joined #haskell
2015-08-29 13:39:14	bros	Ahoy.
2015-08-29 13:39:42	-->	Laserbear (~Laserbear@c-73-223-160-142.hsd1.ca.comcast.net) has joined #haskell
2015-08-29 13:39:56	<--	laar (~lars@ip60-210-173-82.adsl2.static.versatel.nl) has quit (Remote host closed the connection)
2015-08-29 13:40:02	-->	tmtwd (~tmtwd@38.122.185.194) has joined #haskell
2015-08-29 13:40:08	<--	junmin (~junmin@189-210-226-30.static.axtel.net) has quit (Remote host closed the connection)
2015-08-29 13:40:40	gigabytes	hi guys
2015-08-29 13:40:40	<--	EunChe (~eunche@221.154.182.251) has quit (Ping timeout: 244 seconds)
2015-08-29 13:40:53	<--	jdmnd (~dmnd@cpc68140-bagu13-2-0-cust271.1-3.cable.virginm.net) has quit
2015-08-29 13:41:27	-->	jdmnd (~jdmnd@cpc68140-bagu13-2-0-cust271.1-3.cable.virginm.net) has joined #haskell
2015-08-29 13:41:28	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-29 13:41:33	nitrix	Just verifying, a unit type is like (), because it has only a single inhabitant, () ?
2015-08-29 13:41:41	gigabytes	yeah
2015-08-29 13:41:54	nitrix	Are there other examples (other than creating your owns) ?
2015-08-29 13:41:56	<--	Freefood (~freefood@109.128.200.8) has quit (Ping timeout: 272 seconds)
2015-08-29 13:42:22	gigabytes	() -> ()
2015-08-29 13:42:26	-->	mauke_ (~mauke@p3m/member/mauke) has joined #haskell
2015-08-29 13:42:33	gigabytes	I think
2015-08-29 13:42:57	gigabytes	the inhabitant can only be 'id'
2015-08-29 13:43:23	-->	bluish (~sebastian@87-207-132-195.dynamic.chello.pl) has joined #haskell
2015-08-29 13:43:27	<--	L8D (~L8D@cpe-70-123-155-208.austin.res.rr.com) has quit (Ping timeout: 255 seconds)
2015-08-29 13:43:28	nitrix	I see.
2015-08-29 13:43:32	nitrix	Thanks.
2015-08-29 13:44:00	gigabytes	anybody here knows about Hakyll? The specific channel seems to be too quiet
2015-08-29 13:44:19	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-29 13:44:28	-->	foreignFunction (~ai@ip-4761.sunline.net.ua) has joined #haskell
2015-08-29 13:45:09	-->	basearcher (~textual@208.66.26.41) has joined #haskell
2015-08-29 13:45:19	<--	mauke (~mauke@p3m/member/mauke) has quit (Ping timeout: 246 seconds)
2015-08-29 13:45:38	<--	basearcher (~textual@208.66.26.41) has quit (Client Quit)
2015-08-29 13:45:42	jbalint	how can i make a function? (a -> m b) -> (a -> b -> m c) -> a -> m c
2015-08-29 13:45:49	jbalint	I need the a param in both functions
2015-08-29 13:46:08	--	mauke_ is now known as mauke
2015-08-29 13:46:46	-->	Beetny (~Beetny@14-202-48-200.tpgi.com.au) has joined #haskell
2015-08-29 13:47:08	c_wraith	jbalint: that can be done if you put a Monad constraint on m
2015-08-29 13:47:23	-->	kadoban (~mud@unaffiliated/kadoban) has joined #haskell
2015-08-29 13:47:34	<--	bluish (~sebastian@87-207-132-195.dynamic.chello.pl) has quit (Client Quit)
2015-08-29 13:47:42	jbalint	c_wraith: yeah it will be a monad class
2015-08-29 13:47:51	c_wraith	:t let foo f g x = do {y <- f x; g x y} in foo
2015-08-29 13:47:52	lambdabot	Monad m => (t1 -> m t) -> (t1 -> t -> m b) -> t1 -> m b
2015-08-29 13:47:53	jbalint	c_wraith: do I have to write it myself, or is there some clever way to do it?
2015-08-29 13:48:24	jbalint	c_wraith: thx
2015-08-29 13:48:31	c_wraith	I mean, you can certainly do something clever at it, but it's so simple I'd wonder why you want to replace simple with clever. :)
2015-08-29 13:49:12	jbalint	c_wraith: I guess I thought there might some operator that I could use :)
2015-08-29 13:49:18	<--	tulcod (~tulcod@unaffiliated/tulcod) has quit (Ping timeout: 265 seconds)
2015-08-29 13:49:25	--	paf31_away is now known as paf31
2015-08-29 13:49:38	c_wraith	jbalint: nothing that's going to be obvious to most readers.
2015-08-29 13:49:54	jbalint	c_wraith: alright
2015-08-29 13:50:58	schell	gigabytes: i know a little about hakyll
2015-08-29 13:51:08	schell	my blog is written with it: zyghost.com
2015-08-29 13:51:18	-->	itsu (c6a81bda@gateway/web/freenode/ip.198.168.27.218) has joined #haskell
2015-08-29 13:51:44	c_wraith	I mean..  \f g x -> f x >>= g x   ........   \f g -> liftA2 (>>=) f g
2015-08-29 13:51:53	c_wraith	Clever, sure.  Good?  No.  :)
2015-08-29 13:52:10	c_wraith	:t \f g -> liftA2 (>>=) f g
2015-08-29 13:52:12	lambdabot	(Monad m, Applicative f) => f (m a) -> f (a -> m b) -> f (m b)
2015-08-29 13:52:31	c_wraith	:t liftA2 (>>=)
2015-08-29 13:52:32	gigabytes	schell: I've troubles making tags and categories
2015-08-29 13:52:33	lambdabot	(Monad m, Applicative f) => f (m a) -> f (a -> m b) -> f (m b)
2015-08-29 13:52:44	schell	ahh - i haven’t done that yet
2015-08-29 13:52:51	<--	Swizec (~swizec@c-67-164-98-169.hsd1.ca.comcast.net) has quit (Quit: Computer has gone to sleep.)
2015-08-29 13:52:52	<--	lritter (~lritter@x5ce0c5ad.dyn.telefonica.de) has quit (Quit: Leaving)
2015-08-29 13:53:02	schell	gigabytes: have you read through the tutorials already?
2015-08-29 13:53:07	gigabytes	schell: yes
2015-08-29 13:53:10	gigabytes	it seems to be easy
2015-08-29 13:53:14	<--	cods (~fred@tuxee.net) has quit (Remote host closed the connection)
2015-08-29 13:53:25	c_wraith	jbalint: yeah, it's liftA2 (>>=) when the Applicative instance you're using is ((->) a)
2015-08-29 13:53:35	c_wraith	jbalint: but really, that's not simpler or easier to read.
2015-08-29 13:53:36	gigabytes	but the pages that are created by tagsRoutes all contain all the posts instead of only the posts of the specific tag/category
2015-08-29 13:53:52	-->	Goplat (~goplat@reactos/developer/Goplat) has joined #haskell
2015-08-29 13:54:11	schell	hmmm, i’m not sure i can help since i’ve never implemented tags or categories
2015-08-29 13:54:24	gigabytes	no problem :)
2015-08-29 13:54:39	Cale	danilo2: Yeah, you might want to try building something around MVector. I've often been pleasantly surprised by how reasonably fast IntMap and even Map are in the past though. Often I'll write my algorithm using one of those and see how it performs before trying anything fancier, and except in cases where the data structure was pretty much unreasonably large (image data), the performance has been good enough.
2015-08-29 13:54:44	schell	but i got a lot out of reading other people’s sites
2015-08-29 13:54:47	jbalint	c_wraith: yeah, i'll play around with it some, thx
2015-08-29 13:55:00	schell	for instance, the author’s: https://github.com/jaspervdj/jaspervdj/blob/master/src/Main.hs
2015-08-29 13:55:12	Cale	danilo2: Obviously there are cases where it won't be though!
2015-08-29 13:55:20	gigabytes	schell: I'll try to read it
2015-08-29 13:55:26	-->	murz (~murz@2601:602:8200:e27a:90fa:587f:7bd9:1bc5) has joined #haskell
2015-08-29 13:55:27	schell	gigabytes: he’s got tags on line 49 - maybe that will help?
2015-08-29 13:56:38	<--	skore_de (~skore@2a02:908:cf11:8fe0:b418:f177:d41b:72e3) has left #haskell
2015-08-29 13:56:51	-->	skore_de (~skore@2a02:908:cf11:8fe0:b418:f177:d41b:72e3) has joined #haskell
2015-08-29 13:57:01	fryguybob	breadmonster: Were you asking how STM works yesterday?
2015-08-29 13:57:24	-->	peti (~simons@virt.cryp.to) has joined #haskell
2015-08-29 13:57:32	gigabytes	schell: hm maybe
2015-08-29 13:57:36	--	bjobjo_ is now known as bjobjo
2015-08-29 13:58:09	<--	martin-t (~martin-t@c-50-184-152-244.hsd1.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-29 13:58:21	peti	Hi, I wonder how other people ensure that their Cabal files have a uniq'ish version number that can be traced back to a Git commit with some accuracy?
2015-08-29 13:58:23	<--	itsu (c6a81bda@gateway/web/freenode/ip.198.168.27.218) has quit (Quit: Page closed)
2015-08-29 13:58:26	<--	Clarice (~kristof@unaffiliated/kristof) has quit (Ping timeout: 240 seconds)
2015-08-29 13:58:34	bernalex	.
2015-08-29 13:58:38	bernalex	ops
2015-08-29 13:58:45	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Remote host closed the connection)
2015-08-29 13:58:51	peti	Personally, I generate my Cabal file with the Cartel library, so I can include that information at the time the Cabal is produced.
2015-08-29 13:58:53	Cale	peti: I think git has a feature to tag particular commits
2015-08-29 13:59:21	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-29 13:59:24	peti	I am, however, unhappy with that solution, because there's no easy way to determine when the Cabal file needs re-generation.
2015-08-29 13:59:26	--	paf31 is now known as paf31_away
2015-08-29 13:59:34	-->	cbaatz (~cb@46-127-141-225.dynamic.hispeed.ch) has joined #haskell
2015-08-29 13:59:48	peti	Cale: You mean "git tag"?
2015-08-29 13:59:52	<--	marcus-aurelius (~quassel@p20030073AF0EA252D986AEA4BA881EFF.dip0.t-ipconnect.de) has quit (Ping timeout: 246 seconds)
2015-08-29 14:00:07	<--	MrScout (~MrScout@unaffiliated/mrscout) has quit (Remote host closed the connection)
2015-08-29 14:00:14	Cale	peti: yeah
2015-08-29 14:00:19	Hafydd	guten tag
2015-08-29 14:01:14	<--	eeLieAh (~quasar@93.56.114.68) has quit (Remote host closed the connection)
2015-08-29 14:01:40	-->	jiang42 (~jiang42@116.237.85.218) has joined #haskell
2015-08-29 14:01:41	Cale	I mostly write Cabal files by hand, so I haven't really ever thought about how you'd automate that though.
2015-08-29 14:01:49	-->	quchen (~quchen@ipb21bf8fb.dynamic.kabel-deutschland.de) has joined #haskell
2015-08-29 14:01:56	<--	suppi (~suppi@unaffiliated/suppi) has quit (Quit: Leaving)
2015-08-29 14:02:05	peti	Cale: Well, git tag allows me to attach the version number from my Cabal file to a git commmit. I want it the other way round, though: I want my cabal file to identify the Git commit it belongs to, i.e. by setting my version number to something like "git describe --tags".
2015-08-29 14:02:24	kadoban	It has seemed kinda … not great to me that I end up having to change the version in like 3 places (--version, .cabal file, and a git tag), but hasn't annoyed me enough to think something up
2015-08-29 14:02:26	arkeet	that sounds difficult.
2015-08-29 14:02:42	gigabytes	schell: is it true that mappend on Context values prefers the leftmost operand if field names clashes?
2015-08-29 14:02:56	serendependy	Is it possible to make a local type alias (e.g. in a where-clause)?
2015-08-29 14:03:04	arkeet	how do you know the commit hash to put in the .cabal file before you commit
2015-08-29 14:03:10	nkaretnikov	serendependy: no
2015-08-29 14:03:14	<--	Sindriav_ (~textual@88.103.123.123) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-29 14:03:32	serendependy	nkaretnikov, drat. Thanks
2015-08-29 14:03:44	-->	emilypi (~emily@2601:681:4301:237f:81ae:aa83:208b:665f) has joined #haskell
2015-08-29 14:03:45	gigabytes	schell: I mean, if I do (constField "something" "42" <> constField "something" "0"), the field should contain "42", right?
2015-08-29 14:04:00	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Ping timeout: 264 seconds)
2015-08-29 14:04:14	peti	arkeet: You don't necessarily need the hash. It's good enough to count the number of commits since the last tag. git describe works this way.
2015-08-29 14:04:24	nkaretnikov	serendependy: you can define it in a separate module and import it qualified
2015-08-29 14:04:33	-->	lldong (~lldong@183.16.168.190) has joined #haskell
2015-08-29 14:04:33	arkeet	if you don't branch at all maybe.
2015-08-29 14:04:38	peti	arkeet: My version number would be x.y.i where "i" is incremented every time I commit.
2015-08-29 14:04:48	-->	comprehension (~patrick@99-112-125-117.lightspeed.cicril.sbcglobal.net) has joined #haskell
2015-08-29 14:05:07	serendependy	nkaretnikov, Too much effort, I was just experimenting with something for development.
2015-08-29 14:05:26	serendependy	Wanted to see if I could get better type information in holes
2015-08-29 14:06:20	danilo2	Cale: hank you very much for this conversation :)
2015-08-29 14:06:41	<--	jinblack (~jinblack@ip184-189-234-229.sb.sd.cox.net) has quit (Remote host closed the connection)
2015-08-29 14:06:42	<--	jiang42 (~jiang42@116.237.85.218) has quit (Ping timeout: 265 seconds)
2015-08-29 14:07:10	<--	tiler (~tyler@188-178-250-234-static.dk.customer.tdc.net) has quit (Ping timeout: 260 seconds)
2015-08-29 14:07:33	<--	breadmonster (0e8b2df3@gateway/web/freenode/ip.14.139.45.243) has quit (Ping timeout: 246 seconds)
2015-08-29 14:08:16	-->	bread_pigeon (~bread_pig@190-21-34-202.baf.movistar.cl) has joined #haskell
2015-08-29 14:08:29	 *	Welkin throws bread crumbs at bread_pigeon 
2015-08-29 14:08:57	-->	Velpoman (~Velpoman@bender.gigo.com) has joined #haskell
2015-08-29 14:09:00	Welkin	breadmonster evolved into a... pigeon?
2015-08-29 14:09:01	quazimodo	geekosaur: is all good, thanks for the chat :)
2015-08-29 14:09:04	-->	Ayey_ (~rune@0135301590.0.fullrate.dk) has joined #haskell
2015-08-29 14:09:55	-->	Gurkenglas (~Gurkengla@dslb-178-000-176-040.178.000.pools.vodafone-ip.de) has joined #haskell
2015-08-29 14:10:06	-->	galor (~galor@69.172.150.215) has joined #haskell
2015-08-29 14:12:29	<--	hzjd (~Adium@dhcp-18-189-46-41.dyn.mit.edu) has quit (Quit: Leaving.)
2015-08-29 14:13:11	<--	burp (~quassel@ns337126.ip-188-165-218.eu) has quit (Read error: Connection reset by peer)
2015-08-29 14:13:50	-->	burp (~quassel@ns337126.ip-188-165-218.eu) has joined #haskell
2015-08-29 14:14:18	-->	damiel (~mkn@unaffiliated/damiel) has joined #haskell
2015-08-29 14:14:29	-->	agocorona (547fb55c@gateway/web/freenode/ip.84.127.181.92) has joined #haskell
2015-08-29 14:14:55	Fylwind	does min-ghc provide a means to install GHC through a batch script?
2015-08-29 14:15:06	<--	Zeitgeist_ (~mkn@unaffiliated/damiel) has quit (Ping timeout: 260 seconds)
2015-08-29 14:15:23	<--	rgrinberg (uid50668@gateway/web/irccloud.com/x-prslhzsshizisunl) has quit (Quit: Connection closed for inactivity)
2015-08-29 14:16:13	-->	jeltsch (~wolfgang@82.131.66.93.cable.starman.ee) has joined #haskell
2015-08-29 14:16:37	-->	noob_ (99dfcb2f@gateway/web/freenode/ip.153.223.203.47) has joined #haskell
2015-08-29 14:17:21	-->	malkomalko (~malkomalk@pool-71-190-36-41.nycmny.east.verizon.net) has joined #haskell
2015-08-29 14:18:02	<--	comprehension (~patrick@99-112-125-117.lightspeed.cicril.sbcglobal.net) has quit (Ping timeout: 272 seconds)
2015-08-29 14:18:21	-->	xcv_ (~quassel@183.Red-83-39-220.dynamicIP.rima-tde.net) has joined #haskell
2015-08-29 14:19:46	<--	ndrei (~avo@83.142.149.227) has quit (Ping timeout: 260 seconds)
2015-08-29 14:20:28	<--	rwiggins (~rwiggins@unaffiliated/rwiggins) has quit (Quit: Quitting)
2015-08-29 14:20:40	-->	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has joined #haskell
2015-08-29 14:20:48	<--	Ayey_ (~rune@0135301590.0.fullrate.dk) has quit (Ping timeout: 250 seconds)
2015-08-29 14:20:48	-->	Wuzzy (~Wuzzy@p549F8ABF.dip0.t-ipconnect.de) has joined #haskell
2015-08-29 14:21:48	-->	ndrei (~avo@83.142.149.227) has joined #haskell
2015-08-29 14:22:03	-->	slacko12 (~user@pc-253-49-45-190.cm.vtr.net) has joined #haskell
2015-08-29 14:22:22	-->	tulcod (~tulcod@unaffiliated/tulcod) has joined #haskell
2015-08-29 14:22:32	-->	hzjd (~Adium@dhcp-18-189-46-41.dyn.mit.edu) has joined #haskell
2015-08-29 14:24:33	<--	ioanel (~Icedove@188.27.201.214) has quit (Quit: ioanel)
2015-08-29 14:25:10	adarqui	classy-prelude is cool
2015-08-29 14:26:30	-->	Sindriav_ (~textual@88.103.123.123) has joined #haskell
2015-08-29 14:26:36	-->	Ryanar (~Ryan@ip70-188-163-19.ri.ri.cox.net) has joined #haskell
2015-08-29 14:26:57	<--	lldong (~lldong@183.16.168.190) has quit (Ping timeout: 256 seconds)
2015-08-29 14:27:17	-->	rperry (~rperry@c-50-135-202-230.hsd1.wa.comcast.net) has joined #haskell
2015-08-29 14:28:24	-->	xpilot (c036de04@gateway/web/freenode/ip.192.54.222.4) has joined #haskell
2015-08-29 14:28:34	xpilot	hello
2015-08-29 14:28:38	-->	BartAdv (uid90451@gateway/web/irccloud.com/x-fxkucevzwncjpskm) has joined #haskell
2015-08-29 14:28:39	hexagoxel	is there an overview of alternative preludes somewhere?
2015-08-29 14:28:50	mpickering	Does anyone have a link for "Freer Monads, More Extensible Effects" by Oleg?
2015-08-29 14:29:02	xpilot	question about gadts: are they allowed to have polykinded type variables?
2015-08-29 14:33:05	mpickering	yes
2015-08-29 14:33:05	-->	ralu (~ralu@188-230-233-174.dynamic.t-2.net) has joined #haskell
2015-08-29 14:33:05	xpilot	the following in particular is failing for me: data Thing (t :: k) where IntThing :: Thing Int
2015-08-29 14:33:05	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-29 14:33:05	mpickering	what is the error message?
2015-08-29 14:33:05	ralu	why would be mapM_ 3 times faster compared to mapM
2015-08-29 14:33:05	-->	KarolisK (~karolis@78-60-68-107.static.zebra.lt) has joined #haskell
2015-08-29 14:33:05	xpilot	@mpickering kind mismatch
2015-08-29 14:33:05	lambdabot	Unknown command, try @list
2015-08-29 14:33:05	xpilot	mpickering: kind mismatch between 'k1' and '*'
2015-08-29 14:33:05	arkeet	well
2015-08-29 14:33:05	c_wraith	ralu: because mapM needs to keep the results around, which means constructing a list to hold them, and keeping that list in memory.  mapM_ gets to skip all that
2015-08-29 14:33:05	-->	Sk0rn (~sk0rn@76-231-80-165.lightspeed.livnmi.sbcglobal.net) has joined #haskell
2015-08-29 14:33:05	-->	juanpablo_ (~juanpablo@181.39.194.178) has joined #haskell
2015-08-29 14:33:05	ralu	of course
2015-08-29 14:33:05	hexagoxel	also, there is no good way to improve a "common qualified imports" situation, is there? like have `Data.Map` as `M` without adding it in every module?
2015-08-29 14:33:05	arkeet	hexagoxel: unfortunately no
2015-08-29 14:33:05	<--	tulcod (~tulcod@unaffiliated/tulcod) has quit (Ping timeout: 256 seconds)
2015-08-29 14:33:05	-->	Freefood (~freefood@109.128.200.8) has joined #haskell
2015-08-29 14:33:05	arkeet	unless you want to use CPP #include or something
2015-08-29 14:33:05	<--	AntiSpamMeta (~MetaBot@AntiSpamMeta/.) has quit (Read error: Connection reset by peer)
2015-08-29 14:33:05	-->	AntiSpamMeta (~MetaBot@AntiSpamMeta/.) has joined #haskell
2015-08-29 14:33:05	xpilot	mpickering: namely Int has kind * but should have kind k1
2015-08-29 14:33:05	<--	hyy1 (~hyper_ecx@71.42.153.34) has quit (Ping timeout: 265 seconds)
2015-08-29 14:33:05	arkeet	well, you're saying that Thing can take a type of arbitrary kind
2015-08-29 14:33:05	arkeet	but then saying one of its constructors sets t = Int, which has kind *
2015-08-29 14:33:05	-->	tulcod (~tulcod@unaffiliated/tulcod) has joined #haskell
2015-08-29 14:33:05	mpickering	which version of GHC are you using? I get a different error anyway
2015-08-29 14:33:05	<--	xcombelle (~xcombelle@AToulouse-657-1-1082-207.w92-146.abo.wanadoo.fr) has quit (Quit: good night)
2015-08-29 14:33:09	xpilot	I am on 7.8.4
2015-08-29 14:33:32	mpickering	https://www.irccloud.com/pastebin/2WHo9ON5/
2015-08-29 14:33:53	Sindriav_	What's the best container for a modifiable 2D array?
2015-08-29 14:33:55	mpickering	That is the error on 7.10.2 which might be clearer?
2015-08-29 14:34:14	Sindriav_	specifically [[Word8]], even
2015-08-29 14:34:14	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Ping timeout: 250 seconds)
2015-08-29 14:34:34	xpilot	mpickering: well I suspect that what I want to do just can't be done
2015-08-29 14:34:47	arkeet	what is it that you want to do?
2015-08-29 14:34:48	mpickering	what do you want to do
2015-08-29 14:34:54	-->	Zeitgeist_ (~mkn@unaffiliated/damiel) has joined #haskell
2015-08-29 14:35:04	<--	AntiSpamMeta (~MetaBot@AntiSpamMeta/.) has quit (Read error: Connection reset by peer)
2015-08-29 14:35:10	<--	AustinMatherne (~AustinMat@li1047-129.members.linode.com) has quit (Ping timeout: 240 seconds)
2015-08-29 14:35:25	<--	juanpablo_ (~juanpablo@181.39.194.178) has quit (Ping timeout: 252 seconds)
2015-08-29 14:35:48	<--	damiel (~mkn@unaffiliated/damiel) has quit (Ping timeout: 264 seconds)
2015-08-29 14:35:50	-->	cognominal (~cognomina@87-231-91-9.rev.numericable.fr) has joined #haskell
2015-08-29 14:35:52	-->	AntiSpamMeta (~MetaBot@AntiSpamMeta/.) has joined #haskell
2015-08-29 14:36:01	<--	torpig (torpig@2600:3c00::f03c:91ff:fe98:beca) has quit (Ping timeout: 256 seconds)
2015-08-29 14:36:20	-->	voltalio (~voltalio@d28-23-148-121.dim.wideopenwest.com) has joined #haskell
2015-08-29 14:36:22	<--	voltalio (~voltalio@d28-23-148-121.dim.wideopenwest.com) has quit (Client Quit)
2015-08-29 14:36:22	xpilot	arkeet mpickering: literally just the Thing GADT, except with more cases. Ultimately my hope was to model higher-kinded types
2015-08-29 14:36:24	<--	Freefood (~freefood@109.128.200.8) has quit (Ping timeout: 264 seconds)
2015-08-29 14:36:25	-->	AustinMatherne (~AustinMat@li1047-129.members.linode.com) has joined #haskell
2015-08-29 14:36:28	mpickering	although I think that error message is a bit cryptic still, maybe it could be improved again
2015-08-29 14:36:32	-->	bollullera (~sevillana@95.63.152.106) has joined #haskell
2015-08-29 14:36:43	-->	qubozik (~qubozik@pool-68-238-241-108.phlapa.fios.verizon.net) has joined #haskell
2015-08-29 14:36:44	-->	voltalio (~voltalio@d28-23-148-121.dim.wideopenwest.com) has joined #haskell
2015-08-29 14:36:44	<--	erikd (~erikd@184.70.136.106) has quit (Quit: disappearing into the sunset)
2015-08-29 14:37:23	<--	ndrei (~avo@83.142.149.227) has quit (Ping timeout: 250 seconds)
2015-08-29 14:37:27	-->	L8D (~L8D@cpe-70-123-155-208.austin.res.rr.com) has joined #haskell
2015-08-29 14:37:28	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-29 14:37:40	<--	caumeslasal (~Thunderbi@mar92-10-82-239-65-141.fbx.proxad.net) has quit (Quit: caumeslasal)
2015-08-29 14:37:44	xpilot	mpickering: I might be able to get away with typeclasses, but it makes my code messier
2015-08-29 14:37:44	-->	torpig (torpig@2600:3c00::f03c:91ff:fe98:beca) has joined #haskell
2015-08-29 14:37:48	-->	ndrei (~avo@83.142.149.227) has joined #haskell
2015-08-29 14:37:55	<--	AntiSpamMeta (~MetaBot@AntiSpamMeta/.) has quit (Read error: Connection reset by peer)
2015-08-29 14:38:07	-->	Guest55693 (~greves@59-115-218-197.dynamic.hinet.net) has joined #haskell
2015-08-29 14:38:08	mpickering	if you remove the kind signature your current examples compiles so where do you run into the problem?
2015-08-29 14:38:08	-->	AntiSpamMeta (~MetaBot@AntiSpamMeta/.) has joined #haskell
2015-08-29 14:38:09	-->	jokra (~jokra@104.236.217.76) has joined #haskell
2015-08-29 14:38:33	<--	jatb (~jatb@199.127.226.210) has quit (Ping timeout: 244 seconds)
2015-08-29 16:38:37	--	irc: disconnected from server
2015-08-29 16:39:04	-->	RouxTheD1 (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-29 16:39:04	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-29 16:39:04	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-29 16:39:04	--	Channel #haskell: 1455 nicks (1 op, 0 voices, 1454 normals)
2015-08-29 16:39:04	--	URL for #haskell: http://www.haskell.org/
2015-08-29 16:39:04	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-29 16:39:12	ReinH	A train to ICFP!!!
2015-08-29 17:33:21	--	irc: disconnected from server
2015-08-29 21:05:50	-->	RouxTheD1 (~RouxTheDa@2601:645:8101:9a39:9080:7461:1b16:f64f) has joined #haskell
2015-08-29 21:05:50	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-29 21:05:50	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-29 21:05:50	--	Channel #haskell: 1416 nicks (1 op, 0 voices, 1415 normals)
2015-08-29 21:05:50	--	URL for #haskell: http://www.haskell.org/
2015-08-29 21:05:51	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-29 21:06:34	<--	emmanuel_erc (~user@d-128-74-83.bootp.Virginia.EDU) has quit (Read error: Connection reset by peer)
2015-08-29 21:06:41	-->	emmanuel_erc (~user@d-128-74-83.bootp.Virginia.EDU) has joined #haskell
2015-08-29 21:07:00	-->	jiang42 (~jiang42@116.237.85.218) has joined #haskell
2015-08-29 21:07:55	<--	Zeitgeist_ (~mkn@unaffiliated/damiel) has quit (Remote host closed the connection)
2015-08-29 21:08:27	-->	kadoban (~mud@unaffiliated/kadoban) has joined #haskell
2015-08-29 21:15:06	--	irc: disconnected from server
2015-08-29 21:15:24	-->	RouxTheD1 (~RouxTheDa@2601:645:8101:9a39:f98e:602b:66d0:d24a) has joined #haskell
2015-08-29 21:15:24	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-29 21:15:24	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-29 21:15:25	--	Channel #haskell: 1417 nicks (1 op, 0 voices, 1416 normals)
2015-08-29 21:15:25	--	URL for #haskell: http://www.haskell.org/
2015-08-29 21:15:25	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-29 21:15:34	kadoban	Importing a package … isn't very hard or something to be avoided really.
2015-08-29 21:17:06	<--	fuzzyhorns (~fuzzyhorn@73.38.57.191) has quit (Remote host closed the connection)
2015-08-29 21:17:12	<--	jedws (~jedws@c122-108-155-189.randw4.nsw.optusnet.com.au) has quit (Ping timeout: 264 seconds)
2015-08-29 21:17:18	<--	EunChe (~eunche@221.154.182.251) has quit (Ping timeout: 272 seconds)
2015-08-29 21:17:20	EvanR	split and join are also in the package "MissingH"
2015-08-29 21:17:32	EvanR	among other things
2015-08-29 21:17:42	-->	fuzzyhorns (~fuzzyhorn@73.38.57.191) has joined #haskell
2015-08-29 21:18:33	glguy	> splitOn "--" "a--b--c"
2015-08-29 21:18:35	lambdabot	 ["a","b","c"]
2015-08-29 21:18:42	glguy	The "split" package is pretty common to use
2015-08-29 21:18:53	EvanR	the package "stringsearch" has efficient algorithms for bytestring search and replace
2015-08-29 21:19:15	EvanR	and split
2015-08-29 21:20:35	<--	NeverDie (~NeverDie@cpe-184-152-22-98.nyc.res.rr.com) has quit (Quit: I'm off to sleep. ZZZzzz…)
2015-08-29 21:21:00	<--	nkartash_ (~nkartasho@46.163.148.179) has quit (Remote host closed the connection)
2015-08-29 21:21:23	-->	programo (~aswin@208-59-151-155.c3-0.mcm-ubr1.chi-mcm.il.cable.rcn.com) has joined #haskell
2015-08-29 21:22:18	-->	Argue_ (~Argue___@112.209.109.5) has joined #haskell
2015-08-29 21:22:33	-->	Ayey_ (~rune@0135301590.0.fullrate.dk) has joined #haskell
2015-08-29 21:22:58	-->	P1RATEZ (piratez@unaffiliated/p1ratez) has joined #haskell
2015-08-29 21:23:52	safinaskar	@hoogle (a -> b) -> ((b -> c) -> (a -> c))
2015-08-29 21:23:54	lambdabot	Prelude (.) :: (b -> c) -> (a -> b) -> a -> c
2015-08-29 21:23:54	lambdabot	Data.Function (.) :: (b -> c) -> (a -> b) -> a -> c
2015-08-29 21:23:54	lambdabot	Control.Parallel.Strategies (-|) :: (a -> b) -> Strategy b -> (b -> c) -> (a -> c)
2015-08-29 21:24:27	EvanR	:t flip (.)
2015-08-29 21:24:28	lambdabot	(a -> b) -> (b -> c) -> a -> c
2015-08-29 21:24:34	EvanR	:t (>>>)
2015-08-29 21:24:35	lambdabot	forall (k :: BOX) (cat :: k -> k -> *) (a :: k) (b :: k) (c :: k). Category cat => cat a b -> cat b c -> cat a c
2015-08-29 21:25:27	EvanR	Category (~>) => a ~> b -> b ~> c -> a ~> c
2015-08-29 21:25:28	<--	Argue (~Argue___@112.209.109.5) has quit (Ping timeout: 250 seconds)
2015-08-29 21:25:41	<--	MrScout (~MrScout@unaffiliated/mrscout) has quit (Ping timeout: 244 seconds)
2015-08-29 21:26:15	-->	jedws (~jedws@c122-108-155-189.randw4.nsw.optusnet.com.au) has joined #haskell
2015-08-29 21:27:10	<--	Ayey_ (~rune@0135301590.0.fullrate.dk) has quit (Ping timeout: 246 seconds)
2015-08-29 21:29:42	safinaskar	> and []
2015-08-29 21:29:44	lambdabot	 True
2015-08-29 21:29:50	<--	jdmnd (~jdmnd@cpc68140-bagu13-2-0-cust271.1-3.cable.virginm.net) has quit (Remote host closed the connection)
2015-08-29 21:29:55	safinaskar	or []
2015-08-29 21:30:05	safinaskar	> or []
2015-08-29 21:30:08	lambdabot	 False
2015-08-29 21:30:49	-->	erikd (~erikd@184.70.136.106) has joined #haskell
2015-08-29 21:30:58	<--	samrat (~samrat@123.236.183.215) has quit (Ping timeout: 260 seconds)
2015-08-29 21:31:21	-->	lkba_ (~AndChat43@bph110.neoplus.adsl.tpnet.pl) has joined #haskell
2015-08-29 21:31:26	-->	samrat (~samrat@123.236.183.215) has joined #haskell
2015-08-29 21:31:27	-->	MrScout (~MrScout@unaffiliated/mrscout) has joined #haskell
2015-08-29 21:31:47	-->	djapo (~archie@unaffiliated/djapo) has joined #haskell
2015-08-29 21:31:48	-->	jme__ (72183779@gateway/web/freenode/ip.114.24.55.121) has joined #haskell
2015-08-29 21:32:00	-->	qubozik (~qubozik@pool-68-238-241-108.phlapa.fios.verizon.net) has joined #haskell
2015-08-29 21:32:48	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-29 21:33:01	safinaskar	> if not $ False then "ok" else ""
2015-08-29 21:33:02	lambdabot	 "ok"
2015-08-29 21:33:17	-->	kmels (~kmels@184.62.151.186.static.intelnet.net.gt) has joined #haskell
2015-08-29 21:33:41	kosmikus	maway
2015-08-29 21:33:59	EvanR	mmm away mmm away
2015-08-29 21:34:05	EvanR	in the jungle ...
2015-08-29 21:34:12	kosmikus	hehe
2015-08-29 21:34:20	kosmikus	sorry
2015-08-29 21:34:32	<--	gamegoblin (~grant@64.187.168.233) has quit (Quit: gamegoblin)
2015-08-29 21:34:36	<--	lkba (~AndChat43@avo189.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 264 seconds)
2015-08-29 21:34:54	-->	gamegoblin (~grant@64.187.168.233) has joined #haskell
2015-08-29 21:35:54	<--	jme__ (72183779@gateway/web/freenode/ip.114.24.55.121) has quit (Ping timeout: 246 seconds)
2015-08-29 21:35:59	<--	qubozik (~qubozik@pool-68-238-241-108.phlapa.fios.verizon.net) has quit (Ping timeout: 244 seconds)
2015-08-29 21:36:28	-->	qubitnerd (~neutrino@unaffiliated/electron/x-8286743) has joined #haskell
2015-08-29 21:36:58	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 246 seconds)
2015-08-29 21:37:12	-->	Argue__ (~Argue___@112.209.109.5) has joined #haskell
2015-08-29 21:37:37	-->	mizu_no_oto (~textual@c-73-219-2-228.hsd1.ma.comcast.net) has joined #haskell
2015-08-29 21:37:43	-->	jiang42 (~jiang42@116.237.85.218) has joined #haskell
2015-08-29 21:38:08	-->	pt1 (~pt1@195.29.92.186) has joined #haskell
2015-08-29 21:38:13	<--	cofo (uid86997@gateway/web/irccloud.com/x-gzsfpopgvcjsrctu) has quit (Quit: Connection closed for inactivity)
2015-08-29 21:38:58	<--	dmiles_afk (dmiles@c-73-37-100-94.hsd1.wa.comcast.net) has quit
2015-08-29 21:39:17	-->	dmiles_afk (dmiles@c-73-37-100-94.hsd1.wa.comcast.net) has joined #haskell
2015-08-29 21:40:11	<--	Argue_ (~Argue___@112.209.109.5) has quit (Ping timeout: 250 seconds)
2015-08-29 21:40:51	-->	dcoutts_ (~duncan@204.239.250.1) has joined #haskell
2015-08-29 21:41:38	-->	Argue_ (~Argue___@112.209.109.5) has joined #haskell
2015-08-29 21:41:40	<--	cyborg-one (~cyborg-on@130-0-62-179.broadband.tenet.odessa.ua) has quit (Ping timeout: 244 seconds)
2015-08-29 21:44:03	-->	athan (a6ad389e@gateway/web/cgi-irc/kiwiirc.com/ip.166.173.56.158) has joined #haskell
2015-08-29 21:44:32	<--	Argue__ (~Argue___@112.209.109.5) has quit (Ping timeout: 250 seconds)
2015-08-29 21:44:59	<--	jedws (~jedws@c122-108-155-189.randw4.nsw.optusnet.com.au) has quit (Read error: Connection reset by peer)
2015-08-29 21:45:12	 *	hackagebot opaleye-classy 0.3.1.0 - Opaleye wrapped up in classy MTL attire.  https://hackage.haskell.org/package/opaleye-classy-0.3.1.0 (BenKolera)
2015-08-29 21:45:13	-->	jedws (~jedws@c122-108-155-189.randw4.nsw.optusnet.com.au) has joined #haskell
2015-08-29 21:46:35	<--	eazar001 (~ebrahim@99-151-0-118.lightspeed.snrmca.sbcglobal.net) has quit (Read error: Connection reset by peer)
2015-08-29 21:46:56	-->	citizen11 (~citizen11@unaffiliated/citizen11) has joined #haskell
2015-08-29 21:47:33	-->	gothicsouth (~gothicsou@cpe-76-177-66-223.natcky.res.rr.com) has joined #haskell
2015-08-29 21:47:41	<--	tristanp (~tristanp@2601:602:8a00:1310::4) has quit (Remote host closed the connection)
2015-08-29 21:47:57	-->	tristanp (~tristanp@2601:602:8a00:1310::4) has joined #haskell
2015-08-29 21:48:42	safinaskar	> zipWith (+) [1] [2,2]
2015-08-29 21:48:42	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-29 21:48:44	lambdabot	 [3]
2015-08-29 21:49:22	athan	> liftA2 (+) (ZipList [1]) (ZipList [2,2])
2015-08-29 21:49:24	lambdabot	 ZipList {getZipList = [3]}
2015-08-29 21:49:27	-->	eazar001 (~ebrahim@99-151-0-118.lightspeed.snrmca.sbcglobal.net) has joined #haskell
2015-08-29 21:50:04	<--	samrat (~samrat@123.236.183.215) has quit (Ping timeout: 256 seconds)
2015-08-29 21:50:14	<--	ParahSailin (~parahsail@unaffiliated/parahsailin) has quit (Ping timeout: 272 seconds)
2015-08-29 21:50:24	athan	:t Data.Key.zip
2015-08-29 21:50:25	lambdabot	Not in scope: ‘Data.Key.zip’
2015-08-29 21:50:29	athan	darn
2015-08-29 21:50:35	<--	eazar001 (~ebrahim@99-151-0-118.lightspeed.snrmca.sbcglobal.net) has quit (Client Quit)
2015-08-29 21:50:57	<--	faruq (~faruq@180.247.231.216) has quit (Remote host closed the connection)
2015-08-29 21:51:46	<--	jeadre (~jeadre@li1421-113.members.linode.com) has quit (Remote host closed the connection)
2015-08-29 21:52:04	-->	jisfon (b8062ccb@gateway/web/freenode/ip.184.6.44.203) has joined #haskell
2015-08-29 21:52:08	-->	ParahSailin (~parahsail@unaffiliated/parahsailin) has joined #haskell
2015-08-29 21:52:13	-->	eazar001 (~ebrahim@99-151-0-118.lightspeed.snrmca.sbcglobal.net) has joined #haskell
2015-08-29 21:52:34	jisfon	factorial x = if x == 1 then 1 else x * factorial (x-1)
2015-08-29 21:52:35	-->	KarolisK (~karolis@78-60-68-107.static.zebra.lt) has joined #haskell
2015-08-29 21:52:41	Lokathor	when i try to run my own copy of lambdabot, it doesn't seem to properly read the rc file that i specify
2015-08-29 21:52:43	jisfon	if I understand how that works, do I understand recursion?
2015-08-29 21:52:47	Lokathor	oh well, not like it needs to be reset often
2015-08-29 21:53:10	<--	bb010g (uid21050@gateway/web/irccloud.com/x-dneuadtgayawclgl) has quit (Quit: Connection closed for inactivity)
2015-08-29 21:53:11	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 264 seconds)
2015-08-29 21:53:28	 *	athan whispers in jisfon's ear "recursion schemes"
2015-08-29 21:53:43	-->	jeadre (~jeadre@li1421-113.members.linode.com) has joined #haskell
2015-08-29 21:53:46	athan	jisfon: Basically, yeah. I suggest learning about folds nest :)
2015-08-29 21:53:47	Lokathor	jisfon, as i said to someone in #lisp moments ago: it partly controls your actions, but it also obeys your commands
2015-08-29 21:53:49	<--	lldong (~lldong@183.16.168.165) has quit (Remote host closed the connection)
2015-08-29 21:53:54	athan	next*
2015-08-29 21:53:58	safinaskar	> intercalate " | " ["a", "b"]
2015-08-29 21:54:00	CMCDragonkai	[safinaskar (guest)] > intercalate " | " ["a", "b"]
2015-08-29 21:54:00	lambdabot	 "a | b"
2015-08-29 21:54:03	-->	djcoin (~djcoin@122-59-201-20.jetstream.xtra.co.nz) has joined #haskell
2015-08-29 21:54:05	<--	CMCDragonkai (~nobody@ec2-52-8-178-236.us-west-1.compute.amazonaws.com) has left #haskell
2015-08-29 21:54:10	<--	dcoutts_ (~duncan@204.239.250.1) has quit (Ping timeout: 240 seconds)
2015-08-29 21:54:11	-->	CMCDragonkai (~nobody@ec2-52-8-178-236.us-west-1.compute.amazonaws.com) has joined #haskell
2015-08-29 21:54:15	safinaskar	two bots?
2015-08-29 21:54:16	<--	CMCDragonkai (~nobody@ec2-52-8-178-236.us-west-1.compute.amazonaws.com) has left #haskell
2015-08-29 21:54:20	athan	o_o
2015-08-29 21:54:28	-->	CMCDragonkai (~nobody@ec2-52-8-178-236.us-west-1.compute.amazonaws.com) has joined #haskell
2015-08-29 21:54:31	Hafydd	> sdfsdf
2015-08-29 21:54:32	Lokathor	> "test" ++ "this"
2015-08-29 21:54:33	lambdabot	 Not in scope: ‘sdfsdf’
2015-08-29 21:54:34	lambdabot	 "testthis"
2015-08-29 21:54:38	athan	CMCDragonkai: @yo
2015-08-29 21:54:44	athan	hm
2015-08-29 21:55:03	Lokathor	jisfon, note that what you put for factorial is "recursive" but not "tail recursive"
2015-08-29 21:55:05	-->	hamishmack (~hamishmac@209-82-80-116.dedicated.allstream.net) has joined #haskell
2015-08-29 21:55:18	athan	< foldr (+) 0 [1,2,3,4] -- jisfon
2015-08-29 21:55:24	athan	> foldr (+) 0 [1,2,3,4]
2015-08-29 21:55:26	lambdabot	 10
2015-08-29 21:55:29	athan	-_-
2015-08-29 21:56:20	Lokathor	>foldr1 (+) [1,2,3,4] -- also some fold variants available
2015-08-29 21:56:28	Lokathor	> foldr1 (+) [1,2,3,4]
2015-08-29 21:56:30	lambdabot	 10
2015-08-29 21:56:41	Lokathor	wow no one can type to lambdabot today
2015-08-29 21:56:50	-->	samrat (~samrat@123.236.183.215) has joined #haskell
2015-08-29 21:56:54	athan	Lokathor: :P
2015-08-29 21:56:55	-->	lldong (~lldong@183.16.168.165) has joined #haskell
2015-08-29 21:57:43	<--	Epichero (~Tyler@2601:602:c500:6cab:d0af:c0a6:17b7:4d65) has quit (Ping timeout: 244 seconds)
2015-08-29 21:58:28	<--	programo (~aswin@208-59-151-155.c3-0.mcm-ubr1.chi-mcm.il.cable.rcn.com) has quit (Ping timeout: 272 seconds)
2015-08-29 22:00:48	-->	cads1 (~M@104-9-5-196.lightspeed.tukrga.sbcglobal.net) has joined #haskell
2015-08-29 22:01:05	c_wraith	@botsnack
2015-08-29 22:01:05	lambdabot	:)
2015-08-29 22:01:18	<--	cads (~M@104-9-5-196.lightspeed.tukrga.sbcglobal.net) has quit (Ping timeout: 244 seconds)
2015-08-29 22:01:27	<--	mizu_no_oto (~textual@c-73-219-2-228.hsd1.ma.comcast.net) has quit (Quit: Computer has gone to sleep.)
2015-08-29 22:02:42	EvanR	jisfon: to understand recursion you must first understand recursion
2015-08-29 22:02:47	<--	jeadre (~jeadre@li1421-113.members.linode.com) has quit (Remote host closed the connection)
2015-08-29 22:03:43	-->	IIJamesII (~james@S0106c8fb2684c5f9.gv.shawcable.net) has joined #haskell
2015-08-29 22:03:48	-->	nilg (~user@46.254.134.147) has joined #haskell
2015-08-29 22:03:58	<--	ttt_fff (88988e3a@gateway/web/freenode/ip.136.152.142.58) has quit (Quit: Page closed)
2015-08-29 22:04:50	-->	jeadre (~jeadre@li1421-113.members.linode.com) has joined #haskell
2015-08-29 22:05:52	kadoban	To understand recursion, you must first understand slightly smaller recursion (and then no recursion)
2015-08-29 22:06:17	c_wraith	kadoban: slightly? hah.  I demand the subproblems be half the size of the original problem!
2015-08-29 22:06:19	-->	EunChe (~eunche@221.154.182.251) has joined #haskell
2015-08-29 22:06:22	rom1504	too late, I'm stuck in EvanR infinite recursion
2015-08-29 22:06:24	kadoban	:)
2015-08-29 22:06:29	--	qubitnerd is now known as eru
2015-08-29 22:06:56	<--	lldong (~lldong@183.16.168.165) has quit (Remote host closed the connection)
2015-08-29 22:07:02	Cale	kadoban:  let ones = 1 : ones
2015-08-29 22:07:13	jisfon	EvanR: that would eventually crash; no base case, right?
2015-08-29 22:07:28	kadoban	Heh … crap, yeah.
2015-08-29 22:09:09	EvanR	jisfon: eventually, youll hope for a crash
2015-08-29 22:09:10	<--	jiang42 (~jiang42@116.237.85.218) has quit (Ping timeout: 240 seconds)
2015-08-29 22:09:12	EvanR	and never get one
2015-08-29 22:09:26	athan	> "To" <> fix $ " understand recursion, first you must" ++
2015-08-29 22:09:28	lambdabot	 <hint>:1:57:
2015-08-29 22:09:28	lambdabot	     parse error (possibly incorrect indentation or mismatched brackets)
2015-08-29 22:09:32	athan	dangit
2015-08-29 22:09:44	 *	Lokathor giggles
2015-08-29 22:09:44	athan	> "To" ++ fix (" understand recursion, first you must" ++)
2015-08-29 22:09:47	lambdabot	 "To understand recursion, first you must understand recursion, first you mus...
2015-08-29 22:10:17	-->	adek (~adek@199.201.64.2) has joined #haskell
2015-08-29 22:10:17	rom1504	lambdabot is too smart for you
2015-08-29 22:10:39	athan	:c
2015-08-29 22:10:52	-->	centrinia (~centrinia@2602:306:bd0d:a690:3842:3140:3de:c9fd) has joined #haskell
2015-08-29 22:12:51	<--	Literphor (~alfred@209.237.92.139) has quit (Quit: Literphor)
2015-08-29 22:13:05	<--	proteusguy (~proteusgu@ppp-110-168-229-245.revip5.asianet.co.th) has quit (Ping timeout: 240 seconds)
2015-08-29 22:14:56	-->	danthemyth (~danthemyt@c-73-132-137-77.hsd1.wv.comcast.net) has joined #haskell
2015-08-29 22:15:16	-->	hmrm (~hmrm@198.244.104.109) has joined #haskell
2015-08-29 22:15:49	<--	c_wraith (~c_wraith@28d244188882.click-network.com) has quit (Ping timeout: 265 seconds)
2015-08-29 22:16:20	-->	lldong (~lldong@183.16.168.165) has joined #haskell
2015-08-29 22:17:16	<--	OrangeShark (~OrangeSha@2602:306:c5c9:a3e0:c9fc:82f6:990d:bfd4) has quit (Quit: Leaving)
2015-08-29 22:19:35	<--	danthemyth (~danthemyt@c-73-132-137-77.hsd1.wv.comcast.net) has quit (Ping timeout: 264 seconds)
2015-08-29 22:19:51	<--	lldong (~lldong@183.16.168.165) has quit (Remote host closed the connection)
2015-08-29 22:20:19	-->	lldong (~lldong@li754-37.members.linode.com) has joined #haskell
2015-08-29 22:20:39	<--	joobus (~kira@cpe-97-99-86-202.tx.res.rr.com) has quit (Quit: leaving)
2015-08-29 22:20:40	<--	osa1 (~omer@d207-216-110-93.bchsia.telus.net) has quit (Ping timeout: 256 seconds)
2015-08-29 22:24:02	<--	L8D (~L8D@cpe-70-123-155-208.austin.res.rr.com) has quit (Ping timeout: 244 seconds)
2015-08-29 22:24:04	-->	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-29 22:26:16	<--	wei2912 (~wei2912@unaffiliated/wei2912) has quit (Remote host closed the connection)
2015-08-29 22:26:16	-->	Swizec (~swizec@c-67-164-98-169.hsd1.ca.comcast.net) has joined #haskell
2015-08-29 22:26:36	<--	Swizec (~swizec@c-67-164-98-169.hsd1.ca.comcast.net) has quit (Client Quit)
2015-08-29 22:27:15	<--	yeji (~yeji@2604:2000:1002:e03b:ddd1:4ab4:7309:345c) has quit (Remote host closed the connection)
2015-08-29 22:27:46	-->	osa1_ (~omer@d207-216-110-93.bchsia.telus.net) has joined #haskell
2015-08-29 22:27:56	-->	Epichero (~Tyler@2601:602:c500:6cab:54d2:ad0a:e25b:dcf7) has joined #haskell
2015-08-29 22:28:26	-->	vlatkoB (~IRC_clien@unaffiliated/vlatkob) has joined #haskell
2015-08-30 08:39:30	--	irc: disconnected from server
2015-08-30 08:39:49	-->	RouxTheD1 (~RouxTheDa@2601:645:8101:9a39:4c4f:a818:6426:1b6d) has joined #haskell
2015-08-30 08:39:49	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-30 08:39:49	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-30 08:39:49	--	Channel #haskell: 1441 nicks (1 op, 0 voices, 1440 normals)
2015-08-30 08:39:49	--	URL for #haskell: http://www.haskell.org/
2015-08-30 08:39:49	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-30 08:39:55	<--	spaceships (~spaceship@nome01.eecs.oregonstate.edu) has quit (Ping timeout: 244 seconds)
2015-08-30 08:40:42	<--	Herogx_ (~Herogx@109.79.80.39) has quit (Read error: Connection reset by peer)
2015-08-30 08:41:03	<--	Peaker (~Peaker@bzq-158-168-31-2.red.bezeqint.net) has quit (Ping timeout: 255 seconds)
2015-08-30 08:41:16	<--	qubozik (~qubozik@pool-68-238-241-108.phlapa.fios.verizon.net) has quit (Ping timeout: 265 seconds)
2015-08-30 08:43:08	<--	xcv_ (~quassel@183.Red-83-39-220.dynamicIP.rima-tde.net) has quit (Remote host closed the connection)
2015-08-30 08:43:26	<--	emilypi (~emily@2601:681:4301:237f:2092:73ab:5107:1b43) has quit (Ping timeout: 240 seconds)
2015-08-30 08:43:27	<--	Ayey_ (~rune@0135301590.0.fullrate.dk) has quit (Ping timeout: 256 seconds)
2015-08-30 08:43:35	-->	akegalj (~akegalj@93-139-42-121.adsl.net.t-com.hr) has joined #haskell
2015-08-30 08:43:50	-->	ecthiender (~ecthiende@unaffiliated/ecthiender) has joined #haskell
2015-08-30 08:44:07	-->	ztennix (~ztennix@125.34.113.140) has joined #haskell
2015-08-30 08:44:36	akegalj	i have defined:  safeHead [] = [] ; safeHead = tail    and ghc tells me they have different number of arguments ?
2015-08-30 08:45:04	-->	Ayey_ (~rune@0135301590.0.fullrate.dk) has joined #haskell
2015-08-30 08:45:23	glguy	One has 1 explicit argument and the other has 0
2015-08-30 08:45:27	glguy	they have to have the same
2015-08-30 08:45:31	-->	Guest73597 (~araujo@122.225.36.57) has joined #haskell
2015-08-30 08:45:41	-->	Luke (~luke@unaffiliated/luke) has joined #haskell
2015-08-30 08:45:47	<--	Guest73597 (~araujo@122.225.36.57) has quit (Client Quit)
2015-08-30 08:45:59	-->	Literphor (~alfred@209.237.92.139) has joined #haskell
2015-08-30 08:46:26	akegalj	glguy: is it because on second definition it won't pattern match?
2015-08-30 08:46:31	<--	qnikst (~quassel@gentoo/developer/qnikst) has quit (Remote host closed the connection)
2015-08-30 08:46:45	-->	lamefun (~lamefun2@37.113.41.138) has joined #haskell
2015-08-30 08:46:47	-->	spaceships (~spaceship@nome01.eecs.oregonstate.edu) has joined #haskell
2015-08-30 08:47:05	-->	qnikst (~quassel@gentoo/developer/qnikst) has joined #haskell
2015-08-30 08:47:17	glguy	No, because it's missing an explicit argument
2015-08-30 08:47:22	glguy	safeHead xs = tail xs
2015-08-30 08:47:33	akegalj	glguy: aha ok
2015-08-30 08:47:54	<--	cchalmers (~textual@cpc1-shep13-2-0-cust104.8-3.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-30 08:48:30	<--	ztennix (~ztennix@125.34.113.140) has quit (Ping timeout: 240 seconds)
2015-08-30 08:48:42	<--	razvanc87 (~razvanc87@89.101.207.154) has quit (Ping timeout: 255 seconds)
2015-08-30 08:49:02	-->	mazur (49196aab@gateway/web/freenode/ip.73.25.106.171) has joined #haskell
2015-08-30 08:49:28	-->	NeverDie (~NeverDie@cpe-184-152-22-98.nyc.res.rr.com) has joined #haskell
2015-08-30 08:49:33	mazur	is the counit for the product/exponent just un-curry?
2015-08-30 08:49:38	<--	wei2912 (~wei2912@unaffiliated/wei2912) has quit (Remote host closed the connection)
2015-08-30 08:50:11	-->	grrz (~zrrg@103.225.100.51) has joined #haskell
2015-08-30 08:50:56	<--	NeverDie (~NeverDie@cpe-184-152-22-98.nyc.res.rr.com) has quit (Quit: I'm off to sleep. ZZZzzz…)
2015-08-30 08:51:04	-->	juanpablo_ (~juanpablo@181.39.194.178) has joined #haskell
2015-08-30 08:51:27	-->	hmrm (~hmrm@198.244.104.109) has joined #haskell
2015-08-30 08:51:40	-->	osa1_ (~omer@72.2.55.21) has joined #haskell
2015-08-30 08:51:52	-->	cchalmers (~textual@cpc1-shep13-2-0-cust104.8-3.cable.virginm.net) has joined #haskell
2015-08-30 08:53:46	-->	Jesin (~Jesin@pool-72-83-138-125.washdc.fios.verizon.net) has joined #haskell
2015-08-30 08:53:58	<--	gensym2 (~zrrg@103.225.100.51) has quit (Ping timeout: 272 seconds)
2015-08-30 08:54:05	-->	abhiii5459_ (75ca648a@gateway/web/freenode/ip.117.202.100.138) has joined #haskell
2015-08-30 08:54:12	-->	Big_G (~Big_G@c-76-104-131-61.hsd1.wa.comcast.net) has joined #haskell
2015-08-30 08:54:14	-->	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has joined #haskell
2015-08-30 08:54:16	<--	Zeitgeist_ (~mkn@unaffiliated/damiel) has quit (Quit: Konversation terminated!)
2015-08-30 08:54:35	-->	gnataly (~steve@162-201-41-182.lightspeed.frokca.sbcglobal.net) has joined #haskell
2015-08-30 08:54:58	<--	florin_ (~florin36@5-12-38-231.residential.rdsnet.ro) has quit (Quit: Leaving)
2015-08-30 08:55:25	<--	juanpablo_ (~juanpablo@181.39.194.178) has quit (Ping timeout: 244 seconds)
2015-08-30 08:55:55	-->	thepreacher (~thepreach@118.136.198.146.dyn.plus.net) has joined #haskell
2015-08-30 08:56:01	-->	tulcod (~tulcod@unaffiliated/tulcod) has joined #haskell
2015-08-30 08:56:29	<--	peter62 (~peter62@82.95.239.200) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-08-30 08:56:46	<--	Literphor (~alfred@209.237.92.139) has quit (Quit: Literphor)
2015-08-30 08:57:06	<--	druidd (~lindsey@cpe-98-27-54-57.nc.res.rr.com) has quit (Ping timeout: 240 seconds)
2015-08-30 08:57:09	<--	rusuatras (~textual@84.123.10.75.dyn.user.ono.com) has quit (Quit: My MacBook has gone to sleep. ZZZzzz…)
2015-08-30 08:57:14	-->	rgr (~user@f054175112.adsl.alicedsl.de) has joined #haskell
2015-08-30 08:57:24	-->	Zeitgeist_ (~mkn@unaffiliated/damiel) has joined #haskell
2015-08-30 08:57:30	<--	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 244 seconds)
2015-08-30 08:58:08	-->	kadoban (~mud@unaffiliated/kadoban) has joined #haskell
2015-08-30 08:58:24	-->	hamishmack (~hamishmac@72.2.55.21) has joined #haskell
2015-08-30 08:58:35	-->	blue_deref (~blue_dere@cpe-74-77-246-241.buffalo.res.rr.com) has joined #haskell
2015-08-30 08:59:16	<--	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has quit (Ping timeout: 246 seconds)
2015-08-30 08:59:50	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-30 09:01:39	<--	dosboot (~chatzilla@c-174-53-152-116.hsd1.mn.comcast.net) has quit (Ping timeout: 252 seconds)
2015-08-30 09:02:18	<--	gothicsouth (~gothicsou@cpe-76-177-66-223.natcky.res.rr.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-30 09:03:05	Saizan	the counit is more like eval, uncurry/curry are the hom isomorphisms though
2015-08-30 09:04:26	<--	athan (a6ad38ac@gateway/web/cgi-irc/kiwiirc.com/ip.166.173.56.172) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-08-30 09:04:27	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 260 seconds)
2015-08-30 09:04:28	<--	eatsfoobars (~eatsfooba@ppp-2-84-71-122.home.otenet.gr) has quit
2015-08-30 09:04:48	-->	codesoup (~codesoup@CPE68b6fcf580d3-CM68b6fcf580d0.cpe.net.cable.rogers.com) has joined #haskell
2015-08-30 09:04:49	-->	caumeslasal (~Thunderbi@mar92-10-82-239-65-141.fbx.proxad.net) has joined #haskell
2015-08-30 09:04:57	-->	athan (a6ad38ac@gateway/web/cgi-irc/kiwiirc.com/ip.166.173.56.172) has joined #haskell
2015-08-30 09:05:53	-->	eatsfoobars (~eatsfooba@ppp-2-84-71-122.home.otenet.gr) has joined #haskell
2015-08-30 09:06:54	<--	athan (a6ad38ac@gateway/web/cgi-irc/kiwiirc.com/ip.166.173.56.172) has quit (Client Quit)
2015-08-30 09:06:59	-->	dosboot (~chatzilla@c-174-53-152-116.hsd1.mn.comcast.net) has joined #haskell
2015-08-30 09:07:04	-->	araujo_ (~araujo@42.81.42.47) has joined #haskell
2015-08-30 09:07:11	-->	athan (a6ad38ac@gateway/web/cgi-irc/kiwiirc.com/ip.166.173.56.172) has joined #haskell
2015-08-30 09:07:46	<--	araujo_ (~araujo@42.81.42.47) has quit (Read error: Connection reset by peer)
2015-08-30 09:07:51	<--	joco42_ (~joco42@dsl-hkibrasgw4-58c03a-80.dhcp.inet.fi) has quit (Remote host closed the connection)
2015-08-30 09:08:10	-->	araujo_ (~araujo@115.231.224.137) has joined #haskell
2015-08-30 09:08:22	-->	mettekou (~mettekou@94-224-246-64.access.telenet.be) has joined #haskell
2015-08-30 09:08:52	mettekou	Anyone here who has any experience with x86 code generation from three address code in Haskell?
2015-08-30 09:08:53	-->	setser (~setser@ip-95-221-224-35.bb.netbynet.ru) has joined #haskell
2015-08-30 09:09:04	-->	Slay (~Slay@89-69-89-60.dynamic.chello.pl) has joined #haskell
2015-08-30 09:09:15	-->	L8D (~L8D@cpe-70-123-155-208.austin.res.rr.com) has joined #haskell
2015-08-30 09:09:17	<--	araujo_ (~araujo@115.231.224.137) has quit (Client Quit)
2015-08-30 09:09:24	<--	osa1_ (~omer@72.2.55.21) has quit (Ping timeout: 255 seconds)
2015-08-30 09:09:25	<--	athan (a6ad38ac@gateway/web/cgi-irc/kiwiirc.com/ip.166.173.56.172) has quit (Client Quit)
2015-08-30 09:09:39	-->	athan (a6ad38ac@gateway/web/cgi-irc/kiwiirc.com/ip.166.173.56.172) has joined #haskell
2015-08-30 09:09:42	-->	joco42_ (~joco42@dsl-hkibrasgw4-58c03a-80.dhcp.inet.fi) has joined #haskell
2015-08-30 09:09:50	<--	bergey (~user@pool-71-175-195-73.phlapa.east.verizon.net) has quit (Read error: Connection reset by peer)
2015-08-30 09:09:51	<--	adnap (~adnap@cpe-24-28-68-235.austin.res.rr.com) has quit (Ping timeout: 255 seconds)
2015-08-30 09:10:07	-->	bergey (~user@pool-71-175-195-73.phlapa.east.verizon.net) has joined #haskell
2015-08-30 09:10:39	<--	jo__ (uid41683@gateway/web/irccloud.com/x-okurfabaiezxgsst) has quit (Quit: Connection closed for inactivity)
2015-08-30 09:11:24	-->	MrDetonia (~zac@host81-140-181-242.range81-140.btcentralplus.com) has joined #haskell
2015-08-30 09:11:36	mazur	Saizan: with eval : B^A x A -> B, what does it look like?
2015-08-30 09:12:22	mazur	is it the curry of that? B^A -> B^A ?
2015-08-30 09:13:07	<--	hamishmack (~hamishmac@72.2.55.21) has quit (Quit: hamishmack)
2015-08-30 09:13:36	-->	hamishmack (~hamishmac@72.2.55.21) has joined #haskell
2015-08-30 09:14:01	setser	How can I rewrite this code without do-notation?
2015-08-30 09:14:16	setser	code:
2015-08-30 09:14:20	<--	amiri_ (~amiri@cpe-104-174-60-215.socal.res.rr.com) has quit (Remote host closed the connection)
2015-08-30 09:14:28	setser	main = do
2015-08-30 09:14:34	setser	a <- getLine
2015-08-30 09:14:35	-->	araujo (~araujo@gentoo/developer/araujo) has joined #haskell
2015-08-30 09:14:40	setser	b <- getLine
2015-08-30 09:14:40	Saizan	mazur: the counit at A is supposed to be a morphism F (G A) -> A
2015-08-30 09:14:43	<--	erkin (~erkin@unaffiliated/erkin) has quit (Ping timeout: 260 seconds)
2015-08-30 09:15:02	setser	putStrLn $ operate a b
2015-08-30 09:15:08	cocreature	setser: getLine >>= \a -> getLine >>= \b -> putStrLn $ operate a b
2015-08-30 09:15:11	Saizan	mazur: if F = (x A) and G = (^A) that's exactly eval
2015-08-30 09:15:12	MarcelineVQ	setser: you're lookign for >>=
2015-08-30 09:15:29	setser	No, i've forgot about lambdas
2015-08-30 09:15:39	<--	mariothemad (~mario@cpe-66-68-77-254.austin.res.rr.com) has quit (Remote host closed the connection)
2015-08-30 09:15:48	setser	Thanks
2015-08-30 09:15:50	Saizan	mazur: i guess i should have said counit at B should be F (G B) -> B, to not confuse variables
2015-08-30 09:15:55	cocreature	yw
2015-08-30 09:16:01	-->	amiri (~amiri@cpe-104-174-60-215.socal.res.rr.com) has joined #haskell
2015-08-30 09:16:13	-->	trism (~jconti@unaffiliated/trism) has joined #haskell
2015-08-30 09:16:33	 *	hackagebot THEff 0.1.0.1 - TH implementation of effects.  https://hackage.haskell.org/package/THEff-0.1.0.1 (kolodeznydiver)
2015-08-30 09:16:49	mazur	hmm, thanks, still taking it in (just learned adjoints today)
2015-08-30 09:17:00	<--	athan (a6ad38ac@gateway/web/cgi-irc/kiwiirc.com/ip.166.173.56.172) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-08-30 09:17:23	-->	Erlkonig (~Erlkonig@p3191087-ipngn19001marunouchi.tokyo.ocn.ne.jp) has joined #haskell
2015-08-30 09:17:33	-->	erkin (~erkin@unaffiliated/erkin) has joined #haskell
2015-08-30 09:17:48	-->	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-30 09:18:09	<--	FireFly (~firefly@oftn/member/FireFly) has quit (Ping timeout: 244 seconds)
2015-08-30 09:18:41	mazur	oh wait, so the counit there IS eval?
2015-08-30 09:18:56	-->	sleepomeno (~greg@d91-128-253-31.cust.tele2.at) has joined #haskell
2015-08-30 09:19:07	Saizan	mazur: yah
2015-08-30 09:19:07	-->	enaqx (~enaqx@188.163.69.11) has joined #haskell
2015-08-30 09:19:27	--	naudiz|offline is now known as naudiz
2015-08-30 09:19:36	mazur	i guess the variable mislead me: epsilon for eval (when usually counit is eta)
2015-08-30 09:19:51	sleepomeno	how can i pass a flag to "stack install" as i could with "cabal install -fFLAG"?
2015-08-30 09:20:02	<--	enaqx (~enaqx@188.163.69.11) has quit (Remote host closed the connection)
2015-08-30 09:20:19	-->	qubitnerd (~neutrino@unaffiliated/electron/x-8286743) has joined #haskell
2015-08-30 09:21:03	<--	michel_slm (uid16025@gateway/web/irccloud.com/x-cxezssxdnymonjee) has quit (Quit: Connection closed for inactivity)
2015-08-30 09:21:30	cocreature	do we have IORefs paired with unique integers in some package so that I can get an Ord instance for them?
2015-08-30 09:21:45	cocreature	I really don't want to loop through a list every time just to check if something is in a Set
2015-08-30 09:22:12	cocreature	ofc I could easily implement that myself, but I'd prefer not to if it already exists
2015-08-30 09:22:22	-->	hyy (~hyper_ecx@71.42.153.34) has joined #haskell
2015-08-30 09:22:56	Cale	sleepomeno: https://github.com/commercialhaskell/stack/blob/master/GUIDE.md search for "Flags and GHC options"
2015-08-30 09:23:00	cocreature	mazur: I don't think I have ever seen eta being used for the counit. It is nearly always used for the unit
2015-08-30 09:23:09	cocreature	wikipedia agrees https://en.wikipedia.org/wiki/Adjoint_functors#Counit-unit_adjunction
2015-08-30 09:23:09	mazur	oh, nm afterall i had it backwards :)
2015-08-30 09:23:31	cocreature	I kinda hate those greek letters. I can never remember which one stands for what :)
2015-08-30 09:23:33	-->	marcus-aurelius (~quassel@p20030073AF0EA2525D20B9CC94AB2BB9.dip0.t-ipconnect.de) has joined #haskell
2015-08-30 09:24:12	mazur	so the unit is what i was looking for is eta: B -> (B x A)^A i think
2015-08-30 09:24:32	<--	marcus-aurelius (~quassel@p20030073AF0EA2525D20B9CC94AB2BB9.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2015-08-30 09:24:41	--	hyy is now known as CmdrSquirrel
2015-08-30 09:24:49	--	CmdrSquirrel is now known as hyy
2015-08-30 09:25:38	-->	Erlkonig_ (~Erlkonig@p3191087-ipngn19001marunouchi.tokyo.ocn.ne.jp) has joined #haskell
2015-08-30 09:26:27	-->	urodna (~urodna@unaffiliated/urodna) has joined #haskell
2015-08-30 09:27:11	<--	rcsgns (~rcsgns@i125-201-224-253.s42.a013.ap.plala.or.jp) has quit (Ping timeout: 265 seconds)
2015-08-30 09:28:14	<--	_ashbreeze_ (~mark@72-161-216-144.dyn.centurytel.net) has quit (Remote host closed the connection)
2015-08-30 09:28:35	cocreature	looks correct
2015-08-30 09:29:01	<--	Erlkonig (~Erlkonig@p3191087-ipngn19001marunouchi.tokyo.ocn.ne.jp) has quit (Ping timeout: 246 seconds)
2015-08-30 09:29:31	-->	Goplat (~goplat@reactos/developer/Goplat) has joined #haskell
2015-08-30 09:29:45	-->	_ashbreeze_ (~mark@72-161-216-144.dyn.centurytel.net) has joined #haskell
2015-08-30 09:29:54	geekosaur	we really need to split the two meanings of Ord someday
2015-08-30 09:30:14	StoneToad	2 meanings?
2015-08-30 09:30:19	-->	Zenith_ (~textual@50-89-52-83.res.bhn.net) has joined #haskell
2015-08-30 09:30:33	<--	eatsfoobars (~eatsfooba@ppp-2-84-71-122.home.otenet.gr) has quit
2015-08-30 09:30:55	<--	_ashbreeze_ (~mark@72-161-216-144.dyn.centurytel.net) has quit (Client Quit)
2015-08-30 09:30:55	<--	Zenith_ (~textual@50-89-52-83.res.bhn.net) has quit (Max SendQ exceeded)
2015-08-30 09:30:58	geekosaur	it's used for two different things: mathematical total ordering, requiring that the type have a meaningful total order, which IORef (and some other things) do not
2015-08-30 09:31:05	cocreature	yeah
2015-08-30 09:31:09	-->	_ashbreeze_ (~mark@72-161-216-144.dyn.centurytel.net) has joined #haskell
2015-08-30 09:31:33	geekosaur	and an "index total ordering" where all that matters is that something like Map can order them, but there's no conceptual meaning to the order of values of the type
2015-08-30 09:31:41	--	hyy is now known as SparkySquirrel
2015-08-30 09:31:59	<--	_ashbreeze_ (~mark@72-161-216-144.dyn.centurytel.net) has quit (Remote host closed the connection)
2015-08-30 09:32:10	<--	jiang42_ (~jiang42@116.237.85.218) has quit (Ping timeout: 240 seconds)
2015-08-30 09:32:15	geekosaur	complex numbers are another example; there's no "proper" total ordering for e.g. (<) to work, but you can define a perfectly workable ordering for use in a Map
2015-08-30 09:32:24	<--	sleepomeno (~greg@d91-128-253-31.cust.tele2.at) has left #haskell
2015-08-30 09:33:46	-->	_ashbreeze_ (~mark@72-161-216-144.dyn.centurytel.net) has joined #haskell
2015-08-30 09:33:52	-->	Zariel (~chris@166.59.112.87.dyn.plus.net) has joined #haskell
2015-08-30 09:34:16	<--	cognominal (~cognomina@87-231-91-9.rev.numericable.fr) has quit (Quit: This computer has gone to sleep)
2015-08-30 09:35:19	-->	stef204 (~stef204@unaffiliated/stef-204/x-384198) has joined #haskell
2015-08-30 09:35:44	StoneToad	ahh yes, I see waht you're saying
2015-08-30 09:36:42	akegalj	in xmonad documentation there are many definitions like   functionName :: !(...)  what this exclamation mark means?
2015-08-30 09:36:49	geekosaur	strict
2015-08-30 09:36:54	akegalj	thnx
2015-08-30 09:37:31	geekosaur	basically the compiler inserts a "seq" whenever something defines it, to ensure that it isn't _|_ (undefined / bottom)
2015-08-30 09:37:58	<--	hmrm (~hmrm@198.244.104.109) has quit (Quit: Lost terminal)
2015-08-30 09:37:58	<--	skeet70 (~skeet70@inet-hqmc01-o.oracle.com) has quit (Remote host closed the connection)
2015-08-30 09:38:20	-->	skeet70 (~skeet70@inet-hqmc01-o.oracle.com) has joined #haskell
2015-08-30 09:38:28	c_wraith	Err.  It shouldn't be in the type signature, though
2015-08-30 09:39:27	geekosaur	I think the actual reference is to the type of the "hook" functions in XConfig
2015-08-30 09:40:04	geekosaur	(fields with function values, e.g. XConfig { ... logHook :: !(X ()) ... } )
2015-08-30 09:40:09	c_wraith	ah, ok
2015-08-30 09:40:29	c_wraith	It seems a bit pointless to make function fields strict, tthough...
2015-08-30 09:40:52	<--	Rutger` (~devbin@nelisvanaalst.demon.nl) has quit (Read error: Connection reset by peer)
2015-08-30 09:41:09	ezrios	is there something like a monoid on Constraint kinds?
2015-08-30 09:41:19	geekosaur	I think that's just so it's caught before the window manager starts instead of the first time it lays out a workspace
2015-08-30 09:41:39	-->	Rutger` (~devbin@nelisvanaalst.demon.nl) has joined #haskell
2015-08-30 09:41:51	ezrios	I would like to write something like `Constraint -> Constraint -> Constraint` to glue together multiple constraints
2015-08-30 09:42:17	c_wraith	ezrios: does (,) work?
2015-08-30 09:42:25	-->	darkf_ (~darkf___@unaffiliated/darkf) has joined #haskell
2015-08-30 09:42:26	<--	Zariel (~chris@166.59.112.87.dyn.plus.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-30 09:42:44	-->	Elish (~x@unaffiliated/elish) has joined #haskell
2015-08-30 09:42:47	ezrios	c_wraith: programming at the type level
2015-08-30 09:43:01	c_wraith	ezrios: yes.  (Foo a, Bar a)
2015-08-30 09:43:42	-->	m104ru (~m104ru@77.241.45.39) has joined #haskell
2015-08-30 09:43:53	<--	rfmind_ (~ruslan@2a02:a03f:4e1:4300:28c:faff:fe88:26cf) has quit (Remote host closed the connection)
2015-08-30 09:43:57	ezrios	c_wraith: what if I don't know that there's only two and instead have a list of them
2015-08-30 09:44:06	<--	mazur (49196aab@gateway/web/freenode/ip.73.25.106.171) has quit (Quit: Page closed)
2015-08-30 09:44:16	--	Guest77360 is now known as amiller
2015-08-30 09:44:23	<--	amiller (~socrates1@li175-104.members.linode.com) has quit (Changing host)
2015-08-30 09:44:23	-->	amiller (~socrates1@unaffiliated/socrates1024) has joined #haskell
2015-08-30 09:44:26	-->	vmesons (~rmacleod@24-212-184-107.cable.teksavvy.com) has joined #haskell
2015-08-30 09:44:33	c_wraith	ezrios: then you'd need type families
2015-08-30 09:44:44	-->	lucasbrunialti (~lucasbrun@179.177.233.136) has joined #haskell
2015-08-30 09:44:53	ezrios	c_wraith: can you elaborate a little? just dipping my toes into type level programming
2015-08-30 09:45:20	ezrios	http://stackoverflow.com/questions/28142914/managing-explosion-of-constraints-haskell ?
2015-08-30 09:45:58	<--	mettekou (~mettekou@94-224-246-64.access.telenet.be) has quit (Ping timeout: 260 seconds)
2015-08-30 09:46:04	<--	darkf (~darkf___@unaffiliated/darkf) has quit (Ping timeout: 244 seconds)
2015-08-30 09:46:38	c_wraith	That's the sort of thing I was thinking of, yeah
2015-08-30 09:46:59	ezrios	ok, thanks muchly
2015-08-30 09:47:06	-->	mada (~mariano@181.170.72.150) has joined #haskell
2015-08-30 09:47:14	-->	osa1_ (~omer@72.2.55.21) has joined #haskell
2015-08-30 09:47:20	-->	gautamc (~cgautam@104-53-248-27.lightspeed.tukrga.sbcglobal.net) has joined #haskell
2015-08-30 09:47:44	-->	jutaro (~jutaro@p200300455C7930A321A0249A526836FB.dip0.t-ipconnect.de) has joined #haskell
2015-08-30 09:48:19	<--	mkster (~mkster@i577B734F.versanet.de) has quit (Ping timeout: 250 seconds)
2015-08-30 09:48:19	-->	FireFly (~firefly@firefly.xen.prgmr.com) has joined #haskell
2015-08-30 09:48:28	<--	vmeson (~rmacleod@24-212-184-107.cable.teksavvy.com) has quit (Ping timeout: 246 seconds)
2015-08-30 10:03:04	--	irc: disconnected from server
2015-08-30 10:29:19	-->	RouxTheD1 (~RouxTheDa@2601:645:8101:9a39:f812:102f:9391:6293) has joined #haskell
2015-08-30 10:29:19	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-30 10:29:19	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-30 10:29:20	--	Channel #haskell: 1450 nicks (1 op, 0 voices, 1449 normals)
2015-08-30 10:29:20	--	URL for #haskell: http://www.haskell.org/
2015-08-30 10:29:20	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-30 10:29:21	-->	danald (~danald@f052192247.adsl.alicedsl.de) has joined #haskell
2015-08-30 10:29:59	-->	tulcod (~tulcod@unaffiliated/tulcod) has joined #haskell
2015-08-30 10:30:01	<--	cleamoon (~cleamoon@c213-89-114-250.bredband.comhem.se) has quit (Read error: Connection reset by peer)
2015-08-30 10:30:01	<--	ohpesky (~ohpesky@DHCP-23105.iis.sinica.edu.tw) has quit (Ping timeout: 265 seconds)
2015-08-30 10:30:07	-->	foreignFunction (~ai@ip-4761.sunline.net.ua) has joined #haskell
2015-08-30 10:31:11	-->	qubitnerd (~neutrino@unaffiliated/electron/x-8286743) has joined #haskell
2015-08-30 10:31:21	-->	orbifx (~orbifx@w-202.cust-20351.ip.static.uno.uk.net) has joined #haskell
2015-08-30 10:31:36	<--	setser (~setser@ip-95-221-224-35.bb.netbynet.ru) has quit (Ping timeout: 264 seconds)
2015-08-30 10:31:45	-->	Durz0 (~Durz0@ip4d1568cd.dynamic.kabel-deutschland.de) has joined #haskell
2015-08-30 10:32:10	<--	thepreacher (~thepreach@118.136.198.146.dyn.plus.net) has quit
2015-08-30 10:32:19	-->	qubozik (~qubozik@pool-68-238-241-108.phlapa.fios.verizon.net) has joined #haskell
2015-08-30 10:34:20	<--	hamishmack (~hamishmac@72.2.55.21) has quit (Quit: hamishmack)
2015-08-30 10:35:06	-->	osa1_ (~omer@72.2.55.21) has joined #haskell
2015-08-30 10:36:48	<--	sweenzor (sid4809@gateway/web/irccloud.com/x-wanpgzaddngamwxw) has quit (Quit: Connection closed for inactivity)
2015-08-30 10:36:52	-->	Taejo (~max@216.15.33.241) has joined #haskell
2015-08-30 10:37:20	-->	sgflt (~mbr@p54B5A607.dip0.t-ipconnect.de) has joined #haskell
2015-08-30 10:37:38	<--	tulcod (~tulcod@unaffiliated/tulcod) has quit (Ping timeout: 246 seconds)
2015-08-30 10:38:09	mpickering	kuznero: Maybe you can start by telling what the error is
2015-08-30 10:38:17	-->	arw (~arw@impulse.informatik.uni-erlangen.de) has joined #haskell
2015-08-30 10:39:57	<--	cchalmers (~textual@cpc1-shep13-2-0-cust104.8-3.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-30 10:40:13	-->	eatsfoobars (~eatsfooba@ppp-2-84-71-122.home.otenet.gr) has joined #haskell
2015-08-30 10:40:44	<--	Taejo (~max@216.15.33.241) has quit (Read error: Connection reset by peer)
2015-08-30 10:41:00	-->	cchalmers (~textual@cpc1-shep13-2-0-cust104.8-3.cable.virginm.net) has joined #haskell
2015-08-30 10:41:14	-->	librapk (~librapk@115.186.108.244) has joined #haskell
2015-08-30 10:41:20	-->	Elish (~x@unaffiliated/elish) has joined #haskell
2015-08-30 10:41:41	 *	hackagebot universe-base 1.0.1 - A class for finite and recursively enumerable types and some helper functions for enumerating them  https://hackage.haskell.org/package/universe-base-1.0.1 (DanielWagner)
2015-08-30 10:41:43	 *	hackagebot universe-instances-extended 1.0.0.1 - Universe instances for types from select extra packages  https://hackage.haskell.org/package/universe-instances-extended-1.0.0.1 (DanielWagner)
2015-08-30 10:42:06	<--	howdoi (uid224@gateway/web/irccloud.com/x-yphapugnrvvcayjr) has quit (Quit: Connection closed for inactivity)
2015-08-30 10:42:12	<--	SenpaiSilver (SenpaiSilv@lse83-h01-31-38-248-147.dsl.sta.abo.bbox.fr) has quit (Quit: Leaving)
2015-08-30 10:42:22	<--	Deadhand (~deadf00t@CPE009027bcf235-CM602ad087f8f7.cpe.net.cable.rogers.com) has quit (Ping timeout: 244 seconds)
2015-08-30 10:43:07	<--	Sgeo (~Sgeo@ool-44c0f875.dyn.optonline.net) has quit (Quit: Leaving)
2015-08-30 10:43:11	<--	bb010g (uid21050@gateway/web/irccloud.com/x-zpdmzluqcdicdvah) has quit (Quit: Connection closed for inactivity)
2015-08-30 10:43:11	<--	whaletechno (~whaletech@unaffiliated/whaletechno) has quit (Quit: ha det bra)
2015-08-30 10:43:13	<--	tristanp (~tristanp@c-50-159-71-64.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2015-08-30 10:44:27	-->	gothicsouth (~gothicsou@cpe-76-177-66-223.natcky.res.rr.com) has joined #haskell
2015-08-30 10:45:12	-->	tulcod (~tulcod@unaffiliated/tulcod) has joined #haskell
2015-08-30 10:45:25	<--	jeadre (~jeadre@li1421-113.members.linode.com) has quit (Remote host closed the connection)
2015-08-30 10:46:39	-->	zariuq (~zar@109.58.145.54.bredband.tre.se) has joined #haskell
2015-08-30 10:46:44	-->	jiang42 (~jiang42@116.237.85.218) has joined #haskell
2015-08-30 10:46:54	<--	t4nk452 (547fb55c@gateway/web/freenode/ip.84.127.181.92) has quit (Ping timeout: 246 seconds)
2015-08-30 10:47:17	-->	arjanb (8259a911@gateway/web/freenode/ip.130.89.169.17) has joined #haskell
2015-08-30 10:47:23	lpaste_	kuznero pasted “No title” at http://lpaste.net/139900
2015-08-30 10:47:28	-->	jeadre (~jeadre@li1421-113.members.linode.com) has joined #haskell
2015-08-30 10:47:37	kuznero	mpickering: this one http://lpaste.net/139900
2015-08-30 10:49:01	-->	eguneys (~user@85.103.184.92) has joined #haskell
2015-08-30 10:49:15	eguneys	what is this `(. even)`
2015-08-30 10:49:19	<--	librapk (~librapk@115.186.108.244) has quit (Quit: Leaving)
2015-08-30 10:49:44	-->	subleq (~gavin@207.173.246.52) has joined #haskell
2015-08-30 10:49:56	<--	Jinxit (~Jinxit@c-5d2e71d5.013-341-73746f24.cust.bredbandsbolaget.se) has quit (Quit: WeeChat 1.0.1)
2015-08-30 10:50:10	-->	ioanel (~Icedove@188.27.201.214) has joined #haskell
2015-08-30 10:50:12	-->	cyborg-one (~cyborg-on@130-0-62-179.broadband.tenet.odessa.ua) has joined #haskell
2015-08-30 10:50:20	MarcelineVQ	eguneys: hehe was that intentional?
2015-08-30 10:50:20	benzrf	"what is this even:
2015-08-30 10:50:23	benzrf	"
2015-08-30 10:50:24	-->	rusuatras (~textual@84.123.10.75.dyn.user.ono.com) has joined #haskell
2015-08-30 10:50:29	glguy	:t (. even)
2015-08-30 10:50:29	lambdabot	Integral a => (Bool -> c) -> a -> c
2015-08-30 10:50:30	benzrf	eguneys: it's a composition section
2015-08-30 10:50:50	glguy	(. even) is \f -> f . even
2015-08-30 10:51:46	<--	jiang42 (~jiang42@116.237.85.218) has quit (Ping timeout: 260 seconds)
2015-08-30 10:52:05	<--	SparkySquirrel (~hyper_ecx@71.42.153.34) has quit (Ping timeout: 256 seconds)
2015-08-30 10:52:21	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-30 10:52:22	<--	brulo (~brulo@cpe-76-170-76-201.socal.res.rr.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-30 10:52:48	mpickering	kuznero: try QuickCheck
2015-08-30 10:52:53	-->	Welkin (~Welkin@rrcs-97-78-71-195.se.biz.rr.com) has joined #haskell
2015-08-30 10:53:19	-->	ztennix (~ztennix@125.34.113.140) has joined #haskell
2015-08-30 10:53:23	<--	Paradisee (~quassel@2.239.28.120) has quit (Ping timeout: 246 seconds)
2015-08-30 10:53:28	kuznero	mpickering: that worked :) thanks a lot!
2015-08-30 10:53:50	<--	strburst (~allen@lawn-128-61-26-37.lawn.gatech.edu) has quit (Ping timeout: 240 seconds)
2015-08-30 10:54:05	-->	JagaJaga (~jaga@178.62.202.50) has joined #haskell
2015-08-30 10:54:11	<--	kuznero (d45d2726@gateway/web/freenode/ip.212.93.39.38) has quit (Quit: Page closed)
2015-08-30 10:54:12	-->	Pokinawa (~Ezalor@cpc12-cmbg17-2-0-cust215.5-4.cable.virginm.net) has joined #haskell
2015-08-30 10:54:42	eguneys	I dont understand the type how does it type work 
2015-08-30 10:54:45	eguneys	:t (. even)
2015-08-30 10:54:46	lambdabot	Integral a => (Bool -> c) -> a -> c
2015-08-30 10:55:08	-->	whaletechno (~whaletech@unaffiliated/whaletechno) has joined #haskell
2015-08-30 10:55:44	-->	martin-t (~martin-t@c-50-184-152-244.hsd1.ca.comcast.net) has joined #haskell
2015-08-30 10:56:31	-->	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has joined #haskell
2015-08-30 10:56:55	-->	nisstyre (~yourstrul@li611-52.members.linode.com) has joined #haskell
2015-08-30 10:57:29	EvanR	:t (.)
2015-08-30 10:57:31	lambdabot	(b -> c) -> (a -> b) -> a -> c
2015-08-30 10:57:33	EvanR	:t even
2015-08-30 10:57:35	lambdabot	Integral a => a -> Bool
2015-08-30 10:57:54	<--	ztennix (~ztennix@125.34.113.140) has quit (Ping timeout: 244 seconds)
2015-08-30 10:57:57	EvanR	do the maf
2015-08-30 10:58:00	-->	Meow-J (uid69628@gateway/web/irccloud.com/x-ujrzqopbjglhitkw) has joined #haskell
2015-08-30 10:58:13	jmcarthur	orphan rewrite rules are not any less likely to fire as long as the module is imported, right?
2015-08-30 10:58:41	<--	m0rphism (~m0rphism@HSI-KBW-095-208-106-119.hsi5.kabel-badenwuerttemberg.de) has quit (Remote host closed the connection)
2015-08-30 10:59:01	<--	malkomalko (~malkomalk@ool-457a2213.dyn.optonline.net) has quit (Ping timeout: 265 seconds)
2015-08-30 10:59:16	-->	m0rphism (~m0rphism@HSI-KBW-095-208-106-119.hsi5.kabel-badenwuerttemberg.de) has joined #haskell
2015-08-30 10:59:31	jmcarthur	i'm using orphan rewrite rules as a way to prevent the rewrite rules from firing in the definitions of quickcheck properties (which i am annotating with NOINLINE to prevent the rules from firing at call sites even if they are imported there)
2015-08-30 10:59:33	<--	aarvar (~foewfoiew@50-47-105-139.evrt.wa.frontiernet.net) has left #haskell
2015-08-30 10:59:36	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-30 10:59:43	jmcarthur	at least, i am hoping this is reasonable way to go
2015-08-30 11:00:01	-->	P1RATEZ (piratez@unaffiliated/p1ratez) has joined #haskell
2015-08-30 11:00:57	<--	araujo (~araujo@gentoo/developer/araujo) has quit (Quit: Leaving)
2015-08-30 11:01:14	jmcarthur	basically it's module A.NoRules with functions and not-inlinable quickcheck properties, and module A which reexports module A.NoRules and defines some rewrite rules
2015-08-30 11:01:26	<--	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has quit (Ping timeout: 265 seconds)
2015-08-30 11:01:51	-->	browndawg (~browndawg@120.56.196.55) has joined #haskell
2015-08-30 11:02:03	<--	eguneys (~user@85.103.184.92) has quit (Quit: ERC (IRC client for Emacs 25.0.50.1))
2015-08-30 11:02:13	-->	godel (~gonzalo@190.18.148.147) has joined #haskell
2015-08-30 11:02:26	<--	Elish (~x@unaffiliated/elish) has quit (Quit: Elish)
2015-08-30 11:02:44	<--	osa1_ (~omer@72.2.55.21) has quit (Ping timeout: 250 seconds)
2015-08-30 11:02:48	<--	martin-t (~martin-t@c-50-184-152-244.hsd1.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-30 11:03:10	-->	ztennix (~ztennix@125.34.113.140) has joined #haskell
2015-08-30 11:03:47	<--	JagaJaga (~jaga@178.62.202.50) has quit (Ping timeout: 264 seconds)
2015-08-30 11:03:50	-->	ttt_fff (88988e3a@gateway/web/freenode/ip.136.152.142.58) has joined #haskell
2015-08-30 11:04:06	-->	Lokathor (~Lokathor@75-167-147-83.bois.qwest.net) has joined #haskell
2015-08-30 11:04:22	ttt_fff	is there a good example of "how to reify case/pattern matching into a EDSL" using Template Haskell ?
2015-08-30 11:04:50	<--	samrat (~samrat@123.236.183.215) has quit (Ping timeout: 260 seconds)
2015-08-30 11:05:09	<--	foreignFunction (~ai@ip-4761.sunline.net.ua) has quit (Read error: Connection reset by peer)
2015-08-30 11:05:25	<--	whaletechno (~whaletech@unaffiliated/whaletechno) has left #haskell ("Textual IRC Client: www.textualapp.com")
2015-08-30 11:06:05	-->	LonZealot (~IceChat9@p5B2BE9EF.dip0.t-ipconnect.de) has joined #haskell
2015-08-30 11:06:41	-->	dan_f (~dan@24-148-32-207.c3-0.grn-ubr1.chi-grn.il.cable.rcn.com) has joined #haskell
2015-08-30 11:06:47	-->	whaletechno (~whaletech@unaffiliated/whaletechno) has joined #haskell
2015-08-30 11:07:04	<--	Reshi (~rishi@123.3.183.199) has quit (Ping timeout: 250 seconds)
2015-08-30 11:07:04	<--	Zoetrope (~Zoetrope@95-44-31-229-dynamic.agg2.kok.dbc-mgr.eircom.net) has quit (Read error: Connection reset by peer)
2015-08-30 11:07:20	-->	Zoetrope (~Zoetrope@95-44-31-229-dynamic.agg2.kok.dbc-mgr.eircom.net) has joined #haskell
2015-08-30 11:07:54	-->	ptcek (~ptcek@89.239.24.150) has joined #haskell
2015-08-30 11:07:59	<--	ztennix (~ztennix@125.34.113.140) has quit (Ping timeout: 264 seconds)
2015-08-30 11:08:04	-->	DoubleAC (~Fleet@pool-108-56-208-50.washdc.fios.verizon.net) has joined #haskell
2015-08-30 11:08:30	-->	twanvl (~twanvl@dhcp-077-250-086-217.chello.nl) has joined #haskell
2015-08-30 11:10:05	-->	edon (~user@albalug/edon) has joined #haskell
2015-08-30 11:10:19	-->	samrat (~samrat@123.236.183.215) has joined #haskell
2015-08-30 11:10:36	<--	joco42_ (~joco42@dsl-hkibrasgw4-58c03a-80.dhcp.inet.fi) has quit (Remote host closed the connection)
2015-08-30 11:10:49	<--	bennofs (~benno@2a02:810a:8200:2934:e611:5bff:fef6:ce26) has quit (Ping timeout: 244 seconds)
2015-08-30 11:10:50	-->	L8D (~L8D@cpe-70-123-155-208.austin.res.rr.com) has joined #haskell
2015-08-30 11:10:56	-->	chattered (~user@dhcp-90-221.inf.ed.ac.uk) has joined #haskell
2015-08-30 11:12:06	<--	Erlkonig_ (~Erlkonig@p3191087-ipngn19001marunouchi.tokyo.ocn.ne.jp) has quit (Quit: Leaving...)
2015-08-30 11:12:31	<--	subleq (~gavin@207.173.246.52) has quit (Ping timeout: 268 seconds)
2015-08-30 11:12:40	<--	browndawg (~browndawg@120.56.196.55) has quit (Ping timeout: 272 seconds)
2015-08-30 11:13:07	-->	ztennix (~ztennix@125.34.113.140) has joined #haskell
2015-08-30 11:14:42	-->	Sindriav_ (~textual@250.99.broadband10.iol.cz) has joined #haskell
2015-08-30 11:15:20	<--	lamefun (~lamefun2@37.113.41.138) has quit (Quit: Leaving)
2015-08-30 11:15:24	<--	plutoniix (~plutoniix@node-lih.pool-101-108.dynamic.totbb.net) has quit (Read error: Connection reset by peer)
2015-08-30 11:15:51	-->	mizu_no_oto (~textual@c-73-219-2-228.hsd1.ma.comcast.net) has joined #haskell
2015-08-30 11:16:03	--	darkf_ is now known as darkf
2015-08-30 11:16:36	<--	lkba (~AndChat43@bph110.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 264 seconds)
2015-08-30 11:16:50	<--	fengshaun (~fengshaun@unaffiliated/fengshaun) has quit (Ping timeout: 240 seconds)
2015-08-30 11:17:25	-->	plutoniix (~plutoniix@node-lih.pool-101-108.dynamic.totbb.net) has joined #haskell
2015-08-30 11:17:45	-->	micmus (~micmus@aanj237.neoplus.adsl.tpnet.pl) has joined #haskell
2015-08-30 11:17:51	athan	wtf we can have comprehension / do-like syntax inside guards?
2015-08-30 11:17:54	<--	ztennix (~ztennix@125.34.113.140) has quit (Ping timeout: 250 seconds)
2015-08-30 11:18:02	-->	fengshaun (~fengshaun@unaffiliated/fengshaun) has joined #haskell
2015-08-30 11:18:17	athan	I'm guessing in the identity monad?
2015-08-30 11:18:25	<--	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 246 seconds)
2015-08-30 11:18:26	mpickering	aka PatternGuards
2015-08-30 11:18:40	-->	mr- (~martin@dslb-188-108-144-004.188.108.pools.vodafone-ip.de) has joined #haskell
2015-08-30 11:18:41	athan	lawd
2015-08-30 11:18:44	athan	thanks mpickering
2015-08-30 11:18:45	-->	zipper (~luv_panda@154.122.159.179) has joined #haskell
2015-08-30 11:19:15	--	zipper is now known as Guest17155
2015-08-30 11:19:18	<--	tulcod (~tulcod@unaffiliated/tulcod) has quit (Ping timeout: 268 seconds)
2015-08-30 11:19:22	pyon	:k (forall a. Either a)
2015-08-30 11:19:22	<--	Guest17155 (~luv_panda@154.122.159.179) has quit (Client Quit)
2015-08-30 11:19:24	lambdabot	* -> *
2015-08-30 11:19:27	<--	samrat (~samrat@123.236.183.215) has quit (Ping timeout: 255 seconds)
2015-08-30 11:19:29	pyon	How does that even make sense?
2015-08-30 11:19:50	EvanR	Either is  * -> * -> *
2015-08-30 11:19:53	-->	jellie (~luv_panda@unaffiliated/zipper) has joined #haskell
2015-08-30 11:20:02	EvanR	apply it to some type and you get * -> *
2015-08-30 11:20:11	-->	subleq (~gavin@207.173.246.52) has joined #haskell
2015-08-30 11:20:31	--	jellie is now known as zipper
2015-08-30 11:20:33	-->	strburst (~allen@128.61.26.37) has joined #haskell
2015-08-30 11:20:53	pyon	EvanR: Yes, but, checking TaPL, `forall (a :: K). e` only makes sense when `a :: K ⊢ e :: ★`.
2015-08-30 11:21:08	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-30 11:21:17	EvanR	what is K in this context
2015-08-30 11:21:25	pyon	a's kind.
2015-08-30 11:21:40	EvanR	forall a . Either a, a is a type not a kind
2015-08-30 11:21:52	-->	pt1 (~pt1@195.29.92.186) has joined #haskell
2015-08-30 11:21:52	pyon	All types have a kind.
2015-08-30 11:22:14	-->	osa1_ (~omer@72.2.55.21) has joined #haskell
2015-08-30 11:22:21	EvanR	a is a *
2015-08-30 11:22:32	pyon	In this particular case, yes.
2015-08-30 11:22:53	-->	mgsloan (~mgsloan@72.2.55.21) has joined #haskell
2015-08-30 11:23:02	-->	ztennix (~ztennix@125.34.113.140) has joined #haskell
2015-08-30 11:23:05	pyon	My complaint is that (forall a. e) only makes sense when e has kind *, or so TaPL says.
2015-08-30 11:23:43	pyon	Note that `e` alone can make sense regardless of its kind.
2015-08-30 11:23:54	EvanR	that rule seems to be talking about specific language of types
2015-08-30 11:23:59	-->	Erlkonig (~Erlkonig@p3191087-ipngn19001marunouchi.tokyo.ocn.ne.jp) has joined #haskell
2015-08-30 11:24:22	pyon	Ah, I thought Haskell was loosely based on System F-omega. That's why I consulted the definition of System F-omega.
2015-08-30 11:24:27	EvanR	and haskells type language is another specific language
2015-08-30 11:25:02	-->	Paradisee (~quassel@2.239.28.120) has joined #haskell
2015-08-30 11:25:04	mpickering	pyon which page of tapl are you looking at 
2015-08-30 11:25:15	pyon	450
2015-08-30 11:25:20	<--	subleq (~gavin@207.173.246.52) has quit (Ping timeout: 272 seconds)
2015-08-30 11:25:22	pyon	The rule K-ALL.
2015-08-30 11:25:34	-->	nkhodyunya1 (~Adium@dnm.184.123.124.92.dsl.krasnet.ru) has joined #haskell
2015-08-30 11:25:40	-->	voltalio (~voltalio@d28-23-148-121.dim.wideopenwest.com) has joined #haskell
2015-08-30 11:25:43	-->	browndawg (~browndawg@120.59.64.251) has joined #haskell
2015-08-30 11:25:47	-->	emilypi (~emily@2601:681:4301:237f:2092:73ab:5107:1b43) has joined #haskell
2015-08-30 11:26:09	<--	sgflt (~mbr@p54B5A607.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2015-08-30 11:26:48	<--	GreyLensman (~Kip@172.97.47.89) has quit (Quit: Leaving)
2015-08-30 11:26:48	<--	nkhodyunya (~Adium@dnm.76.99.124.92.dsl.krasnet.ru) has quit (Ping timeout: 264 seconds)
2015-08-30 11:27:07	-->	tempname11 (~tempname1@79.165.104.134) has joined #haskell
2015-08-30 11:27:12	athan	pyon: SystemFC_pro (with an arrow up) is based off SystemF-omega, I'm pretty sure
2015-08-30 11:27:18	athan	while SystemFC doesn't have kinds
2015-08-30 11:27:48	-->	fresheyeball_ (62f579ff@gateway/web/freenode/ip.98.245.121.255) has joined #haskell
2015-08-30 11:27:50	<--	Excureo (~c@68-113-0-218.static.knwc.wa.charter.com) has quit (Ping timeout: 240 seconds)
2015-08-30 11:27:59	EvanR	pyon: so for Either a, you need rule K-APP
2015-08-30 11:28:02	fresheyeball_	hello out there, do anyone here know golang?
2015-08-30 11:28:15	monochrom	I don't
2015-08-30 11:28:16	EvanR	K-ALL doesnt apply because Either a isn't *
2015-08-30 11:28:23	<--	ztennix (~ztennix@125.34.113.140) has quit (Ping timeout: 264 seconds)
2015-08-30 11:28:27	pyon	?
2015-08-30 11:28:28	fresheyeball_	I am wondering if its possible to write a function in go for foldr on a signal
2015-08-30 11:28:37	-->	EvilMachine (~evi1m4chi@xdsl-89-0-125-1.netcologne.de) has joined #haskell
2015-08-30 11:28:38	athan	fresheyeball_: o/
2015-08-30 11:28:47	pyon	The rule K-APP doesn't require a to have kind *. The rule K-APP would require `Either a` to have kind *.
2015-08-30 11:28:49	fresheyeball_	hey athan
2015-08-30 11:28:56	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Remote host closed the connection)
2015-08-30 11:28:58	<--	EvilMachine (~evi1m4chi@xdsl-89-0-125-1.netcologne.de) has quit (Remote host closed the connection)
2015-08-30 11:28:59	<--	cognominal (~cognomina@87-231-91-9.rev.numericable.fr) has quit (Quit: This computer has gone to sleep)
2015-08-30 11:29:00	athan	I don't go :| sorry man
2015-08-30 11:29:01	pyon	Errr, K-ALL*
2015-08-30 11:29:02	EvanR	pyon: Either and Either a are both K1 -> K2 for some kind K1 and K2
2015-08-30 11:29:09	fresheyeball_	yeah me neither 
2015-08-30 11:29:13	fresheyeball_	its just an experiment 
2015-08-30 11:29:42	fresheyeball_	go pleople dont know folds though 
2015-08-30 11:29:47	EvanR	K-APP applies when your term has kind K1 -> K2
2015-08-30 11:29:50	fresheyeball_	it hard to ask them the question 
2015-08-30 11:29:52	EvanR	which is this case
2015-08-30 11:30:02	athan	fresheyeball_: You should be able to make it happen. Can you take in functions as arguments in the language?
2015-08-30 11:30:12	pyon	EvanR: But K-APP says nothing about `forall`.
2015-08-30 11:30:14	fresheyeball_	yes
2015-08-30 11:30:15	athan	like lodash's fold / reduce for javascript, you could go that route
2015-08-30 11:30:17	EvanR	K-ALL does not apply because it is NOT *
2015-08-30 11:30:17	<--	edon (~user@albalug/edon) has quit (Remote host closed the connection)
2015-08-30 11:30:19	-->	gensym2 (~zrrg@103.225.100.51) has joined #haskell
2015-08-30 11:30:22	fresheyeball_	but there is almost zero polymorphism 
2015-08-30 11:30:33	athan	:x
2015-08-30 11:30:36	pyon	K-APP can give me the kind of `Either a`, but *NOT* `forall a. Either a`.
2015-08-30 11:30:49	pyon	In fact, I don't think `forall a. Either a` even makes sense. :-|
2015-08-30 11:30:58	-->	edon (~user@albalug/edon) has joined #haskell
2015-08-30 11:31:50	EvanR	youre right, it doesnt seem like you can form that in this language on 450
2015-08-30 11:32:34	<--	qubitnerd (~neutrino@unaffiliated/electron/x-8286743) has quit (Ping timeout: 246 seconds)
2015-08-30 11:32:46	<--	jeadre (~jeadre@li1421-113.members.linode.com) has quit (Remote host closed the connection)
2015-08-30 11:32:57	<--	Argue_ (~Argue___@112.209.109.5) has quit (Ping timeout: 255 seconds)
2015-08-30 11:33:01	pyon	I was a little baffled. `forall a. t` normally means «you give me a type `a`, I give you a value of type `t`». But a value of type `Either a` can't possibly exist, no matter what `a` is. :-|
2015-08-30 11:33:02	<--	grrz (~zrrg@103.225.100.51) has quit (Ping timeout: 244 seconds)
2015-08-30 11:33:02	EvanR	well you can 
2015-08-30 11:33:05	-->	ztennix (~ztennix@125.34.113.140) has joined #haskell
2015-08-30 11:33:06	--	paf31 is now known as paf31_away
2015-08-30 11:33:32	-->	seangrove (~user@c-50-174-77-118.hsd1.ca.comcast.net) has joined #haskell
2015-08-30 11:33:47	EvanR	there are no values of type Either a, because * -> * doesnt have values anyway
2015-08-30 11:33:55	pyon	Yeah.
2015-08-30 11:33:58	<--	nullvoid8 (~quassel@5751c3de.skybroadband.com) has quit (Ping timeout: 246 seconds)
2015-08-30 11:34:06	<--	mizu_no_oto (~textual@c-73-219-2-228.hsd1.ma.comcast.net) has quit (Quit: Computer has gone to sleep.)
2015-08-30 11:34:43	-->	jeadre (~jeadre@li1421-113.members.linode.com) has joined #haskell
2015-08-30 11:34:45	-->	petricore (~petricore@c-76-28-159-152.hsd1.wa.comcast.net) has joined #haskell
2015-08-30 11:35:35	-->	malkomalko (~malkomalk@ool-457a2213.dyn.optonline.net) has joined #haskell
2015-08-30 11:35:46	pyon	Anyway, I'll assume that `:k (forall a. Either a)` is a syntactic quirk in GHCi, and it actually means «assume `a` stands for a type, then `:k (Either a)`».
2015-08-30 11:36:23	<--	athan (~athan@50.243.136.91) has quit (Ping timeout: 252 seconds)
2015-08-30 11:36:31	EvanR	but K-ALL still does not apply
2015-08-30 11:36:58	mpickering	I think the point is that K-APP then does apply
2015-08-30 11:37:19	EvanR	it doesnt apply to terms of kind * -> *
2015-08-30 11:37:34	pyon	K-APP itself works just fine with any kind, it seems to me.
2015-08-30 11:37:34	-->	juanpablo_ (~juanpablo@181.39.194.178) has joined #haskell
2015-08-30 11:37:37	pyon	It's just K-ALL that's a problem.
2015-08-30 11:37:48	EvanR	what is T2 ?
2015-08-30 11:37:59	<--	ztennix (~ztennix@125.34.113.140) has quit (Ping timeout: 260 seconds)
2015-08-30 11:38:10	pyon	In this case, `T1 = Either` and `T2 = a`.
2015-08-30 11:38:11	<--	robogoat (~robogoat@c-24-126-240-124.hsd1.ga.comcast.net) has quit (Ping timeout: 244 seconds)
2015-08-30 11:38:23	EvanR	theres no T1 in the rule
2015-08-30 11:38:37	EvanR	and T2 = a is fine, since its *
2015-08-30 11:38:47	pyon	Oh, wait, I thought you were talking about K-APP.
2015-08-30 11:38:56	pyon	In K-ALL, T2 is the whole of `Either a`.
2015-08-30 11:39:02	EvanR	no its not
2015-08-30 11:39:10	EvanR	its not *
2015-08-30 11:39:44	<--	deepfire (~user@213.108.3.98) has quit (Ping timeout: 244 seconds)
2015-08-30 11:40:04	pyon	Then K-ALL simply can't be made work for `forall a. Either a`.
2015-08-30 11:40:15	EvanR	no it cant
2015-08-30 11:40:16	<--	L8D (~L8D@cpe-70-123-155-208.austin.res.rr.com) has quit (Ping timeout: 268 seconds)
2015-08-30 11:40:25	<--	malkomalko (~malkomalk@ool-457a2213.dyn.optonline.net) has quit (Ping timeout: 252 seconds)
2015-08-30 11:40:43	<--	ttt_fff (88988e3a@gateway/web/freenode/ip.136.152.142.58) has quit (Quit: Page closed)
2015-08-30 11:40:43	-->	adek (~adek@199.201.64.2) has joined #haskell
2015-08-30 11:40:44	pyon	And no other kinding rule even mentions `forall`, so `forall a. Either a` is simply not well-kinded.
2015-08-30 11:41:02	EvanR	i think forall a . Either a doesnt reduce to anything in isolation
2015-08-30 11:41:10	EvanR	it has a kind though
2015-08-30 11:41:25	<--	dm3 (~dm3@78.60.230.119) has quit (Remote host closed the connection)
2015-08-30 11:41:45	<--	meoblast001 (~meoblast@cable-158-181-94-66.cust.telecolumbus.net) has quit (Quit: Leaving)
2015-08-30 11:41:59	pyon	How can it have a kind? The only rule that can possibly apply to something of the form `forall a. e` is K-ALL. And we couldn't make K-ALL work.
2015-08-30 11:42:03	-->	dm3 (~dm3@78.60.230.119) has joined #haskell
2015-08-30 11:42:07	-->	tabemann (~travisb@172-13-49-137.lightspeed.milwwi.sbcglobal.net) has joined #haskell
2015-08-30 11:42:10	<--	juanpablo_ (~juanpablo@181.39.194.178) has quit (Ping timeout: 260 seconds)
2015-08-30 11:42:28	-->	glendc (92c662c0@gateway/web/freenode/ip.146.198.98.192) has joined #haskell
2015-08-30 11:42:31	EvanR	first of all, can we verify that you can even write forall a . Either a in the grammar provided
2015-08-30 11:42:35	Cale	You can only forall quantify type expressions of kind *
2015-08-30 11:42:47	<--	sm (~user@li229-222.members.linode.com) has quit (Remote host closed the connection)
2015-08-30 11:42:51	-->	meoblast001 (~meoblast@91.240.64.19) has joined #haskell
2015-08-30 11:43:08	glendc	Was starting the cis194 course and the "hanoi" exercice completely fucks my brain o.O 
2015-08-30 11:43:09	pyon	Exactly. But GHCi answers `:k (forall a. Either a)` with `* -> *`, rather than «kind error».
2015-08-30 11:43:16	-->	ztennix (~ztennix@125.34.113.140) has joined #haskell
2015-08-30 11:43:17	pyon	Cale: ^
2015-08-30 11:43:23	Cale	pyon: Interesting
2015-08-30 11:43:44	EvanR	i guess its a bug after all
2015-08-30 11:43:46	<--	jeadre (~jeadre@li1421-113.members.linode.com) has quit (Remote host closed the connection)
2015-08-30 11:43:48	MarcelineVQ	glendc: it's definetly a hard start, being tossed right into recursion, especially since the exercise isn't worded that great
2015-08-30 11:44:13	-->	wasbee_ (~textual@23.252.50.206) has joined #haskell
2015-08-30 11:44:21	glendc	I do know recursion, I just can't wrap my head around it, as it becomes for example much more complicated from 4 disks on
2015-08-30 11:44:23	hpc	hanoi isn't trivial to understand either
2015-08-30 11:45:08	glendc	so perhaps I don't know recursion as well as I thought :|
2015-08-30 11:45:16	pyon	Can't you just perform induction on the number of disks to transfer?
2015-08-30 11:45:24	EvanR	pyon: can you explain how to construct forall a . Either a in F_omega
2015-08-30 11:45:42	-->	jeadre (~jeadre@li1421-113.members.linode.com) has joined #haskell
2015-08-30 11:45:48	glendc	in the homework he tries to give hints, via 3 lins of pseudo code, but that's like a huge simplification
2015-08-30 11:46:00	<--	adek (~adek@199.201.64.2) has quit (Ping timeout: 255 seconds)
2015-08-30 11:46:10	<--	Bane^ (~Bane@fsf/member/bane) has quit (Ping timeout: 240 seconds)
2015-08-30 11:46:26	glendc	unless I'm making it more complex then it is
2015-08-30 11:46:27	wkmanire	glendc solving for 3 disks will just kind of emerge naturally.
2015-08-30 11:46:27	-->	mkusher (~mkusher@93.170.184.174) has joined #haskell
2015-08-30 11:46:28	-->	EunChe (~eunche@221.154.182.251) has joined #haskell
2015-08-30 11:46:30	pyon	EvanR: Purely syntactically, it's possible. The left column in page 450 says so.
2015-08-30 11:46:32	EvanR	X = a, K = *, T = ...
2015-08-30 11:46:33	wkmanire	3 towers
2015-08-30 11:46:36	<--	dm3 (~dm3@78.60.230.119) has quit (Ping timeout: 264 seconds)
2015-08-30 11:46:40	wkmanire	Solving for 4 towers took me a while though
2015-08-30 11:46:41	EvanR	right
2015-08-30 11:46:46	pyon	EvanR: `Either a` is a type expression, and thus so is `forall a. Either a`.
2015-08-30 11:46:55	MarcelineVQ	I haven't done 4 peg yet
2015-08-30 11:46:57	pyon	It just... doesn't have a kind.
2015-08-30 11:46:59	<--	infinity0 (~infinity0@freenet/developer/infinity0) has quit (Remote host closed the connection)
2015-08-30 11:47:05	EvanR	yeah, if T = T1 T2, and T2 = a, then what is T1 ?
2015-08-30 11:47:16	-->	skulls (~username@gateway/vpn/privateinternetaccess/skulls) has joined #haskell
2015-08-30 11:47:22	-->	infinity0 (~infinity0@freenet/developer/infinity0) has joined #haskell
2015-08-30 11:47:23	pyon	EvanR: In which rule?
2015-08-30 11:47:25	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Remote host closed the connection)
2015-08-30 11:47:29	EvanR	universal type
2015-08-30 11:47:33	<--	tlevine (~tlevine@193.234.224.151) has quit (Quit: leaving)
2015-08-30 11:47:36	-->	Slay_ (~Slay@89-69-89-60.dynamic.chello.pl) has joined #haskell
2015-08-30 11:47:45	EvanR	using operator application
2015-08-30 11:47:52	wkmanire	glendc: Here's a hint: You can make multiple recursive calls in the same expression.
2015-08-30 11:47:59	<--	ztennix (~ztennix@125.34.113.140) has quit (Ping timeout: 244 seconds)
2015-08-30 11:48:00	EvanR	like what is the construction of Either
2015-08-30 11:48:01	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-30 11:48:08	-->	cosmicexplorer (~user@129.59.122.10) has joined #haskell
2015-08-30 11:48:17	pyon	EvanR: Well, System F-omega alone doesn't have Either, of course.
2015-08-30 11:48:38	-->	athan (~athan@173-14-18-245-Colorado.hfc.comcastbusiness.net) has joined #haskell
2015-08-30 11:48:38	pyon	Because it doesn't even have `data` declarations. :-p
2015-08-30 11:49:01	-->	ttt_fff (88988e3a@gateway/web/freenode/ip.136.152.142.58) has joined #haskell
2015-08-30 11:49:03	ttt_fff	with template ahskell, is it possible to get an entire file as a Expr ?
2015-08-30 11:49:20	<--	voltalio (~voltalio@d28-23-148-121.dim.wideopenwest.com) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-30 11:49:24	EvanR	or any T with kind * => (* => *)
2015-08-30 11:49:44	hpc	glendc: solve this case:
2015-08-30 11:49:58	-->	Bane^ (~Bane@95.46.199.115) has joined #haskell
2015-08-30 11:49:58	<--	Bane^ (~Bane@95.46.199.115) has quit (Changing host)
2015-08-30 11:49:58	-->	Bane^ (~Bane@fsf/member/bane) has joined #haskell
2015-08-30 11:50:03	hpc	glendc: assume you already have an operator moveTower that can take a tower of arbitrary height and put it on one of the other two stacks
2015-08-30 11:50:04	pyon	EvanR: Those exist just fine.
2015-08-30 11:50:07	EvanR	"type abstraction" seems to be a no go 
2015-08-30 11:50:08	-->	n0n3such (~n0n3such@cpe-66-68-39-16.austin.res.rr.com) has joined #haskell
2015-08-30 11:50:24	wkmanire	hpc: Hey, that's a nice way to think about it :)
2015-08-30 11:50:26	<--	Slay (~Slay@89-69-89-60.dynamic.chello.pl) has quit (Ping timeout: 240 seconds)
2015-08-30 11:50:29	hpc	glendc: write a function that takes a tower of height+1 and moves it from one stack to another
2015-08-30 11:50:35	-->	frerich (~frerich@kde/raabe) has joined #haskell
2015-08-30 11:50:37	EvanR	meh
2015-08-30 11:50:42	MarcelineVQ	the best hint I can give for the hanoi problem, is to combine the algorithm he gives you into one line
2015-08-30 11:50:50	<--	EunChe (~eunche@221.154.182.251) has quit (Ping timeout: 250 seconds)
2015-08-30 11:50:58	MarcelineVQ	Cause anything more is probably too much help, and anything less is just mystifying
2015-08-30 11:51:42	hpc	wkmanire: it's recursion
2015-08-30 11:51:54	-->	Dave33333 (6b4dac2b@gateway/web/freenode/ip.107.77.172.43) has joined #haskell
2015-08-30 11:51:55	hpc	assume small result, solve for larger
2015-08-30 11:52:07	wkmanire	hpc: I want a sandwich. 
2015-08-30 11:52:09	<--	jfischoff (~jonathanf@pool-108-41-231-87.nycmny.fios.verizon.net) has quit (Quit: jfischoff)
2015-08-30 11:52:10	hpc	(or induction, rather)
2015-08-30 11:52:22	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Ping timeout: 246 seconds)
2015-08-30 11:52:33	--	paf31_away is now known as paf31
2015-08-30 11:52:34	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Ping timeout: 272 seconds)
2015-08-30 11:52:34	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-30 11:52:41	jmcarthur	hah, that's stupid. i tried hardcoding a lookup table as a big case expression, which maps from Word8 to something else, and ghc can't tell that the patterns are exhaustive
2015-08-30 11:52:54	jmcarthur	i guess nobody does this
2015-08-30 11:53:04	<--	Dave33333 (6b4dac2b@gateway/web/freenode/ip.107.77.172.43) has quit (Quit: Page closed)
2015-08-30 11:53:20	EvanR	pyon: heh, 451 has more
2015-08-30 11:53:30	-->	ztennix (~ztennix@125.34.113.140) has joined #haskell
2015-08-30 11:53:45	MarcelineVQ	jmcarthur: if you're sure it's exhaustive, really really sure, you can have a catchall _ case at the end and that'll shut ghc up, but idk if that's a good idea
2015-08-30 11:53:49	-->	nour (~nour@x5ce0d9dd.dyn.telefonica.de) has joined #haskell
2015-08-30 11:54:11	jmcarthur	MarcelineVQ: i'm a little concerned that might make ghc not use a lookup table when i compiles? i could just check
2015-08-30 11:54:17	jmcarthur	*it compiles
2015-08-30 11:54:29	MarcelineVQ	I've not a clue about that
2015-08-30 11:54:39	jmcarthur	it probably does that implicitly anyway just because it thinks it needs it :(
2015-08-30 11:54:40	EvanR	pyon: see rule T-TABS
2015-08-30 11:54:49	<--	muesli4 (~sx@p54A00EA0.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2015-08-30 11:54:57	pyon	EvanR: What about it?
2015-08-30 11:54:59	hpc	glendc: there's one more twist besides just that which you will have to deal with, but it's much more minor and easy to see once you're thinking in terms of base case and inductive case
2015-08-30 11:55:03	EvanR	hmm
2015-08-30 11:55:10	-->	cchalmer_ (~textual@it-vpn-153-77.lut.ac.uk) has joined #haskell
2015-08-30 11:55:28	hpc	(and it's what makes hanoi such a great example of recursion in the first place)
2015-08-30 11:55:30	<--	nshepperd (~nshepperd@168.1.75.55-static.reverse.softlayer.com) has quit (Ping timeout: 240 seconds)
2015-08-30 11:55:33	glendc	the thing that trips me over is that I have the feeling no one cares about the illegal rule of higher can't be on lowr
2015-08-30 11:55:45	pyon	EvanR: It doesn't mention forall.
2015-08-30 11:55:48	EvanR	well its two more rules that include forall
2015-08-30 11:56:07	-->	subleq (~gavin@207.173.246.52) has joined #haskell
2015-08-30 11:56:11	pyon	T-TABS and T-TAPP.
2015-08-30 11:56:31	pyon	But they introduce any new kinding.
2015-08-30 11:56:39	-->	DVE (6b4dac13@gateway/web/freenode/ip.107.77.172.19) has joined #haskell
2015-08-30 11:56:53	DVE	sup
2015-08-30 11:56:54	MarcelineVQ	take your time with it glendc, this kind of problem comes up again a few times and getting it now will help a lot
2015-08-30 11:57:15	<--	fresheyeball_ (62f579ff@gateway/web/freenode/ip.98.245.121.255) has quit (Quit: Page closed)
2015-08-30 11:57:17	-->	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has joined #haskell
2015-08-30 11:57:20	DVE	sup nigs
2015-08-30 11:57:25	glendc	I'll take my time :) Thx for the help though, I think I aleady got more help then I should get 
2015-08-30 11:57:38	-->	Jinxit (~Jinxit@c-5d2e71d5.013-341-73746f24.cust.bredbandsbolaget.se) has joined #haskell
2015-08-30 11:57:40	DVE	this is a troll channel, right?
2015-08-30 11:57:49	-->	setser (~setser@ip-95-221-224-35.bb.netbynet.ru) has joined #haskell
2015-08-30 11:57:53	glguy	Do you have a Haskell question?
2015-08-30 11:57:58	<--	ztennix (~ztennix@125.34.113.140) has quit (Ping timeout: 246 seconds)
2015-08-30 11:58:06	DVE	what the fucl is Haskell
2015-08-30 11:58:08	--	Mode #haskell [+o glguy] by ChanServ
2015-08-30 11:58:08	--	Mode #haskell [+b *!*@gateway/web/freenode/ip.107.77.172.19] by glguy
2015-08-30 11:58:08	<--	glguy has kicked DVE (DVE)
2015-08-30 11:58:16	jmcarthur	lame. the generated cmm is binary search :(
2015-08-30 11:58:30	<--	cchalmers (~textual@cpc1-shep13-2-0-cust104.8-3.cable.virginm.net) has quit (Ping timeout: 260 seconds)
2015-08-30 11:58:52	MarcelineVQ	glendc: there's also #haskell-beginners channel which the course you're working on tends to come up quite a bit in, it's a pretty slow channel though so there's no reason not to ask those questions in here too
2015-08-30 11:58:57	-->	danimad (~danimad@3EC96876.catv.pool.telekom.hu) has joined #haskell
2015-08-30 11:59:03	-->	lucasbrunialti (~lucasbrun@179.177.233.136) has joined #haskell
2015-08-30 11:59:17	shachaf	jmcarthur: I've run into that before (256 Word8 patterns not being exhaustive).
2015-08-30 11:59:22	<--	mgsloan (~mgsloan@72.2.55.21) has quit (Ping timeout: 244 seconds)
2015-08-30 11:59:23	<--	osa1_ (~omer@72.2.55.21) has quit (Ping timeout: 268 seconds)
2015-08-30 11:59:36	-->	voltalio (~voltalio@d28-23-148-121.dim.wideopenwest.com) has joined #haskell
2015-08-30 11:59:40	-->	erkin (~erkin@unaffiliated/erkin) has joined #haskell
2015-08-30 11:59:55	<--	Pokinawa (~Ezalor@cpc12-cmbg17-2-0-cust215.5-4.cable.virginm.net) has quit (Remote host closed the connection)
2015-08-30 11:59:57	jmcarthur	shachaf: did you ever manage to use a big case expression to make a lookup table this way? i can only get it to generate a binary tree like this
2015-08-30 12:00:13	-->	s00pcan (~chris@209.197.20.206) has joined #haskell
2015-08-30 12:00:23	<--	orbifx (~orbifx@w-202.cust-20351.ip.static.uno.uk.net) has quit (Ping timeout: 244 seconds)
2015-08-30 12:00:24	<--	s00pcan (~chris@209.197.20.206) has quit (Read error: Connection reset by peer)
2015-08-30 12:00:34	jmcarthur	guess i'll resort to a vector or something
2015-08-30 12:00:42	shachaf	jmcarthur: I don't think so.
2015-08-30 12:00:43	-->	jiang42 (~jiang42@116.237.85.218) has joined #haskell
2015-08-30 12:01:03	-->	berdario (~berdario@host142-82-dynamic.40-79-r.retail.telecomitalia.it) has joined #haskell
2015-08-30 12:01:08	-->	Pokinawa (~Ezalor@cpc12-cmbg17-2-0-cust215.5-4.cable.virginm.net) has joined #haskell
2015-08-30 12:01:31	-->	s00pcan (~chris@209.197.20.205) has joined #haskell
2015-08-30 12:01:39	-->	raichoo1 (~raichoo@mue-88-130-44-054.dsl.tropolys.de) has joined #haskell
2015-08-30 12:01:40	EvanR	normally if its exhaustive it uses a lookup table?
2015-08-30 12:01:48	<--	s00pcan (~chris@209.197.20.205) has quit (Read error: Connection reset by peer)
2015-08-30 12:02:20	<--	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has quit (Ping timeout: 265 seconds)
2015-08-30 12:02:26	jmcarthur	i think it normally uses a lookup table if the patterns are "dense"
2015-08-30 12:02:30	jmcarthur	i don't know what dense means
2015-08-30 12:02:37	jmcarthur	it might only work for ADTs
2015-08-30 12:02:50	<--	raichoo (~raichoo@mue-88-130-49-125.dsl.tropolys.de) has quit (Ping timeout: 240 seconds)
2015-08-30 12:03:02	<--	grouzen (~grouzen@diagonal-interview.volia.net) has quit (Ping timeout: 246 seconds)
2015-08-30 12:03:08	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-30 12:03:09	--	Mode #haskell [-o glguy] by glguy
2015-08-30 12:03:20	-->	ztennix (~ztennix@125.34.113.140) has joined #haskell
2015-08-30 12:03:42	Ralith	is ansi-wl-pprint current?
2015-08-30 12:03:58	<--	frerich (~frerich@kde/raabe) has quit (Remote host closed the connection)
2015-08-30 12:04:14	<--	yamadapc (~yamadapc@179.208.211.248) has quit (Remote host closed the connection)
2015-08-30 12:05:06	-->	s00pcan (~chris@209.197.20.200) has joined #haskell
2015-08-30 12:05:11	ttt_fff	Is there a way to get all the *.hs files in my current cabal project as an EXPR ?
2015-08-30 12:05:12	<--	jiang42 (~jiang42@116.237.85.218) has quit (Ping timeout: 264 seconds)
2015-08-30 12:05:24	<--	s00pcan (~chris@209.197.20.200) has quit (Read error: Connection reset by peer)
2015-08-30 12:05:30	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-30 12:05:32	-->	Literphor (~alfred@209.237.92.139) has joined #haskell
2015-08-30 12:05:41	ttt_fff	so it's sorta like Template haskell, but instead of just the strings inside of [| |], I'd like to run over my entire *.hs files
2015-08-30 12:05:45	<--	Pamelloes (~Pamelloes@2601:248:0:9c8b:20c:f1ff:fe89:ec82) has quit (Ping timeout: 256 seconds)
2015-08-30 12:05:54	<--	davidfetter (davidfette@gateway/vpn/mullvad/x-zixwzqfhaojktnef) has quit (Remote host closed the connection)
2015-08-30 12:06:07	-->	jfeltz (~jpf@ip157.augusta-apts.dfw.ygnition.net) has joined #haskell
2015-08-30 12:06:07	<--	Pokinawa (~Ezalor@cpc12-cmbg17-2-0-cust215.5-4.cable.virginm.net) has quit (Remote host closed the connection)
2015-08-30 12:07:15	-->	Deadhand (~deadf00t@CPE009027bcf235-CM602ad087f8f7.cpe.net.cable.rogers.com) has joined #haskell
2015-08-30 12:07:22	-->	Pokinawa (~Ezalor@cpc12-cmbg17-2-0-cust215.5-4.cable.virginm.net) has joined #haskell
2015-08-30 12:07:36	<--	kadoban (~mud@unaffiliated/kadoban) has quit (Ping timeout: 255 seconds)
2015-08-30 12:08:12	<--	ztennix (~ztennix@125.34.113.140) has quit (Ping timeout: 264 seconds)
2015-08-30 12:08:44	-->	p0a (ade134dc@gateway/web/freenode/ip.173.225.52.220) has joined #haskell
2015-08-30 12:09:14	p0a	Hello I am using Leksah and trying to follow the instructions at "3 Hello world example" in the manual http://leksah.org/leksah_manual.pdf
2015-08-30 12:09:38	<--	darkf (~darkf___@unaffiliated/darkf) has quit (Quit: Leaving)
2015-08-30 12:09:45	p0a	After creating the module, the package and clicking save, I write main = putStrLn "Hello world" in the Main.hs file and for some reason ctr+alt+r does nothing
2015-08-30 12:09:47	shachaf	jmcarthur: To be fair to GHC, "Word8" isn't really a special integer type as a far as the compiler is concerned.
2015-08-30 12:09:54	<--	Pokinawa (~Ezalor@cpc12-cmbg17-2-0-cust215.5-4.cable.virginm.net) has quit (Remote host closed the connection)
2015-08-30 12:10:07	shachaf	jmcarthur: It's just a Word# with a Num instance that treats it as a byte.
2015-08-30 12:10:29	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 268 seconds)
2015-08-30 12:10:37	shachaf	(But clearly this case should be handled somehow.)
2015-08-30 12:11:08	-->	Pokinawa (~Ezalor@cpc12-cmbg17-2-0-cust215.5-4.cable.virginm.net) has joined #haskell
2015-08-30 12:11:27	-->	mostalive (~mostalive@host86-182-25-240.range86-182.btcentralplus.com) has joined #haskell
2015-08-30 12:11:51	 *	hackagebot streaming-bytestring 0.1.0.3 - effectful byte steams, or: lazy bytestring done right  https://hackage.haskell.org/package/streaming-bytestring-0.1.0.3 (MichaelThompson)
2015-08-30 12:11:53	 *	hackagebot streaming 0.1.0.12 - A free monad transformer optimized for streaming applications.  https://hackage.haskell.org/package/streaming-0.1.0.12 (MichaelThompson)
2015-08-30 12:12:04	<--	Pokinawa (~Ezalor@cpc12-cmbg17-2-0-cust215.5-4.cable.virginm.net) has quit (Remote host closed the connection)
2015-08-30 12:12:07	monochrom	http://www.vex.net/~trebla/haskell/cabal-cabal.xhtml#thinning
2015-08-30 12:12:20	-->	Hexxeh1 (Hexxeh@gateway/vpn/mullvad/x-sgzfsulzzohskxoo) has joined #haskell
2015-08-30 12:13:14	-->	Pokinawa (~Ezalor@cpc12-cmbg17-2-0-cust215.5-4.cable.virginm.net) has joined #haskell
2015-08-30 12:13:54	<--	Pokinawa (~Ezalor@cpc12-cmbg17-2-0-cust215.5-4.cable.virginm.net) has quit (Client Quit)
2015-08-30 12:14:03	-->	ohpesky (~ohpesky@DHCP-23105.iis.sinica.edu.tw) has joined #haskell
2015-08-30 12:14:12	<--	subleq (~gavin@207.173.246.52) has quit (Ping timeout: 264 seconds)
2015-08-30 12:14:15	-->	Pokinawa (~Ezalor@cpc12-cmbg17-2-0-cust215.5-4.cable.virginm.net) has joined #haskell
2015-08-30 12:14:48	-->	xeno (~xeno@2a02:fe0:c211:12c1:6da7:f857:dc93:629f) has joined #haskell
2015-08-30 12:14:59	jmcarthur	shachaf: fyi, the example at the bottom of this ticket attachment works (but requires making a huge ADT): https://ghc.haskell.org/trac/ghc/attachment/ticket/9159/ChunkBinSearchNotJumpTable.hs
2015-08-30 12:15:24	jmcarthur	i also need to see how tagToEnum# works
2015-08-30 12:15:46	jmcarthur	it's pretty awful in any case
2015-08-30 12:15:47	<--	Wollan (~wollan@ti0063a400-3359.bb.online.no) has quit (Ping timeout: 264 seconds)
2015-08-30 12:15:59	-->	deepfire (~user@80.92.100.69) has joined #haskell
2015-08-30 12:16:06	mniip	jmcarthur, it's a primitive
2015-08-30 12:16:07	<--	Pokinawa (~Ezalor@cpc12-cmbg17-2-0-cust215.5-4.cable.virginm.net) has quit (Remote host closed the connection)
2015-08-30 12:16:11	shachaf	jmcarthur: Presumably this ADT is big enough in your case that the constructor won't fit in a pointer tag.
2015-08-30 12:16:17	-->	foreignFunction (~ai@ip-4761.sunline.net.ua) has joined #haskell
2015-08-30 12:16:28	ttt_fff	how do I get a ghc parse of all my *.hs files (taking into account flags in blah.cabal) asn a Expr ?
2015-08-30 12:16:42	<--	quazimodo (~quazimodo@155.143.14.28) has quit (Ping timeout: 260 seconds)
2015-08-30 12:16:48	shachaf	Still much better than binary search, of course.
2015-08-30 12:17:04	<--	DrGamatos (~DrGamatos@130.43.39.103.dsl.dyn.forthnet.gr) has quit (Read error: Connection reset by peer)
2015-08-30 12:17:13	p0a	Anyone?
2015-08-30 12:17:18	-->	Pokinawa (~Ezalor@cpc12-cmbg17-2-0-cust215.5-4.cable.virginm.net) has joined #haskell
2015-08-30 12:17:41	jmcarthur	shachaf: the awful thing is that in my case the ADT would actually have to have the full 256 cases
2015-08-30 12:17:51	-->	osa1_ (~omer@72.2.55.21) has joined #haskell
2015-08-30 12:17:52	shachaf	Right.
2015-08-30 12:17:59	-->	xcv_ (~quassel@183.Red-83-39-220.dynamicIP.rima-tde.net) has joined #haskell
2015-08-30 12:18:13	<--	e5hu (~e5hu@199.48.228.111) has quit (Remote host closed the connection)
2015-08-30 12:18:15	<--	ohpesky (~ohpesky@DHCP-23105.iis.sinica.edu.tw) has quit (Ping timeout: 250 seconds)
2015-08-30 12:18:16	shachaf	I,I If GHC had unboxed sums, the ADT approach could work better in practice.
2015-08-30 12:18:17	<--	vlatkoB (~IRC_clien@unaffiliated/vlatkob) has quit (Read error: Connection reset by peer)
2015-08-30 12:18:23	jmcarthur	oh is that what tagToEnum# is for? pointer tags?
2015-08-30 12:18:28	jmcarthur	i don't see how that would work
2015-08-30 12:18:45	<--	browndawg (~browndawg@120.59.64.251) has quit (Quit: Leaving.)
2015-08-30 12:18:47	<--	lodin_ (~lodin@c-31-209-2-44.cust.bredband2.com) has quit (Ping timeout: 256 seconds)
2015-08-30 12:18:47	<--	tiler (~tyler@188-178-250-234-static.dk.customer.tdc.net) has quit (Ping timeout: 256 seconds)
2015-08-30 12:18:53	-->	oish (~charlie@95.211.210.67) has joined #haskell
2015-08-30 12:19:03	<--	meoblast001 (~meoblast@91.240.64.19) has quit (Quit: Leaving)
2015-08-30 12:19:08	shachaf	I don't think so.
2015-08-30 12:34:05	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:25d5:10e8:2728:b2d) has joined #haskell
2015-08-30 12:34:05	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-30 12:34:05	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-30 12:34:06	--	Channel #haskell: 1461 nicks (1 op, 0 voices, 1460 normals)
2015-08-30 12:34:06	--	URL for #haskell: http://www.haskell.org/
2015-08-30 12:34:06	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-30 14:53:02	--	irc: disconnected from server
2015-08-30 14:53:27	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:2025:5f2f:8332:6d0) has joined #haskell
2015-08-30 14:53:27	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-30 14:53:27	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-30 14:53:28	--	Channel #haskell: 1461 nicks (1 op, 0 voices, 1460 normals)
2015-08-30 14:53:28	--	URL for #haskell: http://www.haskell.org/
2015-08-30 14:53:28	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-30 14:53:34	tulcod	(except if you want to talk about photon energy)
2015-08-30 14:53:53	tulcod	(and even then it's not what you expect)
2015-08-30 14:54:26	tulcod	okay, i said what i needed to say, i should shut up
2015-08-30 14:54:36	<--	slack1256 (~slack1256@190-21-5-150.baf.movistar.cl) has quit (Quit: Konversation terminated!)
2015-08-30 14:55:02	-->	vili (~nick@2605:a000:ffc0:44:1da3:8295:212f:ece1) has joined #haskell
2015-08-30 14:55:34	guillaum2	tulcod: don't get me wrong, your point is appreciated and I think you are right ;) But for now I'm interested in the possibility to represent this concept in haskell, not on the corectness of the concept)
2015-08-30 14:55:59	gamegoblin	Wish IORef and STRef were both instances of some common interface. 
2015-08-30 14:56:25	<--	_ashbreeze_ (~mark@72-161-216-144.dyn.centurytel.net) has quit (Read error: Connection reset by peer)
2015-08-30 14:56:44	kadoban	guillaum2: But without a concept of what it means … it's hard to know if you did it right or not.
2015-08-30 14:57:08	tulcod	guillaum2: also sounds like Typeable and Data.Data might be relevant here. but tbh i never used those so i might be wrong
2015-08-30 14:57:19	arkeet	gamegoblin: they internally are.
2015-08-30 14:57:30	gamegoblin	arkeet: I want it externally then ;)
2015-08-30 14:57:33	arkeet	:)
2015-08-30 15:23:18	--	irc: disconnected from server
2015-08-30 15:23:42	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:81cc:81a6:2384:cc92) has joined #haskell
2015-08-30 15:23:49	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-30 15:23:49	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-30 15:23:49	--	Channel #haskell: 1456 nicks (1 op, 0 voices, 1455 normals)
2015-08-30 15:25:51	--	URL for #haskell: http://www.haskell.org/
2015-08-30 15:25:51	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-30 15:25:51	<--	yamadapc (~yamadapc@177.141.254.238) has quit
2015-08-30 15:25:51	<--	jwm224_ (~My_user_n@c-73-174-21-132.hsd1.pa.comcast.net) has quit (Quit: WeeChat 1.1.1)
2015-08-30 15:25:51	-->	EunChe (~eunche@221.154.182.251) has joined #haskell
2015-08-30 15:25:51	-->	wraithm (~matt@24-136-25-168.c3-0.lem-ubr2.chi-lem.il.cable.rcn.com) has joined #haskell
2015-08-30 15:25:51	<--	Peaker (~Peaker@46.120.46.160) has quit (Ping timeout: 246 seconds)
2015-08-30 15:25:51	<--	quchen (~quchen@ipb21bf8fb.dynamic.kabel-deutschland.de) has quit (Ping timeout: 256 seconds)
2015-08-30 15:25:51	<--	biglama (~Day_dream@fon75-2-78-192-179-102.fbxo.proxad.net) has quit (Remote host closed the connection)
2015-08-30 15:26:00	<--	ulfdoz (~mary@2.165.99.139) has quit (Ping timeout: 246 seconds)
2015-08-30 15:26:08	-->	Peaker (~Peaker@46.120.46.160) has joined #haskell
2015-08-30 15:26:44	<--	sdothum (~sdothum@108.63.182.82) has quit (Quit: ZNC - 1.6.0 - http://znc.in)
2015-08-30 15:27:10	<--	guillaum2 (~guillaume@par69-9-88-166-83-28.fbx.proxad.net) has quit (Ping timeout: 268 seconds)
2015-08-30 15:27:25	<--	wraithm (~matt@24-136-25-168.c3-0.lem-ubr2.chi-lem.il.cable.rcn.com) has quit (Client Quit)
2015-08-30 15:27:42	-->	wraithm (~matt@24-136-25-168.c3-0.lem-ubr2.chi-lem.il.cable.rcn.com) has joined #haskell
2015-08-30 15:27:49	-->	osa1_ (~omer@72.2.55.21) has joined #haskell
2015-08-30 15:28:06	<--	beckyconning_ (uid31604@gateway/web/irccloud.com/x-svhwzmpfgwjxfxum) has quit (Quit: Connection closed for inactivity)
2015-08-30 15:28:11	-->	tulcod (~tulcod@unaffiliated/tulcod) has joined #haskell
2015-08-30 15:28:36	<--	EunChe (~eunche@221.154.182.251) has quit (Ping timeout: 244 seconds)
2015-08-30 15:28:37	-->	sdothum (~sdothum@108.63.182.82) has joined #haskell
2015-08-30 15:29:07	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Ping timeout: 244 seconds)
2015-08-30 15:29:24	-->	hodwik (~cow@69.136.82.126) has joined #haskell
2015-08-30 15:30:10	-->	tibbe (~tibbe@72.2.55.21) has joined #haskell
2015-08-30 15:30:13	<--	LonZealot (~IceChat9@p5B2BE9EF.dip0.t-ipconnect.de) has quit (Quit: Not that there is anything wrong with that)
2015-08-30 15:32:47	<--	cchalmers (~textual@cpc1-shep13-2-0-cust104.8-3.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-30 15:32:48	<--	larion (~larion@a83-162-181-111.adsl.xs4all.nl) has quit (Ping timeout: 240 seconds)
2015-08-30 15:34:33	<--	tibbe (~tibbe@72.2.55.21) has quit (Client Quit)
2015-08-30 15:34:33	-->	ksaraswatIN (0e8b9bd7@gateway/web/freenode/ip.14.139.155.215) has joined #haskell
2015-08-30 15:34:34	<--	cestlavie (~cestlavie@224.186.187.81.in-addr.arpa) has quit (Ping timeout: 255 seconds)
2015-08-30 15:50:14	--	irc: disconnected from server
2015-08-30 15:50:32	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:34a1:354d:5970:df32) has joined #haskell
2015-08-30 15:50:32	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-30 15:50:32	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:26
2015-08-30 15:50:33	--	Channel #haskell: 1452 nicks (1 op, 0 voices, 1451 normals)
2015-08-30 15:50:33	--	URL for #haskell: http://www.haskell.org/
2015-08-30 15:50:33	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-30 15:50:39	ttt_fff	jmcarthur: I have a dumb question; why can't you do this in normal haskell? i.e. build this table, deep seq it, and now, poof, you have a lookup table
2015-08-30 15:50:41	lethjakman	mpickering: sesKeys
2015-08-30 15:50:51	lethjakman	sorry I'm still getting used to haskeell
2015-08-30 15:50:53	lethjakman	haskell 
2015-08-30 15:51:00	mpickering	Rembane: Isn't there an anyChar parser?
2015-08-30 15:51:06	jmcarthur	ttt_fff: i can, but i'd rather just do it statically so there is a hard-coded pointer
2015-08-30 15:51:30	<--	grizwako (~GrizzLy@dh207-58-7.xnet.hr) has quit (Read error: Connection reset by peer)
2015-08-30 15:51:37	Rembane	mpickering: There is, I just missed it. Thank you!
2015-08-30 15:51:42	mpickering	ok! That is one type the function can't have. 
2015-08-30 15:51:48	-->	tristanp (~tristanp@2600:100f:b020:9725:3d55:b761:8a8b:3fc6) has joined #haskell
2015-08-30 15:51:58	<--	djapo (~archie@unaffiliated/djapo) has quit (Client Quit)
2015-08-30 15:52:03	--	mrowe is now known as mrowe_away
2015-08-30 15:52:20	lethjakman	mpickering: was that in reference to me?
2015-08-30 15:52:21	glguy	jmcarthur: I think that the tricky part will be getting stringPrimL into Typed TH...
2015-08-30 15:52:23	-->	molnarjani (~molnarjan@catv-89-132-223-243.catv.broadband.hu) has joined #haskell
2015-08-30 15:52:23	-->	aoeuaoeu (cb861d3e@gateway/web/freenode/ip.203.134.29.62) has joined #haskell
2015-08-30 15:52:27	lethjakman	does it have to be Maybe SesKeys
2015-08-30 15:52:32	molnarjani	hello :)
2015-08-30 15:52:36	mpickering	because you are using readFile, the type of the whole do expression has to be "IO a" for some a
2015-08-30 15:52:41	jmcarthur	glguy: ah, that makes sense
2015-08-30 15:52:45	glguy	jmcarthur: Is there no syntax for that in Haskell?
2015-08-30 15:52:53	jmcarthur	glguy: there is in GHC haskell
2015-08-30 15:52:58	glguy	OK, what is it?
2015-08-30 15:52:59	jmcarthur	glguy: "string literal"#
2015-08-30 15:53:11	molnarjani	Im having trouble installing palf's sdl2 examples
2015-08-30 15:53:13	molnarjani	https://github.com/palf/haskellSDL2Examples
2015-08-30 15:53:42	<--	danald (~danald@f052192247.adsl.alicedsl.de) has quit (Read error: Connection reset by peer)
2015-08-30 15:53:44	molnarjani	it import Shared.Lifecycle ...etc bu apparently cabal has no idea what to do with them
2015-08-30 15:54:14	jmcarthur	glguy: the type of that literal is Addr#
2015-08-30 15:54:16	molnarjani	so i get an error like this: src/lesson01.hs:4:8:     Could not find module ‘Shared.Lifecycle’     Use -v to see a list of the files searched for.
2015-08-30 15:54:22	<--	avn (~avn@78-56-108-78.static.zebra.lt) has quit (Ping timeout: 246 seconds)
2015-08-30 15:54:25	mpickering	lethjakman: Sorry I don't know how to explain this very well but I will try.  Are you comfortable with monads?
2015-08-30 15:54:26	-->	cosmicexplorer (~user@129.59.122.10) has joined #haskell
2015-08-30 15:54:37	lethjakman	mpickering: fairly. 
2015-08-30 15:54:38	-->	mizu_no_oto (~textual@c-73-219-2-228.hsd1.ma.comcast.net) has joined #haskell
2015-08-30 15:54:46	mpickering	do you know how do notation desugars?
2015-08-30 15:55:05	-->	yeji (~yeji@2604:2000:1002:e03b:1546:428b:e06b:e4e8) has joined #haskell
2015-08-30 18:09:44	--	irc: disconnected from server
2015-08-30 18:10:02	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:9550:4cc2:31d2:b388) has joined #haskell
2015-08-30 18:10:02	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-30 18:10:02	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-30 18:10:02	--	Channel #haskell: 1424 nicks (1 op, 0 voices, 1423 normals)
2015-08-30 18:10:02	--	URL for #haskell: http://www.haskell.org/
2015-08-30 18:10:02	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-30 18:10:21	<--	vili (~nick@2605:a000:ffc0:44:1da3:8295:212f:ece1) has quit (Ping timeout: 244 seconds)
2015-08-30 18:10:30	-->	DrGamatos (~DrGamatos@130.43.39.103.dsl.dyn.forthnet.gr) has joined #haskell
2015-08-30 18:20:53	--	irc: disconnected from server
2015-08-30 18:21:10	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:74c7:b253:ce25:7208) has joined #haskell
2015-08-30 18:21:10	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-30 18:21:10	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-30 18:21:11	--	Channel #haskell: 1424 nicks (1 op, 0 voices, 1423 normals)
2015-08-30 18:21:11	--	URL for #haskell: http://www.haskell.org/
2015-08-30 18:21:11	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-30 18:21:14	<--	shesek (~shesek@77.125.95.25) has quit (Ping timeout: 246 seconds)
2015-08-30 18:21:22	-->	Literphor (~alfred@209.237.92.139) has joined #haskell
2015-08-30 18:21:33	<--	arzig (~ryan@pool-173-57-89-227.dllstx.fios.verizon.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-30 18:21:51	-->	Myrl (~myrl@192.169.7.135) has joined #haskell
2015-08-30 18:21:53	slack1256	i am guessing the ST type buys me references but no O(1) memory accesses that some algorithms presupone to get their asymtotics.
2015-08-30 18:22:01	slack1256	(purely theorical question though)
2015-08-30 18:42:45	--	irc: disconnected from server
2015-08-30 18:43:03	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:2426:a008:cf02:21d6) has joined #haskell
2015-08-30 18:43:03	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-30 18:43:03	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-30 18:43:03	--	Channel #haskell: 1427 nicks (1 op, 0 voices, 1426 normals)
2015-08-30 18:43:03	--	URL for #haskell: http://www.haskell.org/
2015-08-30 18:43:03	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-30 18:43:06	-->	bonobo_ (sid34794@gateway/web/irccloud.com/x-bthtitxwqogpijbm) has joined #haskell
2015-08-30 19:07:12	--	irc: disconnected from server
2015-08-30 19:07:30	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:c12a:e94a:771:368) has joined #haskell
2015-08-30 19:07:30	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-30 19:07:30	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-30 19:07:30	--	Channel #haskell: 1428 nicks (1 op, 0 voices, 1427 normals)
2015-08-30 19:07:30	--	Notice(holmes.freenode.net): [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
2015-08-30 19:07:30	--	URL for #haskell: http://www.haskell.org/
2015-08-30 19:07:30	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-30 19:07:46	<--	malkomalko (~malkomalk@ool-457a2213.dyn.optonline.net) has quit (Ping timeout: 240 seconds)
2015-08-30 19:07:49	-->	rgr (~user@f054137064.adsl.alicedsl.de) has joined #haskell
2015-08-30 19:08:54	-->	_DrGamatos_ (~DrGamatos@130.43.39.103.dsl.dyn.forthnet.gr) has joined #haskell
2015-08-30 19:09:04	-->	APic (apic@apic.name) has joined #haskell
2015-08-30 19:09:26	<--	Laserbea_ (~Laserbear@c-73-223-160-142.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2015-08-30 19:09:31	<--	juanpablo_ (~juanpablo@181.39.194.178) has quit (Ping timeout: 246 seconds)
2015-08-30 19:09:36	-->	tristanp (~tristanp@c-98-203-232-39.hsd1.wa.comcast.net) has joined #haskell
2015-08-30 19:09:44	<--	Swizec (~swizec@c-67-164-98-169.hsd1.ca.comcast.net) has quit (Quit: Computer has gone to sleep.)
2015-08-30 19:10:00	Cale	The change that was made quite a while back to cost centre stacks (7.6?) was quite weird. It was supposed to make them "more like real call stacks" whatever the heck that means, but it made the .prof files for our game really difficult to use.
2015-08-30 19:10:23	-->	Swizec (~swizec@c-67-164-98-169.hsd1.ca.comcast.net) has joined #haskell
2015-08-30 19:11:27	<--	tristanp (~tristanp@c-98-203-232-39.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2015-08-30 19:11:27	<--	silver (~silver@178.121.207.117) has quit (Read error: Connection reset by peer)
2015-08-30 19:11:30	Cale	Maybe it was 7.4.x based on the date of this prof file
2015-08-30 19:11:41	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-30 19:11:47	Cale	-rw-r--r-- 1 cale cale 40788019 Mar  7  2012 gameBenchmark.prof
2015-08-30 19:11:56	<--	_DrGamatos_ (~DrGamatos@130.43.39.103.dsl.dyn.forthnet.gr) has quit (Client Quit)
2015-08-30 19:11:58	Cale	-rw-r--r-- 1 cale cale   147185 Oct 30  2011 gameBenchmark-prepatch.prof
2015-08-30 19:12:11	-->	Laserbear (~Laserbear@c-73-223-160-142.hsd1.ca.comcast.net) has joined #haskell
2015-08-30 19:12:31	<--	dwins (~dwins@c-73-200-135-248.hsd1.va.comcast.net) has quit
2015-08-30 19:13:34	-->	saulzar (~oliver@132.181.14.113) has joined #haskell
2015-08-30 19:14:01	itsu	guys I'm having a lot of trouble understanding about how variadic functions work
2015-08-30 19:14:10	<--	Guest98699 (~myrl@192.169.7.135) has quit (Changing host)
2015-08-30 19:14:10	-->	Guest98699 (~myrl@unaffiliated/myrl) has joined #haskell
2015-08-30 19:14:11	geekosaur	"painfully"
2015-08-30 19:14:13	--	Guest98699 is now known as Myrl
2015-08-30 19:14:16	itsu	http://pastebin.com/2DBpCXD1
2015-08-30 19:14:20	neuroserpens	> words "a b c d e"
2015-08-30 19:14:22	lambdabot	 ["a","b","c","d","e"]
2015-08-30 19:14:40	Cale	itsu: you might want to use lpaste.net
2015-08-30 19:14:51	itsu	alright will try that
2015-08-30 19:15:00	Cale	itsu: But yeah, it's just ordinary type classes.
2015-08-30 19:15:16	Cale	itsu: The type of the result of and' might be a function
2015-08-30 19:15:28	<--	DrGamatos (~DrGamatos@130.43.39.103.dsl.dyn.forthnet.gr) has quit (Quit: Leaving)
2015-08-30 19:15:30	itsu	http://lpaste.net/139924
2015-08-30 19:15:46	Cale	yeah, that's better :)
2015-08-30 19:16:11	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 246 seconds)
2015-08-30 19:16:27	Cale	itsu: So,  and'' can have any type r which is an instance of the type class Valid
2015-08-30 19:16:27	itsu	I don't really get this part actually instance (Eq a, Valid r) => Valid (a -> r) where
2015-08-30 19:16:28	itsu	 
2015-08-30 19:16:35	<--	CMCDragonkai (~nobody@ec2-52-8-178-236.us-west-1.compute.amazonaws.com) has left #haskell
2015-08-30 19:16:39	-->	Trentil (~travis@TOROON017SW-LP140-04-845543404.dsl.bell.ca) has joined #haskell
2015-08-30 19:16:40	<--	ohpesky_ (~ohpesky@DHCP-23105.iis.sinica.edu.tw) has quit (Quit: Lost terminal)
2015-08-30 19:16:43	-->	CMCDragonkai (~nobody@ec2-52-8-178-236.us-west-1.compute.amazonaws.com) has joined #haskell
2015-08-30 19:16:46	itsu	(btw this sample doesnt compile)
2015-08-30 19:16:48	-->	tristanp (~tristanp@c-98-203-232-39.hsd1.wa.comcast.net) has joined #haskell
2015-08-30 19:17:08	<--	hae (~Panhuman@mamba.student.rit.edu) has quit (Quit: reload environment; global warming solved)
2015-08-30 19:17:09	itsu	Cale: yeah, I think I got that
2015-08-30 19:17:17	geekosaur	an instance of Valid can be a function from some type a to an instance of Valid
2015-08-30 19:17:30	Cale	Probably it was meant to be  instance (Valid r) => Valid (Bool -> r)
2015-08-30 19:17:47	<--	Swizec (~swizec@c-67-164-98-169.hsd1.ca.comcast.net) has quit (Quit: Computer has gone to sleep.)
2015-08-30 19:17:52	<--	lucasbrunialti (~lucasbrun@179.177.233.136) has quit (Remote host closed the connection)
2015-08-30 19:17:57	geekosaur	and yeh, that doesn't seem quite right, although it has the right idea
2015-08-30 19:18:31	<--	tristanp (~tristanp@c-98-203-232-39.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2015-08-30 19:18:38	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-30 19:18:49	itsu	Cale: but if you do that, how the compiler can make the difference wether to use the instance L4 and the instance of L7
2015-08-30 19:19:06	Cale	itsu: Based on the type of result which is demanded.
2015-08-30 19:19:14	-->	DrGamatos (~DrGamatos@130.43.39.103.dsl.dyn.forthnet.gr) has joined #haskell
2015-08-30 19:19:27	EvanR	i appreciate this page https://wiki.haskell.org/Debugging
2015-08-30 19:19:29	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-30 19:19:35	Cale	itsu: Probably just applying "print" won't work, because you'll get an error about how the type is ambiguous
2015-08-30 19:19:47	<--	Herogx (~Herogx@109.79.80.39) has quit (Read error: Connection reset by peer)
2015-08-30 19:19:51	EvanR	i would appreciate if it were more than a little wiki blurb, especially infinite loops
2015-08-30 19:19:56	geekosaur	because True is of type Bool; but in (True False) it is of type (Bool -> a) because it has a "parameter"
2015-08-30 19:20:01	Cale	itsu: However, if the result was specified to be Bool, then the instance selection would find a solution
2015-08-30 19:20:12	-->	subleq (~gavin@207.173.246.52) has joined #haskell
2015-08-30 19:20:35	itsu	so print $ and'' True False :: Bool would help ?
2015-08-30 19:21:38	lpaste_	Cale annotated “No title” with “fixed” at http://lpaste.net/139924#a139925
2015-08-30 19:21:45	<--	DrGamatos (~DrGamatos@130.43.39.103.dsl.dyn.forthnet.gr) has left #haskell
2015-08-30 19:21:50	Cale	^^ see there, I made some changes so it'll work
2015-08-30 19:22:19	Cale	itsu: You need more parens, but yeah
2015-08-30 19:22:25	itsu	alright I'll check that, thanks
2015-08-30 19:22:40	Cale	(the :: syntax scopes over the whole expression, including the other side of the $)
2015-08-30 19:23:18	itsu	I think I got it yeah
2015-08-30 19:23:23	-->	lucasbrunialti (~lucasbrun@179.177.233.136) has joined #haskell
2015-08-30 19:23:23	Cale	itsu: This is usually not a very useful way to accomplish anything
2015-08-30 19:23:53	Cale	itsu: It's a cute trick, but I would be very hesitant to put it in real code.
2015-08-30 19:24:27	geekosaur	yes
2015-08-30 19:24:36	itsu	Cale: main = print (and'' True False :: Bool) How come the compiler cannot infer without the ":: Bool" at the end ?
2015-08-30 19:24:37	geekosaur	for one thing, you've stolen partial application
2015-08-30 19:24:54	Cale	itsu: Because  and'' True False :: Bool -> Bool  is also possible
2015-08-30 19:25:03	Cale	itsu: and  Bool -> Bool -> Bool
2015-08-30 19:25:08	Cale	and so on
2015-08-30 19:25:40	<--	viszu (~viszu@89-70-53-243.dynamic.chello.pl) has quit (Read error: Connection reset by peer)
2015-08-30 19:25:57	Cale	There's no way for it to know which of these infinitely many possibilities you want until you tell it the type of the result, from which it can infer which type  and''  must have in that expression, and then it can go look up which instance applies
2015-08-30 19:26:00	EvanR	instead of variadic function use a function that takes a list, a list of what? a list of things that have some common interface for the task at hand, and have different ctors for each different implementation of the thing
2015-08-30 19:26:42	EvanR	a typeclass can then be abused to make typing the ctor easier, by having it be implicit
2015-08-30 19:26:45	itsu	Cale: oh ok, I see
2015-08-30 19:26:54	monochrom	@quote monochrom river
2015-08-30 19:26:54	lambdabot	monochrom says: You are to send a boolean, a character, and an integer across the river. The list for transporting across the river can hold 3 items, in fact any number of items you like, but they must all be of the same type. On the bright side, after crossing the river, the boolean, the character, and the integer need only be put on show. How
2015-08-30 19:26:54	lambdabot	many trips do you need? Solution: one trip, [show the_boolean, show the_character, show the_integer]
2015-08-30 19:27:14	itsu	EvanR: I cannot use a list in my case cause the elements are not of the same type
2015-08-30 19:27:24	EvanR	see above
2015-08-30 19:27:33	Cale	itsu: What are you going to do with the elements?
2015-08-30 19:27:39	EvanR	if you need them to all be stringable, send the strings instead
2015-08-30 19:27:51	EvanR	same applies to whatever you will do with them
2015-08-30 19:28:19	itsu	I'm basically trying to have a validation lib. So I have a 
2015-08-30 19:28:22	itsu	data Deal a =
2015-08-30 19:28:22	itsu	  Deal {
2015-08-30 19:28:22	itsu	    value :: a,
2015-08-30 19:28:26	itsu	    condition :: Condition a
2015-08-30 19:28:29	itsu	  }
2015-08-30 19:28:45	itsu	sorry I forgot:
2015-08-30 19:28:47	itsu	well here obviously they a
2015-08-30 19:28:51	itsu	type Condition a = a -> Bool
2015-08-30 19:29:05	itsu	so I have a list of Deal a
2015-08-30 19:29:20	-->	TylerLing (~Thunderbi@101.70.134.185) has joined #haskell
2015-08-30 19:29:22	EvanR	so taken literally the above advice is to apply the validation separately and youll have a list of bools
2015-08-30 19:29:33	EvanR	but a better pattern for this in haskell is to apply your validations in applicative style
2015-08-30 19:29:35	-->	jle_ (~jle@uniwide-pat-pool-129-94-8-197.gw.unsw.edu.au) has joined #haskell
2015-08-30 19:29:37	itsu	and I want a way to validate each of them without having to do something like validate deal1 $ validate deal2
2015-08-30 19:29:42	EvanR	instead of "list style"
2015-08-30 19:29:55	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Remote host closed the connection)
2015-08-30 19:30:25	EvanR	theres really no better way, in fact using that style you will get more flexibility in choosing how to validate
2015-08-30 19:30:29	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-30 19:30:42	Cale	itsu: Okay, wait, do you ever do anything with a value of type  Deal a  which is not simply applying the condition to the value?
2015-08-30 19:31:20	itsu	right now no, but eventually I'll do something else probably
2015-08-30 19:31:31	Cale	itsu: If not, then why construct values of type Deal in the first place? Replace occurrences of the constructor  Deal  with the function  deal x f = f x
2015-08-30 19:31:33	-->	carlo_au (~carlo@ppp219-38.static.internode.on.net) has joined #haskell
2015-08-30 19:31:49	Cale	and then instead of Deal a, you have Bool, and everything is the same type :)
2015-08-30 19:32:12	EvanR	and the if any are False you have a validation error but no context, which is where applicative comes in
2015-08-30 19:32:14	itsu	Cale: I don't think I'm following you
2015-08-30 19:32:14	<--	TylerLing (~Thunderbi@101.70.134.185) has quit (Client Quit)
2015-08-30 20:37:01	--	irc: disconnected from server
2015-08-30 20:37:20	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:fd3b:685:4d19:4370) has joined #haskell
2015-08-30 20:37:20	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-30 20:37:20	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-30 20:37:20	--	Channel #haskell: 1418 nicks (1 op, 0 voices, 1417 normals)
2015-08-30 20:37:20	--	URL for #haskell: http://www.haskell.org/
2015-08-30 20:37:20	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-30 20:37:22	Eduard_Munteanu	That sounds like a maximum security type. :P
2015-08-30 20:37:24	-->	rjeli (znc@2604:a880:800:10::2a9:5001) has joined #haskell
2015-08-30 20:37:30	jle`	how would someone use such a function?
2015-08-30 20:37:45	 *	hackagebot streaming 0.1.0.13 - a free monad transformer optimized for streaming applications, with a simple prelude  https://hackage.haskell.org/package/streaming-0.1.0.13 (MichaelThompson)
2015-08-30 20:37:56	Eduard_Munteanu	jle`, pattern-match the singleton
2015-08-30 20:37:57	--	paf31_away is now known as paf31
2015-08-30 20:37:59	jle`	i'm not too familiar with the machinery of Proxy
2015-08-30 20:38:09	<--	pseudomeme (~moplove@cpe-66-68-55-177.austin.res.rr.com) has quit (Quit: WeeChat 0.3.8)
2015-08-30 20:38:12	jle`	hm, but how is that different than just (Int, Vec n a -> b) ?
2015-08-30 20:38:14	<--	julmac (~julmac@82.221.107.179.adsl.inet-telecom.org) has quit (Ping timeout: 246 seconds)
2015-08-30 20:38:14	<--	APic (apic@apic.name) has quit (Ping timeout: 272 seconds)
2015-08-30 20:38:26	jle`	*machinery of Data.SIngleton
2015-08-30 20:38:26	-->	pseudomeme (~moplove@cpe-66-68-55-177.austin.res.rr.com) has joined #haskell
2015-08-30 20:39:09	Eduard_Munteanu	jle`, the type system can see the length and 'n' are the same
2015-08-30 20:39:54	Eduard_Munteanu	jle`, how else do you enforce the Int to be equal to n
2015-08-30 20:40:16	--	paf31 is now known as paf31_away
2015-08-30 20:40:34	jle`	ah
2015-08-30 20:40:41	jle`	so it's meant to be safety for the writer of the function
2015-08-30 20:40:42	jle`	not the suer
2015-08-30 20:40:45	jle`	*user
2015-08-30 20:40:50	jle`	i guess writers need love too
2015-08-30 20:40:55	<--	Laserbear (~Laserbear@c-73-223-160-142.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2015-08-30 20:41:03	<--	XorSwap (~XorSwap@wnpgmb016qw-ds01-214-177.dynamic.mtsallstream.net) has quit (Ping timeout: 255 seconds)
2015-08-30 20:41:06	jle`	(and i guess the user can more safely trust that the writer implemented it correctly)
2015-08-30 20:41:30	<--	tvh (~tvh@2407:7800:400:107f:2ad2:44ff:feb2:efa7) has quit (Quit: Leaving.)
2015-08-30 20:42:08	<--	adek (~adek@199.201.64.3) has quit (Read error: Connection reset by peer)
2015-08-30 20:42:20	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-30 20:42:46	 *	hackagebot streaming-bytestring 0.1.0.4 - effectful byte steams, or: lazy bytestring done right  https://hackage.haskell.org/package/streaming-bytestring-0.1.0.4 (MichaelThompson)
2015-08-30 20:43:15	-->	adek (~adek@50.141.33.253) has joined #haskell
2015-08-30 20:43:40	-->	Laserbear (~Laserbear@c-73-223-160-142.hsd1.ca.comcast.net) has joined #haskell
2015-08-30 20:44:10	<--	eran (~Eran@unaffiliated/eran) has quit (Quit: Leaving.)
2015-08-30 20:44:54	<--	itsu (~user@modemcable009.244-161-184.mc.videotron.ca) has quit (Remote host closed the connection)
2015-08-30 20:45:14	-->	subleq (~gavin@207.173.246.52) has joined #haskell
2015-08-30 20:46:28	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 246 seconds)
2015-08-30 20:47:47	 *	hackagebot streaming 0.1.0.14 - a free monad transformer optimized for streaming applications  https://hackage.haskell.org/package/streaming-0.1.0.14 (MichaelThompson)
2015-08-30 20:47:51	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-30 20:47:57	<--	trism (~jconti@unaffiliated/trism) has quit (Remote host closed the connection)
2015-08-30 20:48:00	<--	griotspeak (~textual@64.114.255.126) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-30 20:49:07	-->	joness2 (~bc815df9@static-71-174-73-11.bstnma.fios.verizon.net) has joined #haskell
2015-08-30 20:51:14	<--	adek (~adek@50.141.33.253) has quit (Read error: Connection reset by peer)
2015-08-30 20:51:55	-->	adek (~adek@199.201.64.2) has joined #haskell
2015-08-30 20:52:23	-->	MorpheusB (~robin@95.211.172.97) has joined #haskell
2015-08-30 20:52:47	 *	hackagebot streaming 0.1.0.15 - a free monad transformer optimized for streaming applications  https://hackage.haskell.org/package/streaming-0.1.0.15 (MichaelThompson)
2015-08-30 20:54:03	-->	juanpablo_ (~juanpablo@181.39.194.178) has joined #haskell
2015-08-30 20:54:25	<--	yeji (~yeji@2604:2000:1002:e03b:7daa:fe70:83a4:53e0) has quit (Remote host closed the connection)
2015-08-30 20:55:13	-->	i-amd3 (~i_amd3@125x102x70x118.ap125.ftth.ucom.ne.jp) has joined #haskell
2015-08-30 20:55:29	-->	martin-t (~martin-t@c-50-184-152-244.hsd1.ca.comcast.net) has joined #haskell
2015-08-30 20:55:59	--	jle_ is now known as ejle
2015-08-30 20:56:22	<--	martin-t (~martin-t@c-50-184-152-244.hsd1.ca.comcast.net) has quit (Client Quit)
2015-08-30 20:56:30	<--	browndawg (~browndawg@120.59.77.33) has quit (Quit: Leaving.)
2015-08-30 20:58:05	-->	justintv90 (~justin@42.113.153.159) has joined #haskell
2015-08-30 20:58:07	<--	justintv90 (~justin@42.113.153.159) has quit (Max SendQ exceeded)
2015-08-30 20:58:15	<--	juanpablo_ (~juanpablo@181.39.194.178) has quit (Ping timeout: 244 seconds)
2015-08-30 20:58:32	<--	ejle (~jle@uniwide-pat-pool-129-94-8-197.gw.unsw.edu.au) has quit (Remote host closed the connection)
2015-08-30 20:58:34	-->	justintv90 (~justin@42.113.153.159) has joined #haskell
2015-08-30 20:58:34	-->	erikd (~erikd@184.70.136.106) has joined #haskell
2015-08-30 20:58:56	-->	isenmann (~isenmann@blackhole.science-computing.de) has joined #haskell
2015-08-30 21:00:13	-->	tmtwd (~tmtwd@CPE0c473da71813-CM0c473da71810.cpe.net.cable.rogers.com) has joined #haskell
2015-08-30 21:00:14	<--	onur_ (1885738d@gateway/web/freenode/ip.24.133.115.141) has quit (Quit: Page closed)
2015-08-30 21:01:07	-->	tvh (~tvh@nat-gw2.syd4.anchor.net.au) has joined #haskell
2015-08-30 21:01:52	-->	samrat (~samrat@123.236.183.215) has joined #haskell
2015-08-30 21:02:37	<--	tvh (~tvh@nat-gw2.syd4.anchor.net.au) has quit (Remote host closed the connection)
2015-08-30 21:02:46	-->	coltfred (~coltfred@71.15.193.15) has joined #haskell
2015-08-30 21:04:56	-->	tvh (~tvh@2407:7800:400:107f:2ad2:44ff:feb2:efa7) has joined #haskell
2015-08-30 21:06:01	<--	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 244 seconds)
2015-08-30 21:06:44	<--	samrat (~samrat@123.236.183.215) has quit (Ping timeout: 272 seconds)
2015-08-30 21:07:04	-->	hamishmack (~hamishmac@209-82-80-116.dedicated.allstream.net) has joined #haskell
2015-08-30 21:10:07	<--	subleq (~gavin@207.173.246.52) has quit (Ping timeout: 244 seconds)
2015-08-30 21:10:26	-->	capybara (garrison@reaver.cat.pdx.edu) has joined #haskell
2015-08-30 21:11:12	<--	pimlu (~pimlu@128.172.35.9) has quit (Ping timeout: 264 seconds)
2015-08-30 21:11:40	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-30 21:11:47	<--	CMCDragonkai (~nobody@ec2-52-8-178-236.us-west-1.compute.amazonaws.com) has quit (Remote host closed the connection)
2015-08-30 21:12:42	-->	samrat (~samrat@123.236.183.215) has joined #haskell
2015-08-30 21:12:42	gamegoblin	Oh man I just learned about LambdaCase, why did I not know about this sooner...
2015-08-30 21:13:25	<--	OrangeShark (~OrangeSha@2602:306:c5c9:a3e0:788e:7d94:f7d2:5087) has quit (Quit: Leaving)
2015-08-30 21:16:04	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-30 21:16:23	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 264 seconds)
2015-08-30 21:17:14	-->	CMCDragonkai (~nobody@ec2-52-8-178-236.us-west-1.compute.amazonaws.com) has joined #haskell
2015-08-30 21:17:50	 *	hackagebot quiver-cell 1.0.0 - Quiver combinators for cellular data processing  https://hackage.haskell.org/package/quiver-cell-1.0.0 (patrykz)
2015-08-30 21:18:52	-->	lethjakman (~lethjakma@71.56.221.51) has joined #haskell
2015-08-30 21:18:57	-->	kristof (~kristof@unaffiliated/kristof) has joined #haskell
2015-08-30 21:20:08	<--	ttt_fff (88988e3a@gateway/web/freenode/ip.136.152.142.58) has quit (Quit: Page closed)
2015-08-30 21:21:19	jmcarthur	shachaf: you mean like a closure? guess i'd have to defunctionalize it. in any case, all i really wanted this time was a simple lookup-table.
2015-08-30 21:23:38	<--	lethjakman (~lethjakma@71.56.221.51) has quit (Ping timeout: 260 seconds)
2015-08-30 21:27:12	Welkin	gamegoblin: I still don't see myself using it. May as well define a named (internal) function using let or where
2015-08-30 21:27:40	gamegoblin	Welkin: I’ve wanted it for use where I would otherwise use do-notation for so long
2015-08-30 21:27:57	gamegoblin	Welkin: do { x <- foo; case x of { … } }
2015-08-30 21:28:02	gamegoblin	can now be foo >>= \case
2015-08-30 21:28:28	-->	jaen (~jaen@77-253-191-87.adsl.inetia.pl) has joined #haskell
2015-08-30 21:29:03	-->	Lokathor (~Lokathor@75-167-147-83.bois.qwest.net) has joined #haskell
2015-08-30 21:29:27	Welkin	I see
2015-08-30 21:29:29	-->	subleq (~gavin@207.173.246.52) has joined #haskell
2015-08-30 21:32:37	--	irc: disconnected from server
2015-08-30 21:32:56	-->	RouxTheD1 (~RouxTheDa@2601:645:8101:9a39:e032:d187:c11f:bfea) has joined #haskell
2015-08-30 21:32:56	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-30 21:32:56	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-30 21:32:56	--	Channel #haskell: 1419 nicks (1 op, 0 voices, 1418 normals)
2015-08-30 21:32:56	--	URL for #haskell: http://www.haskell.org/
2015-08-30 21:32:56	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-30 21:33:09	-->	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has joined #haskell
2015-08-30 21:33:20	<--	junmin (~junmin@189-210-226-30.static.axtel.net) has quit (Remote host closed the connection)
2015-08-30 21:33:26	<--	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:fd3b:685:4d19:4370) has quit (Ping timeout: 240 seconds)
2015-08-30 21:34:26	-->	triliyn (~lioneyes@c-24-6-242-177.hsd1.ca.comcast.net) has joined #haskell
2015-08-30 21:35:01	-->	nablv (~nabeel@117.247.190.244) has joined #haskell
2015-08-30 21:36:41	-->	nyazdani (~nyazdani@209-82-80-116.dedicated.allstream.net) has joined #haskell
2015-08-30 21:37:21	-->	petricore (~petricore@c-76-28-159-152.hsd1.wa.comcast.net) has joined #haskell
2015-08-30 21:37:21	-->	jbalint (~jbalint@24-240-72-190.dhcp.mdsn.wi.charter.com) has joined #haskell
2015-08-30 21:37:21	<--	jbalint (~jbalint@24-240-72-190.dhcp.mdsn.wi.charter.com) has quit (Changing host)
2015-08-30 21:37:21	-->	jbalint (~jbalint@unaffiliated/jbalint) has joined #haskell
2015-08-30 21:37:23	cads	hey guys, anyone know if there's a library to do generic 2 geometry packing (geometry nesting) in haskell?
2015-08-30 21:37:31	<--	petricore (~petricore@c-76-28-159-152.hsd1.wa.comcast.net) has quit (Client Quit)
2015-08-30 21:38:04	cads	I have done a preliminary few searches on hackage and found a library with some heuristics for packing circles of varying radii 
2015-08-30 21:38:06	<--	tmtwd (~tmtwd@CPE0c473da71813-CM0c473da71810.cpe.net.cable.rogers.com) has quit (Ping timeout: 260 seconds)
2015-08-30 21:38:39	<--	nablv (~nabeel@117.247.190.244) has quit (Client Quit)
2015-08-30 21:40:10	<--	permagreen (~permagree@c-71-193-193-106.hsd1.or.comcast.net) has quit (Ping timeout: 240 seconds)
2015-08-30 21:40:38	<--	cleamoon (~cleamoon@c213-89-114-250.bredband.comhem.se) has quit (Ping timeout: 244 seconds)
2015-08-30 21:41:12	<--	carlo_au (~carlo@ppp219-38.static.internode.on.net) has quit (Quit: derp)
2015-08-30 21:42:00	<--	EunChe (~eunche@59.29.232.172) has quit (Quit: Leaving...)
2015-08-30 21:42:41	<--	hapislacker (~dagnachew@70.48.138.206) has quit (Quit: WeeChat 1.3)
2015-08-30 21:42:52	 *	hackagebot lookup-tables 0.1.1.0 - Statically generate lookup tables using Template  Haskell.  https://hackage.haskell.org/package/lookup-tables-0.1.1.0 (JakeMcArthur)
2015-08-30 21:42:54	 *	hackagebot woot 0.0.0.0 - Real time group editor without operational transform.  https://hackage.haskell.org/package/woot-0.0.0.0 (tgolson)
2015-08-30 21:42:59	<--	shesek (~shesek@77.125.95.25) has quit (Read error: Connection reset by peer)
2015-08-30 21:43:11	<--	nkaretnikov (~nikita@unaffiliated/nkar) has quit (Ping timeout: 256 seconds)
2015-08-30 21:45:04	-->	shesek (~shesek@77.125.95.25) has joined #haskell
2015-08-30 21:45:54	-->	EunChe (~eunche@59.29.232.172) has joined #haskell
2015-08-30 21:46:36	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-30 21:46:45	-->	nkhodyunya (~Adium@dnm.184.123.124.92.dsl.krasnet.ru) has joined #haskell
2015-08-30 21:47:50	<--	gnataly (~steve@162-201-41-182.lightspeed.frokca.sbcglobal.net) has quit (Ping timeout: 244 seconds)
2015-08-30 21:47:54	<--	mek42 (~quassel@cpe-184-153-227-104.twcny.res.rr.com) has quit (Ping timeout: 272 seconds)
2015-08-30 21:48:49	-->	martin-t (~martin-t@c-50-184-152-244.hsd1.ca.comcast.net) has joined #haskell
2015-08-30 21:49:39	--	paf31_away is now known as paf31
2015-08-30 21:50:41	<--	Sk0rn (~sk0rn@76-231-80-165.lightspeed.livnmi.sbcglobal.net) has quit (Ping timeout: 250 seconds)
2015-08-30 21:52:07	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-30 21:52:08	<--	martin-t (~martin-t@c-50-184-152-244.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2015-08-30 21:52:23	-->	martin-t (~martin-t@c-50-184-152-244.hsd1.ca.comcast.net) has joined #haskell
2015-08-30 21:54:13	-->	skore_de (~skore@2a02:908:cf11:8fe0:609b:d04:828a:27e0) has joined #haskell
2015-08-30 21:54:51	<--	coltfred (~coltfred@71.15.193.15) has quit (Ping timeout: 255 seconds)
2015-08-30 21:54:52	-->	pimlu (~pimlu@128.172.35.9) has joined #haskell
2015-08-30 21:55:21	-->	hunteriam (uid63798@gateway/web/irccloud.com/x-sbjsutrfaimjrbjp) has joined #haskell
2015-08-30 21:56:13	-->	osa1_ (~omer@d207-216-110-93.bchsia.telus.net) has joined #haskell
2015-08-30 21:56:57	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 268 seconds)
2015-08-30 21:57:39	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Remote host closed the connection)
2015-08-30 21:57:53	 *	hackagebot language-lua2 0.1.0.0 - Lua parser and pretty printer  https://hackage.haskell.org/package/language-lua2-0.1.0.0 (mitchellwrosen)
2015-08-30 21:57:58	Welkin	jmcarthur: what is the use case for a static lookup table?
2015-08-30 21:58:14	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-30 21:58:20	Welkin	computations are often cheaper than storing a table
2015-08-30 21:58:27	<--	subleq (~gavin@207.173.246.52) has quit (Ping timeout: 255 seconds)
2015-08-30 21:58:33	Welkin	especially with SIMD
2015-08-31 07:16:13	--	irc: disconnected from server
2015-08-31 07:16:31	-->	RouxTheD1 (~RouxTheDa@2601:645:8101:9a39:60ff:39d2:a670:4a53) has joined #haskell
2015-08-31 07:16:31	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-31 07:16:31	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-31 07:16:31	--	Channel #haskell: 1487 nicks (1 op, 0 voices, 1486 normals)
2015-08-31 07:16:31	--	URL for #haskell: http://www.haskell.org/
2015-08-31 07:16:31	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-31 07:16:37	<--	lucasbrunialti (~lucasbrun@179.177.233.136) has quit (Remote host closed the connection)
2015-08-31 07:16:38	-->	Lokathor (~Lokathor@75-167-147-83.bois.qwest.net) has joined #haskell
2015-08-31 07:16:46	-->	eguneys (~user@85.103.184.92) has joined #haskell
2015-08-31 07:18:51	<--	xenog (~xenog@95.83.250.104) has quit (Quit: Leaving)
2015-08-31 07:18:53	-->	juanpablo_ (~juanpablo@drop.juanpablo.me) has joined #haskell
2015-08-31 07:19:01	<--	marcus-aurelius (~quassel@2a00:1398:9:fb00:84fd:73f3:187c:f5f8) has quit (Remote host closed the connection)
2015-08-31 07:19:08	eguneys	What is this mean
2015-08-31 07:19:11	eguneys	:type (3 even)
2015-08-31 07:19:14	-->	qubitnerd (~neutrino@unaffiliated/electron/x-8286743) has joined #haskell
2015-08-31 07:19:18	eguneys	:t (3 even)
2015-08-31 07:19:20	lambdabot	(Integral a, Num ((a -> Bool) -> t)) => t
2015-08-31 07:19:46	-->	ysz (~ysz@84.52.98.75) has joined #haskell
2015-08-31 07:19:49	athan	eguneys: go the other way!
2015-08-31 07:19:53	athan	:t even 3
2015-08-31 07:19:54	lambdabot	Bool
2015-08-31 07:19:55	athan	:t even
2015-08-31 07:19:58	lambdabot	Integral a => a -> Bool
2015-08-31 07:19:59	athan	:t 3
2015-08-31 07:20:00	lambdabot	Num a => a
2015-08-31 07:20:02	<--	kazagistar (~Adium@host-184-166-100-246.hln-mt.client.bresnan.net) has quit (Quit: Leaving.)
2015-08-31 07:20:07	ysz	g'day gents
2015-08-31 07:20:18	athan	hiya
2015-08-31 07:20:27	eguneys	I am wondering what this means  :t (3 even)
2015-08-31 07:20:37	-->	skore_de (~skore@2a02:908:cf11:8fe0:609b:d04:828a:27e0) has joined #haskell
2015-08-31 07:20:45	Aune	I have a newtype declaration: Graph id weight = Graph{getNeighbours id -> [(id, weight)]}, how do I require that weight be an instance of Num?
2015-08-31 07:20:51	mauke	eguneys: it means: apply the function 3 to the argument even
2015-08-31 07:20:54	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-31 07:21:12	geekosaur	eguneys, it's an unfortunate side effect of the way numeric literals work
2015-08-31 07:21:42	eguneys	what does the gibberish type signature do how do I interpret it
2015-08-31 07:21:46	aweinstock	is it possible to definite a sensible Num instance for ((a -> Bool) -> t)?
2015-08-31 07:21:46	eguneys	:t (3 even)
2015-08-31 07:21:48	lambdabot	(Integral a, Num ((a -> Bool) -> t)) => t
2015-08-31 07:21:51	-->	ely-se (~rightfold@a82-161-178-6.adsl.xs4all.nl) has joined #haskell
2015-08-31 07:22:22	aweinstock	:t fromIntegral
2015-08-31 07:22:23	lambdabot	(Integral a, Num b) => a -> b
2015-08-31 07:22:45	aweinstock	:t (fromIntegral 3) `asAppliedTo` ()
2015-08-31 07:22:46	lambdabot	Num (() -> b) => () -> b
2015-08-31 07:22:58	geekosaur	"if there exists an instance of Num for a function which takes (a function taking an "a" and producing a Bool) to a "t", and an instance of Integral for "a", then produce a "t""
2015-08-31 07:23:03	geekosaur	which, yes, is pretty ugly
2015-08-31 07:23:03	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-31 07:23:12	<--	Ayey_ (~rune@0135301590.0.fullrate.dk) has quit (Ping timeout: 255 seconds)
2015-08-31 07:23:17	<--	deepfire (~user@31.44.93.25) has quit (Ping timeout: 252 seconds)
2015-08-31 07:23:37	-->	umib0zu (~umib0zu@static-71-174-59-11.bstnma.fios.verizon.net) has joined #haskell
2015-08-31 07:23:44	-->	nyazdani (~nyazdani@209-82-80-116.dedicated.allstream.net) has joined #haskell
2015-08-31 07:24:05	geekosaur	so, numeric literals get wrapped so they can produce any instance of Num. this allows you to use a literal 3 without worrying about the exact numeric type it needs to be... but allows the compiler quite a bit of latitude in finding instances of Num
2015-08-31 07:24:11	aweinstock	:t (3 `even`)
2015-08-31 07:24:14	lambdabot	Bool
2015-08-31 07:24:17	geekosaur	this is usually resolved by there being only sane instances of Num in scope
2015-08-31 07:24:22	aweinstock	> (3 `even`)
2015-08-31 07:24:24	lambdabot	 False
2015-08-31 07:24:37	<--	nour (~nour@spike.experteer.de) has quit (Quit: Leaving)
2015-08-31 07:24:43	-->	jiang42 (~jiang42@116.237.85.218) has joined #haskell
2015-08-31 07:24:50	<--	fabianvf (~fabianvf@216.30.185.217) has quit (Remote host closed the connection)
2015-08-31 07:25:02	--	naudiz is now known as naudiz|offline
2015-08-31 07:25:07	<--	skore_de (~skore@2a02:908:cf11:8fe0:609b:d04:828a:27e0) has quit (Ping timeout: 252 seconds)
2015-08-31 07:25:19	aweinstock	:t \f -> (3 `f`)
2015-08-31 07:25:20	-->	fabianvf (~fabianvf@216.30.185.217) has joined #haskell
2015-08-31 07:25:21	lambdabot	Num a => (a -> r) -> r
2015-08-31 07:25:25	<--	griotspeak (~textual@64.114.255.126) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-31 07:25:25	<--	eatman (~eatman@anthemis.grenoble.inria.fr) has quit (Quit: Lost terminal)
2015-08-31 07:25:30	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Ping timeout: 272 seconds)
2015-08-31 07:25:55	<--	ely-se (~rightfold@a82-161-178-6.adsl.xs4all.nl) has quit (Client Quit)
2015-08-31 07:26:06	aweinstock	does lambdabot have PostfixOperators enabled?
2015-08-31 07:26:19	clrnd	Aune, I think you have to use GADTs or ExistensialQuantification
2015-08-31 07:26:36	clrnd	for a class constraint in a data type
2015-08-31 07:26:39	-->	emilypi (~emily@2601:681:4301:237f:e51b:da74:7f63:64e) has joined #haskell
2015-08-31 07:26:41	Iceland_jack	aweinstock: 
2015-08-31 07:26:42	Iceland_jack	> let (!) n = product [1..n] in (6 !)
2015-08-31 07:26:46	lambdabot	 720
2015-08-31 07:26:48	<--	eguneys (~user@85.103.184.92) has quit (Quit: ERC (IRC client for Emacs 25.0.50.1))
2015-08-31 07:27:18	Iceland_jack	> let fact'd n = product [1..n] in (6 `fact'd`)
2015-08-31 07:27:20	lambdabot	 720
2015-08-31 07:27:35	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-31 07:28:14	clrnd	> let (?) x = "lolz" in (6 ?)
2015-08-31 07:28:15	lambdabot	 "lolz"
2015-08-31 07:28:22	clrnd	I'm so gonna use this
2015-08-31 07:28:25	<--	micmus (~micmus@aanj237.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 252 seconds)
2015-08-31 07:28:25	Aune	clnrd, but, but why :(
2015-08-31 07:29:18	clrnd	Aune, no idea! I know I've done it with those :P
2015-08-31 07:29:19	runeks	If I use sequence to transform a list of read operations [IO a] into IO [a], are all the read operations evaluated at once, or is each original IO action evaluated one by one as the items in the new list (IO [a]) are evaluated?
2015-08-31 07:29:25	-->	deepfire (~user@31.44.93.25) has joined #haskell
2015-08-31 07:29:36	-->	colt44 (~ggarciajr@187.59.56.75) has joined #haskell
2015-08-31 07:29:53	clrnd	runeks, sequence is just a chain of >>=, so yeah it's as sequential as you make it
2015-08-31 07:29:55	bennofs	runeks: all the IO actions are evaluated before the list is returned
2015-08-31 07:30:59	Aune	clnrd, This is why I love Haskell ;)
2015-08-31 07:30:59	<--	samrat (~samrat@123.236.183.215) has quit (Ping timeout: 246 seconds)
2015-08-31 07:31:07	-->	micmus (~micmus@abdv71.neoplus.adsl.tpnet.pl) has joined #haskell
2015-08-31 07:31:14	runeks	bennofs: Is there a way to have a [IO a] that is evaluated one-by-one?
2015-08-31 07:31:18	runeks	I'm using this now
2015-08-31 07:31:18	runeks	fmap catMaybes (sequence $ repeat (maybeReadBlock h))
2015-08-31 07:31:19	-->	djbeau (~djbeau@inet-hqmc07-o.oracle.com) has joined #haskell
2015-08-31 07:31:22	<--	aznashwan (~nashwan@89.46.161.178) has quit (Ping timeout: 252 seconds)
2015-08-31 07:31:25	--	paf31_away is now known as paf31
2015-08-31 07:31:34	<--	eatsfoobars (~eatsfooba@ppp-2-84-71-122.home.otenet.gr) has quit
2015-08-31 07:31:52	bennofs	runeks: you said you used foldrM before?
2015-08-31 07:31:57	runeks	But I need each maybeReadBlock to evaluate as the item it becomes in the lazy list its evaluated
2015-08-31 07:32:01	aweinstock	:t System.IO.Unsafe.unsafeInterleaveIO
2015-08-31 07:32:02	lambdabot	IO a -> IO a
2015-08-31 07:32:05	bennofs	aweinstock: NO!
2015-08-31 07:32:08	bennofs	:)
2015-08-31 07:32:28	aweinstock	bennofs: did you predict that I was going to suggest that before I typed it?
2015-08-31 07:33:24	<--	Gurkenglas (Gurkenglas@dslb-178-000-176-040.178.000.pools.vodafone-ip.de) has quit (Ping timeout: 264 seconds)
2015-08-31 07:33:28	bennofs	runeks: why do you need that? it's generally not such a good idea to make IO depend on evaluation (I know, the standard haskell IO library does it, doesn't mean it's a good thing...). A little bit more context might help to suggest alternative solutions
2015-08-31 07:33:34	aweinstock	runeks: unsafeInterleaveIO is the primitive that does lazy IO (like readFile), but lazy IO has problems with resource leaks
2015-08-31 07:34:16	aweinstock	runeks: pipes/conduit are the safe way of doing streaming IO in constant memory
2015-08-31 07:34:22	runeks	I want to foldr a list of items, and these items I want to read from a file.
2015-08-31 07:34:32	-->	cleamoon (~cleamoon@c213-89-114-250.bredband.comhem.se) has joined #haskell
2015-08-31 07:34:34	runeks	That's all I want to do basically
2015-08-31 07:35:17	aweinstock	:t Data.Conduit.List.fold
2015-08-31 07:35:19	lambdabot	Monad m => (b -> a -> b) -> b -> conduit-1.2.5:Data.Conduit.Internal.Conduit.ConduitM a o m b
2015-08-31 07:35:25	runeks	I already know how to use foldrM when I'm not in the IO monad, but I can't figure it out with IO.
2015-08-31 07:35:27	clrnd	Aune, me too!
2015-08-31 07:35:38	opqdonut	runeks: a) you could write your own fold with type (Item -> result -> result) -> result -> Handle -> IO result
2015-08-31 07:35:49	-->	mizu_no_oto (~textual@c-67-189-145-156.hsd1.ma.comcast.net) has joined #haskell
2015-08-31 07:35:56	opqdonut	runeks: b) you could use pipes/conduits/iteratees for a more abstract solution
2015-08-31 07:36:02	opqdonut	runeks: c) you can use lazy io for a hacky solution
2015-08-31 07:36:04	glguy_	readFile is already lazy
2015-08-31 07:36:08	opqdonut	runeks: foldrM doesn't really help
2015-08-31 07:37:46	-->	cfricke (~cfricke@unaffiliated/cfricke) has joined #haskell
2015-08-31 07:38:11	runeks	opqdonut: I'm interested in the hacky solution
2015-08-31 07:38:22	runeks	opqdonut: I'm trying to use lazy IO, but it don't work
2015-08-31 07:38:32	runeks	I just need something that works, for now
2015-08-31 07:38:38	quchen	> let (!) = id; dammit = error in   dammit! "this failed" -- Iceland_jack  :-)
2015-08-31 07:38:40	lambdabot	 *Exception: this failed
2015-08-31 07:38:43	<--	Khisanth (~Khisanth@50.14.244.111) has quit (Quit: Leaving)
2015-08-31 07:38:52	<--	lamefun (~lamefun2@37.113.41.138) has quit (Quit: Leaving)
2015-08-31 07:38:54	clrnd	lol
2015-08-31 07:39:03	<--	wei2912 (~wei2912@unaffiliated/wei2912) has quit (Remote host closed the connection)
2015-08-31 07:39:06	glguy_	foldr might not be the right fold though
2015-08-31 07:39:08	-->	animated (~mike@207.35.29.137) has joined #haskell
2015-08-31 07:39:25	glguy_	And "it doesn't work" isn't enough to help
2015-08-31 07:39:42	-->	kazagistar (~Adium@76.191.88.132) has joined #haskell
2015-08-31 07:40:20	bennofs	runeks: you can use foldrM in the IO monad as well. For example, you can do: foldrM (\ioaction accumulator -> do value <- ioaction; ...; return newAccumulator) initialAccumulator listOfIOActions
2015-08-31 07:40:32	<--	gfixler (~gfixler@cpe-108-185-238-241.socal.res.rr.com) has quit (Quit: WeeChat 1.0.1)
2015-08-31 07:40:36	aweinstock	runeks: if you have (IO [a]), you only need foldrM if each accumulating step needs to do IO, foldr should work if the accumulation is pure
2015-08-31 07:40:38	-->	ely-se (~rightfold@a82-161-178-6.adsl.xs4all.nl) has joined #haskell
2015-08-31 07:41:14	<--	Erlkonig (~Erlkonig@i118-16-34-30.s41.a038.ap.plala.or.jp) has quit (Remote host closed the connection)
2015-08-31 07:41:29	-->	doomlord (~textual@host81-155-65-113.range81-155.btcentralplus.com) has joined #haskell
2015-08-31 07:41:40	<--	jgertm (~amontimur@46.128.43.80.dynamic.cablesurf.de) has quit (Ping timeout: 246 seconds)
2015-08-31 07:42:21	aweinstock	:t \f initial -> (undefined :: IO [a]) >>= return . foldr f initial
2015-08-31 07:42:23	lambdabot	(a -> b -> b) -> b -> IO b
2015-08-31 07:42:41	-->	DrGamatos (~DrGamatos@130.43.39.103.dsl.dyn.forthnet.gr) has joined #haskell
2015-08-31 07:42:49	runeks	I'm folding using a function that returns an Either, I believe that is why I need foldrM
2015-08-31 07:43:03	-->	mattyw (~mattyw@ip-64-134-197-91.public.wayport.net) has joined #haskell
2015-08-31 07:43:12	 *	hackagebot smallcheck-series 0.5 - Extra SmallCheck series and utilities  https://hackage.haskell.org/package/smallcheck-series-0.5 (jdnavarro)
2015-08-31 07:43:35	<--	sagittarian (~sagittari@213.57.21.122) has quit (Ping timeout: 246 seconds)
2015-08-31 07:43:40	-->	felixsch_ (~felixsch@p548A5AF8.dip0.t-ipconnect.de) has joined #haskell
2015-08-31 07:43:48	aweinstock	with stop-at-the-first-Left semantics? yeah, foldrM sounds correct for that
2015-08-31 07:43:59	runeks	bennofs: That's probably the solution I need. To fold in a list of IO actions, and evaluate them inside IO.
2015-08-31 07:45:15	<--	felixsch (~felixsch@unaffiliated/felixsch) has quit (Ping timeout: 268 seconds)
2015-08-31 07:45:30	-->	aznashwan (~nashwan@89.46.161.178) has joined #haskell
2015-08-31 07:46:21	-->	yeji (~yeji@NYUFWA-WLESSAUTHCLIENTS-04.NATPOOL.NYU.EDU) has joined #haskell
2015-08-31 07:46:36	<--	jiang42 (~jiang42@116.237.85.218) has quit (Ping timeout: 264 seconds)
2015-08-31 07:46:42	--	naudiz|offline is now known as naudiz
2015-08-31 07:46:42	-->	lingxiao (~lingxiao@seas716.wireless-pennnet.upenn.edu) has joined #haskell
2015-08-31 07:46:55	lingxiao	is there a function that allows me to take arbitrary many input args and put them into a tuple?
2015-08-31 07:46:55	glguy_	Runeks, pastebin some code?
2015-08-31 07:47:08	glguy_	No
2015-08-31 07:47:11	lingxiao	ie toTuple f1 ... fn = (f1, ..., fn)
2015-08-31 07:47:24	-->	eatsfoobars (~eatsfooba@ppp-2-84-71-122.home.otenet.gr) has joined #haskell
2015-08-31 07:47:38	frerich	lingxiao: No, but if you could explain where you would use that function then we might be able to propose a nice alternative.
2015-08-31 07:48:00	aweinstock	it might be possible to do that specifically with typeclass hackery/data families?
2015-08-31 07:48:25	<--	stultus (~stultus@wikisource/Hrishikesh.kb) has quit (Quit: Gone to sleep)
2015-08-31 07:48:27	lingxiao	something like toTuple <$> fold1 <*> fold2 <*> ... <*> foldn
2015-08-31 07:48:28	<--	animated (~mike@207.35.29.137) has quit (Quit: animated)
2015-08-31 07:48:50	lingxiao	where each foldi is a Fold a b type
2015-08-31 07:48:59	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-31 07:49:16	-->	tabemann (~travisb@172-13-49-137.lightspeed.milwwi.sbcglobal.net) has joined #haskell
2015-08-31 08:33:30	--	irc: disconnected from server
2015-08-31 08:33:55	-->	RouxTheD1 (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-31 08:33:55	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-31 08:33:55	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-31 08:33:55	--	Channel #haskell: 1491 nicks (1 op, 0 voices, 1490 normals)
2015-08-31 08:33:55	--	URL for #haskell: http://www.haskell.org/
2015-08-31 08:33:55	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-31 08:34:05	gigabytes	cocreature: already tried to to stack exec cabal, but the problem persists
2015-08-31 08:34:15	<--	DrGamatos (~DrGamatos@130.43.39.103.dsl.dyn.forthnet.gr) has left #haskell ("Leaving")
2015-08-31 08:34:23	-->	glguy_ (~glguy@haskell/developer/glguy) has joined #haskell
2015-08-31 08:34:46	<--	gnataly (~steve@162-201-41-182.lightspeed.frokca.sbcglobal.net) has quit (Ping timeout: 252 seconds)
2015-08-31 08:35:00	-->	psy (~psy@43.224.156.125) has joined #haskell
2015-08-31 08:35:00	<--	Aune (~arne@artemis.lysator.liu.se) has quit (Remote host closed the connection)
2015-08-31 08:35:08	-->	jgertm (~amontimur@46.128.43.80.dynamic.cablesurf.de) has joined #haskell
2015-08-31 08:35:24	<--	psy (~psy@43.224.156.125) has quit (Max SendQ exceeded)
2015-08-31 08:35:25	<--	bennofs (~benno@2a02:810a:8200:2934:e611:5bff:fef6:ce26) has quit (Ping timeout: 240 seconds)
2015-08-31 08:35:33	<--	glguy` (~glguy@haskell/developer/glguy) has quit (Ping timeout: 246 seconds)
2015-08-31 08:35:43	-->	lucasbrunialti (~lucasbrun@201.6.225.38) has joined #haskell
2015-08-31 08:36:06	<--	teclo- (42@unaffiliated/teclo) has quit (Quit: Lost terminal)
2015-08-31 08:36:31	-->	teclo- (42@unaffiliated/teclo) has joined #haskell
2015-08-31 08:36:44	-->	psy (~psy@43.224.156.125) has joined #haskell
2015-08-31 08:36:56	-->	gnataly (~steve@162-201-41-182.lightspeed.frokca.sbcglobal.net) has joined #haskell
2015-08-31 08:37:21	<--	kadoban (~mud@unaffiliated/kadoban) has quit (Ping timeout: 246 seconds)
2015-08-31 08:38:08	-->	glguy` (~glguy@haskell/developer/glguy) has joined #haskell
2015-08-31 08:38:19	 *	hackagebot timeout-control 0.2 - Updatable timeouts as a Monad transformer  https://hackage.haskell.org/package/timeout-control-0.2 (NathanHowell)
2015-08-31 08:38:32	-->	ceryo (~ceryo@64.245.141.10) has joined #haskell
2015-08-31 08:39:11	<--	linduxed (~linduxed@h77-53-190-81.dynamic.se.alltele.net) has quit (Ping timeout: 252 seconds)
2015-08-31 08:39:52	-->	nkhodyunya (~Adium@dnm.184.123.124.92.dsl.krasnet.ru) has joined #haskell
2015-08-31 08:40:48	<--	glguy_ (~glguy@haskell/developer/glguy) has quit (Ping timeout: 246 seconds)
2015-08-31 08:40:58	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Remote host closed the connection)
2015-08-31 08:41:13	<--	Akii (~Akii@HSI-KBW-046-005-253-086.hsi8.kabel-badenwuerttemberg.de) has quit (Quit: Leaving...)
2015-08-31 08:41:34	<--	sopvop (~lonokhov@85.143.141.170) has quit (Quit: Leaving.)
2015-08-31 08:41:39	<--	juanpaucar (~juanpauca@181.39.194.178) has quit (Remote host closed the connection)
2015-08-31 08:41:43	<--	emilypi (~emily@2601:681:4301:237f:e51b:da74:7f63:64e) has quit (Quit: Leaving)
2015-08-31 08:41:53	-->	emilypi (~emily@2601:681:4301:237f:e51b:da74:7f63:64e) has joined #haskell
2015-08-31 08:42:12	<--	glguy` (~glguy@haskell/developer/glguy) has quit (Ping timeout: 246 seconds)
2015-08-31 08:42:31	-->	mostalive (~mostalive@host86-182-25-240.range86-182.btcentralplus.com) has joined #haskell
2015-08-31 08:42:47	-->	Hugehead (~Hugehead@184.101.9.201) has joined #haskell
2015-08-31 08:43:20	 *	hackagebot moesocks 0.1.1.32 - A functional firewall killer  https://hackage.haskell.org/package/moesocks-0.1.1.32 (JinjingWang)
2015-08-31 08:43:22	<--	gnataly (~steve@162-201-41-182.lightspeed.frokca.sbcglobal.net) has quit (Ping timeout: 264 seconds)
2015-08-31 08:44:46	-->	juanpaucar (~juanpauca@181.39.194.178) has joined #haskell
2015-08-31 08:44:49	<--	juanpaucar (~juanpauca@181.39.194.178) has quit (Read error: Connection reset by peer)
2015-08-31 08:45:10	-->	juanpaucar (~juanpauca@181.39.194.178) has joined #haskell
2015-08-31 08:45:53	<--	mkusher (~mkusher@93.170.184.174) has quit (Quit: Konversation terminated!)
2015-08-31 08:46:01	<--	hamishmack (~hamishmac@209-82-80-116.dedicated.allstream.net) has quit (Quit: hamishmack)
2015-08-31 08:46:07	-->	cads (~M@24-178-115-245.static.sghl.ga.charter.com) has joined #haskell
2015-08-31 08:46:17	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-31 08:46:53	-->	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-31 08:47:08	-->	bennofs (~benno@2a02:810a:8200:2934:e611:5bff:fef6:ce26) has joined #haskell
2015-08-31 08:47:18	<--	mostalive (~mostalive@host86-182-25-240.range86-182.btcentralplus.com) has quit (Ping timeout: 256 seconds)
2015-08-31 08:48:46	-->	moghedrin (~tbowler@216-241-59-202.static-ip.telepacific.net) has joined #haskell
2015-08-31 08:48:49	<--	marr (~ccc@159-205-186-222.adsl.inetia.pl) has quit (Read error: Connection reset by peer)
2015-08-31 08:48:51	lpaste_	athan pasted “Type role / representation error for deriving Witherable” at http://lpaste.net/139963
2015-08-31 08:48:58	athan	bennofs: ^ There we go
2015-08-31 08:49:04	athan	sorry it took so long
2015-08-31 08:49:28	<--	jemu (~Thunderbi@port-212-202-107-85.static.qsc.de) has quit (Quit: jemu)
2015-08-31 08:49:49	-->	josephle (~josephhle@216.239.45.89) has joined #haskell
2015-08-31 08:50:00	-->	phyrex1an (~phyrex1an@cm-84.208.142.101.getinternet.no) has joined #haskell
2015-08-31 08:50:03	orbifx	merijn, aweinstock http://lpaste.net/1670829852527165440
2015-08-31 08:50:28	orbifx	it's already giving me a load of suggestions there, but that is the function that needs to be refactored
2015-08-31 08:50:42	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Remote host closed the connection)
2015-08-31 08:51:00	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-31 08:51:35	-->	osa1_ (~omer@72.2.55.21) has joined #haskell
2015-08-31 08:52:01	-->	Ven (~textual@163.5.245.253) has joined #haskell
2015-08-31 08:52:07	-->	mkusher (~mkusher@93.170.184.174) has joined #haskell
2015-08-31 08:53:23	bennofs	athan: Oh, I think in that case, you're not going to be able to avoid writing the instance manually.
2015-08-31 08:54:10	bennofs	athan: the problem is that GHC can't know that it has to use fmap, like you do in your manually-written instance
2015-08-31 08:54:12	<--	rgr (~user@f054137064.adsl.alicedsl.de) has quit (Quit: ERC (IRC client for Emacs 24.5.50.1))
2015-08-31 08:54:21	<--	cognominal (~cognomina@87-231-91-9.rev.numericable.fr) has quit (Quit: This computer has gone to sleep)
2015-08-31 08:54:32	<--	phyrex1an (~phyrex1an@cm-84.208.142.101.getinternet.no) has quit (Ping timeout: 250 seconds)
2015-08-31 08:54:32	bennofs	athan: instead, it emits code like: coerce $ wither f xs, where coerce can convert types with the same representation
2015-08-31 08:54:34	<--	jgertm (~amontimur@46.128.43.80.dynamic.cablesurf.de) has quit (Ping timeout: 252 seconds)
2015-08-31 08:55:58	bennofs	athan: however, with type families, there can be types f where `f (Foo a)` and `f [a]` don't have the same representation: consider type family X a where X (Foo a) = Int; X [a] = Bool;  data Bad a = Bad (X a)
2015-08-31 08:56:09	<--	sword_smith (~quassel@77.66.112.22) has quit (Ping timeout: 250 seconds)
2015-08-31 08:56:25	<--	gigabytes (~gigabytes@151.49.242.151) has quit
2015-08-31 08:56:32	<--	Ven (~textual@163.5.245.253) has quit (Client Quit)
2015-08-31 08:56:43	bennofs	athan: so despite the representations of `[a]` and `Foo a` being the same, that doesn't imply that `f [a]` and `Foo a` are equally represented at runtime
2015-08-31 08:56:49	<--	ceryo (~ceryo@64.245.141.10) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-08-31 08:57:12	bennofs	brb, reboot
2015-08-31 08:57:14	<--	bennofs (~benno@2a02:810a:8200:2934:e611:5bff:fef6:ce26) has quit (Quit: WeeChat 1.2)
2015-08-31 08:57:48	-->	bennofs (~benno@2a02:810a:8200:2934:e611:5bff:fef6:ce26) has joined #haskell
2015-08-31 08:58:19	-->	strburst (~allen@lawn-128-61-27-36.lawn.gatech.edu) has joined #haskell
2015-08-31 08:58:23	-->	orion (~orion@unaffiliated/orion) has joined #haskell
2015-08-31 08:58:38	-->	erisco (~erisco@198-84-154-240.cpe.teksavvy.com) has joined #haskell
2015-08-31 08:58:41	-->	schell (~schell@c-73-231-26-34.hsd1.ca.comcast.net) has joined #haskell
2015-08-31 08:58:47	erisco	is  encodeUtf8 . decodeUtf8 = id?
2015-08-31 08:59:03	-->	sword_smith (~quassel@77.66.112.22) has joined #haskell
2015-08-31 08:59:15	bennofs	erisco: no, since decodeUtf8 throws an error on invalid input I think
2015-08-31 08:59:32	erisco	okay, assuming input is valid UTF8
2015-08-31 08:59:32	-->	ceryo (~ceryo@64.245.141.10) has joined #haskell
2015-08-31 08:59:46	-->	pt1 (~pt1@195.29.92.186) has joined #haskell
2015-08-31 08:59:49	<--	pt1 (~pt1@195.29.92.186) has quit (Remote host closed the connection)
2015-08-31 08:59:51	<--	ramky (ramky@nat/redhat/x-pxskrphnzchvwbjj) has quit (Ping timeout: 268 seconds)
2015-08-31 09:00:26	-->	tibbe (~tibbe@72.2.55.21) has joined #haskell
2015-08-31 09:00:45	erisco	I'd like to get the byte offset of each Char
2015-08-31 09:00:53	bergmark	i've assumed it is...
2015-08-31 09:01:02	-->	BlockyNight (~jon@78.143.169.70) has joined #haskell
2015-08-31 09:01:03	-->	rgr (~user@f054137064.adsl.alicedsl.de) has joined #haskell
2015-08-31 09:01:18	-->	trism (~jconti@unaffiliated/trism) has joined #haskell
2015-08-31 09:01:23	erisco	rewriting decodeUtf8 to provide this looks onerous
2015-08-31 09:01:35	<--	psy (~psy@43.224.156.125) has quit (Disconnected by services)
2015-08-31 09:01:36	<--	qubitnerd (~neutrino@unaffiliated/electron/x-8286743) has quit (Ping timeout: 246 seconds)
2015-08-31 09:01:54	erisco	but if I could encode a Char back to bytes under UTF8
2015-08-31 09:02:03	erisco	well, it would be slow and stupid, but I wouldn't have to rewrite libs
2015-08-31 09:02:03	<--	ceryo (~ceryo@64.245.141.10) has quit (Read error: Connection reset by peer)
2015-08-31 09:03:29	-->	psy_ (~psy@43.224.156.125) has joined #haskell
2015-08-31 09:03:29	-->	jinblack (~jinblack@ip184-187-174-107.sb.sd.cox.net) has joined #haskell
2015-08-31 09:03:29	-->	enaqx (~enaqx@188.163.69.11) has joined #haskell
2015-08-31 09:03:29	<--	jerin_ (uid67648@gateway/web/irccloud.com/x-otznwogmrccmvgtv) has quit (Quit: Connection closed for inactivity)
2015-08-31 09:03:29	<--	triliyn (~lioneyes@c-24-6-242-177.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2015-08-31 09:03:29	athan	bennofs: Oh okay that makes a lot of sense
2015-08-31 09:03:29	athan	thank you
2015-08-31 09:03:29	<--	strburst (~allen@lawn-128-61-27-36.lawn.gatech.edu) has quit (Ping timeout: 272 seconds)
2015-08-31 09:03:30	<--	Iskarlar (~Iskarlar@D9641F32.static.ziggozakelijk.nl) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-31 09:03:33	<--	Deadhand (~deadf00t@CPE009027bcf235-CM602ad087f8f7.cpe.net.cable.rogers.com) has quit (Ping timeout: 255 seconds)
2015-08-31 09:03:49	erisco	you cannot jump to the nth character but you can jump to the nth byte
2015-08-31 09:03:52	-->	cfricke_ (~cfricke@unaffiliated/cfricke) has joined #haskell
2015-08-31 09:03:57	erisco	which is why it is useful
2015-08-31 09:03:58	-->	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-31 09:04:25	-->	jud (~jud@cpe-70-113-109-117.austin.res.rr.com) has joined #haskell
2015-08-31 09:04:25	<--	jud (~jud@cpe-70-113-109-117.austin.res.rr.com) has quit (Changing host)
2015-08-31 09:04:25	-->	jud (~jud@unaffiliated/jud) has joined #haskell
2015-08-31 09:04:33	-->	ceryo (~ceryo@64.245.141.10) has joined #haskell
2015-08-31 09:04:43	-->	kamatsu (~Adium@123-243-95-236.static.tpgi.com.au) has joined #haskell
2015-08-31 09:05:05	-->	Wollan (~wollan@ti0063a400-3359.bb.online.no) has joined #haskell
2015-08-31 09:05:23	-->	mada (~mariano@181.170.72.150) has joined #haskell
2015-08-31 09:05:35	<--	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 252 seconds)
2015-08-31 09:05:41	<--	obb (~user@HSI-KBW-085-216-105-176.hsi.kabelbw.de) has quit (Quit: Leaving)
2015-08-31 09:05:57	-->	gnataly (~steve@162-201-41-182.lightspeed.frokca.sbcglobal.net) has joined #haskell
2015-08-31 09:06:08	-->	SubZeroFX (~SubZeroFX@unaffiliated/subzerofx) has joined #haskell
2015-08-31 09:06:34	-->	Noldorin (~noldorin@unaffiliated/noldorin) has joined #haskell
2015-08-31 09:06:41	<--	cfricke (~cfricke@unaffiliated/cfricke) has quit (Ping timeout: 252 seconds)
2015-08-31 09:08:01	-->	centrinia (~centrinia@2602:306:bd0d:a690:ad2d:248:abb3:9190) has joined #haskell
2015-08-31 09:09:25	<--	orbifx (~orbifx@81.174.135.77) has quit (Ping timeout: 256 seconds)
2015-08-31 09:09:32	<--	tibbe (~tibbe@72.2.55.21) has quit (Quit: tibbe)
2015-08-31 09:10:04	-->	arahael1 (~arahael@120.155.14.195) has joined #haskell
2015-08-31 09:10:09	<--	aznashwan (~nashwan@89.46.161.178) has quit (Ping timeout: 250 seconds)
2015-08-31 09:10:38	-->	nikki93 (~nikki93@2601:645:4100:2590:7d4b:5eab:d271:5cd) has joined #haskell
2015-08-31 09:10:45	<--	Arahael (~arahael@CPE-58-164-52-187.lnse5.ken.bigpond.net.au) has quit (Ping timeout: 255 seconds)
2015-08-31 09:11:00	-->	phyrex1an (~phyrex1an@2a02:fe0:c120:1310:dc3e:99eb:9b93:f4f5) has joined #haskell
2015-08-31 09:11:01	<--	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 250 seconds)
2015-08-31 09:11:46	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 246 seconds)
2015-08-31 09:12:06	<--	larion (~larion@a83-162-181-111.adsl.xs4all.nl) has quit (Ping timeout: 255 seconds)
2015-08-31 09:12:25	<--	xandaros (~xandaros@185.35.77.23) has quit (Remote host closed the connection)
2015-08-31 09:12:48	-->	xandaros (~xandaros@185.35.77.23) has joined #haskell
2015-08-31 09:12:49	-->	pt1 (~pt1@195.29.92.186) has joined #haskell
2015-08-31 09:12:55	-->	jgertm (~amontimur@46.128.43.80.dynamic.cablesurf.de) has joined #haskell
2015-08-31 09:13:09	<--	xandaros (~xandaros@185.35.77.23) has quit (Remote host closed the connection)
2015-08-31 09:13:59	<--	gthorslund (~gthorslun@217-209-162-85-no155.bredband.skanova.com) has quit (Ping timeout: 244 seconds)
2015-08-31 09:14:01	<--	ceii (~ceii@2a02:1205:c69a:b6f0:c685:8ff:fe30:8ca2) has quit (Ping timeout: 252 seconds)
2015-08-31 09:14:15	<--	gentleben (~gentleben@c-98-207-43-107.hsd1.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-31 09:14:18	-->	xandaros (~xandaros@185.35.77.23) has joined #haskell
2015-08-31 09:14:24	-->	ceii (~ceii@2a02:1205:c69a:b6f0:c685:8ff:fe30:8ca2) has joined #haskell
2015-08-31 09:14:45	-->	rob_frankie1 (~user@109.174.174.90) has joined #haskell
2015-08-31 09:15:45	rob_frankie1	I'm trying to compile an executable that depends on the lvish library, which itself depends on the bits-atomic library. I'm getting the following error when I try to compile my executable:
2015-08-31 09:15:52	rob_frankie1	can't load .so/.DLL for: /home/rob/.cabal/lib/i386-linux-ghc-7.10.1/bitsa_EfESR243Us2C1YfvGtoj49/libHSbits-atomic-0.1.3-EfESR243Us2C1YfvGtoj49-ghc7.10.1.so (/home/rob/.cabal/lib/i386-linux-ghc-7.10.1/bitsa_EfESR243Us2C1YfvGtoj49/libHSbits-atomic-0.1.3-EfESR243Us2C1YfvGtoj49-ghc7.10.1.so: undefined symbol: nand_and_fetch_8)
2015-08-31 09:15:53	-->	xinming (~xinming@125.86.143.220) has joined #haskell
2015-08-31 09:16:17	glguy	You can find the beginnering of each encoded unicode codepoint in UTF-8 without fully decoding it. All continuation bytes have the same marker
2015-08-31 09:16:36	rob_frankie1	This symbol is defined in atomic-bitops-gcc.h in the bits-atomic library.
2015-08-31 09:16:45	rob_frankie1	inline unsigned char nand_and_fetch_8 (unsigned char *, unsigned char );
2015-08-31 09:16:55	rob_frankie1	So I'm stumped in how to resolve my compilation error :-/
2015-08-31 09:17:05	-->	k00mi (~koomi@moshbit.net) has joined #haskell
2015-08-31 09:17:36	-->	ptcek (~ptcek@89.239.24.150) has joined #haskell
2015-08-31 09:17:37	<--	grouzen (~grouzen@195.238.93.36) has quit (Ping timeout: 244 seconds)
2015-08-31 09:17:41	<--	nikki93 (~nikki93@2601:645:4100:2590:7d4b:5eab:d271:5cd) has quit (Remote host closed the connection)
2015-08-31 09:18:19	<--	darkbolt_ (~darkbolt@23.252.55.57) has quit (Remote host closed the connection)
2015-08-31 09:18:51	<--	xinming_ (~xinming@219.152.161.45) has quit (Ping timeout: 255 seconds)
2015-08-31 09:18:55	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-31 09:19:09	erisco	glguy, that still doesn't let you jump though
2015-08-31 09:19:09	lingxiao	hey all 
2015-08-31 09:19:18	<--	cfricke_ (~cfricke@unaffiliated/cfricke) has quit (Ping timeout: 255 seconds)
2015-08-31 09:19:33	lingxiao	Im writing this test case for the function Invert :: [(a,b)] -> [(b,a)]
2015-08-31 09:19:41	-->	serendependy (~christoph@192.171.117.214) has joined #haskell
2015-08-31 09:19:48	<--	xandaros (~xandaros@185.35.77.23) has quit (Remote host closed the connection)
2015-08-31 09:19:50	<--	caumeslasal (~Thunderbi@78.194.128.236) has quit (Ping timeout: 240 seconds)
2015-08-31 09:19:58	-->	larion (~larion@a83-162-181-111.adsl.xs4all.nl) has joined #haskell
2015-08-31 09:20:21	lingxiao	and when I write the test case `testinvert = "invert" ~: TestList [invert ([] :: (Eq a, Eq b) => [(a,b)]) ~?= ([] :: (Eq a, Eq b) => [(a,b)])]`
2015-08-31 09:20:23	-->	xandaros (~xandaros@185.35.77.23) has joined #haskell
2015-08-31 09:20:24	-->	ralu (~ralu@188-230-233-174.dynamic.t-2.net) has joined #haskell
2015-08-31 09:20:30	<--	juanpablo_ (~juanpablo@drop.juanpablo.me) has quit (Remote host closed the connection)
2015-08-31 09:20:38	-->	juanpablo_ (~juanpablo@drop.juanpablo.me) has joined #haskell
2015-08-31 09:20:55	<--	athan (~athan@96.88.77.243) has quit (Read error: Connection reset by peer)
2015-08-31 09:21:02	lingxiao	or if you like .. http://lpaste.net/139964
2015-08-31 09:21:40	lingxiao	I am getting error .. http://lpaste.net/139965
2015-08-31 09:21:40	-->	cfricke (~cfricke@unaffiliated/cfricke) has joined #haskell
2015-08-31 09:21:40	<--	cfricke (~cfricke@unaffiliated/cfricke) has quit (Client Quit)
2015-08-31 09:21:48	-->	cfricke (~cfricke@unaffiliated/cfricke) has joined #haskell
2015-08-31 09:22:32	glguy	lingxiao: You need to pick an 'a' and a 'b'
2015-08-31 09:22:48	lingxiao	But if I change it to some conceret type, ie Eq a => (a,Int) I am ok
2015-08-31 09:22:51	lingxiao	so I need to pick one?
2015-08-31 09:22:59	lingxiao	why is this?
2015-08-31 09:23:12	-->	dan_f (~dan@wireless-165-124-144-197.nuwlan.northwestern.edu) has joined #haskell
2015-08-31 09:23:18	glguy	To build the equality operation on lists GHC needs to know what the types are
2015-08-31 09:23:21	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Ping timeout: 255 seconds)
2015-08-31 09:23:27	-->	martin-t (~martin-t@199.201.64.129) has joined #haskell
2015-08-31 09:23:56	glguy	The equality operation on lists is built in terms of the equality operation on the elements of the list, whether or not that list has elements
2015-08-31 09:23:59	-->	kadoban (~mud@unaffiliated/kadoban) has joined #haskell
2015-08-31 09:24:13	-->	zekriad (~zekriad@208.42.192.210) has joined #haskell
2015-08-31 09:24:17	<--	danza (~francesco@host142-111-dynamic.17-87-r.retail.telecomitalia.it) has quit (Quit: Leaving)
2015-08-31 09:24:17	lingxiao	so why is it ok to have one polymorphic instance `a`, as in Eq a => [(a,Int)]
2015-08-31 09:24:33	-->	tennix (~ztennix@unaffiliated/tennix) has joined #haskell
2015-08-31 09:24:43	<--	pyon (~pyon@unaffiliated/pyon) has quit (Quit: Dammit, f...ix you, Emacs.)
2015-08-31 09:24:43	-->	Welkin (~Welkin@rrcs-97-78-71-195.se.biz.rr.com) has joined #haskell
2015-08-31 09:24:44	glguy	Probably because of the way you're using it with invert
2015-08-31 09:24:49	<--	samrat (~samrat@123.236.183.215) has quit (Ping timeout: 244 seconds)
2015-08-31 09:24:55	glguy	GHC eventually determines that that 'a' is going to be Int, too
2015-08-31 09:24:55	<--	larion (~larion@a83-162-181-111.adsl.xs4all.nl) has quit (Ping timeout: 246 seconds)
2015-08-31 09:25:10	-->	pyon (~pyon@unaffiliated/pyon) has joined #haskell
2015-08-31 09:25:24	--	paf31 is now known as paf31_away
2015-08-31 09:25:26	<--	pyon (~pyon@unaffiliated/pyon) has quit (Remote host closed the connection)
2015-08-31 09:25:44	-->	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has joined #haskell
2015-08-31 09:25:52	<--	Paradisee (~quassel@2.239.28.120) has quit (Ping timeout: 244 seconds)
2015-08-31 09:25:54	--	k00mi is now known as koomi
2015-08-31 09:26:06	-->	pyon (~pyon@unaffiliated/pyon) has joined #haskell
2015-08-31 09:26:23	-->	harlchen (~harlchen@unaffiliated/harlchen) has joined #haskell
2015-08-31 09:26:24	-->	aznashwan (~nashwan@86.126.80.31) has joined #haskell
2015-08-31 09:26:27	-->	staffehn (~quassel@2001:41d0:52:d00::1d3) has joined #haskell
2015-08-31 09:26:48	<--	b0oh (~b0oh@h-72-214.a137.corp.bahnhof.se) has quit
2015-08-31 09:28:05	-->	twanvl (~twanvl@77.250.86.217) has joined #haskell
2015-08-31 09:28:13	-->	DoubleAC (~Fleet@pool-108-56-208-50.washdc.fios.verizon.net) has joined #haskell
2015-08-31 09:29:06	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 250 seconds)
2015-08-31 09:29:25	<--	fsvehla (~fsvehla@h081217222140.dyn.cm.kabsi.at) has quit (Quit: fsvehla)
2015-08-31 09:29:35	lingxiao	yeah you're right, i didnt even need the Eq a constriant there
2015-08-31 09:29:36	lingxiao	thanks
2015-08-31 09:30:02	-->	adek (~adek@199.201.64.130) has joined #haskell
2015-08-31 09:30:48	-->	LonZealot (~IceChat9@p5B2BE9EF.dip0.t-ipconnect.de) has joined #haskell
2015-08-31 09:31:47	-->	razvanc87 (~razvanc87@79.97.80.96) has joined #haskell
2015-08-31 09:31:52	-->	ecthiender (~ecthiende@unaffiliated/ecthiender) has joined #haskell
2015-08-31 09:31:54	<--	gnataly (~steve@162-201-41-182.lightspeed.frokca.sbcglobal.net) has quit (Ping timeout: 255 seconds)
2015-08-31 09:32:05	-->	moplove_ (~moplove@67.78.34.138) has joined #haskell
2015-08-31 09:33:09	<--	jdnavarro (~danny@50.Red-79-156-135.staticIP.rima-tde.net) has quit (Quit: jdnavarro)
2015-08-31 09:33:17	--	paf31_away is now known as paf31
2015-08-31 09:34:13	<--	osa1_ (~omer@72.2.55.21) has quit (Quit: Konversation terminated!)
2015-08-31 09:34:17	-->	osa1__ (~omer@72.2.55.21) has joined #haskell
2015-08-31 09:34:21	-->	samrat (~samrat@123.236.183.215) has joined #haskell
2015-08-31 09:34:58	erisco	so... UTF-8 bypasses endianness problems just by defining its own endianness?
2015-08-31 09:35:37	-->	tibbe (~tibbe@72.2.55.21) has joined #haskell
2015-08-31 09:35:47	-->	jiang42 (~jiang42@116.237.85.218) has joined #haskell
2015-08-31 09:36:27	monochrom	perhaps
2015-08-31 09:36:40	-->	matsuura_ (~none@loveturtle.net) has joined #haskell
2015-08-31 09:36:46	monochrom	it still doesn't say how to order the 8 bits in each byte, though.
2015-08-31 09:37:03	<--	NeverDie (~NeverDie@cpe-184-152-22-98.nyc.res.rr.com) has quit (Quit: I'm off to sleep. ZZZzzz…)
2015-08-31 09:37:08	<--	kognate (kognate@nat/ibm/x-neseueqhojuvbalc) has quit (Remote host closed the connection)
2015-08-31 09:37:08	erisco	has that ever been an issue? I haven't heard of it
2015-08-31 09:37:10	<--	micmus (~micmus@abdv71.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 246 seconds)
2015-08-31 09:37:13	monochrom	:)
2015-08-31 09:37:34	-->	noam (~noam@213.57.247.238) has joined #haskell
2015-08-31 09:37:36	<--	matsuura (~none@unaffiliated/matsuura) has quit (Ping timeout: 264 seconds)
2015-08-31 09:37:37	erisco	it is just weird that it words it as though it does something special to fix endianness
2015-08-31 09:37:57	<--	xandaros (~xandaros@185.35.77.23) has quit (Remote host closed the connection)
2015-08-31 09:38:12	erisco	but it seems to just pick big endian
2015-08-31 09:38:12	<--	skeet70 (~skeet70@inet-hqmc01-o.oracle.com) has quit (Remote host closed the connection)
2015-08-31 09:38:27	-->	xandaros (~xandaros@185.35.77.23) has joined #haskell
2015-08-31 09:38:36	-->	skeet70 (~skeet70@inet-hqmc01-o.oracle.com) has joined #haskell
2015-08-31 09:39:03	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-31 09:39:08	<--	kadoban (~mud@unaffiliated/kadoban) has quit (Ping timeout: 272 seconds)
2015-08-31 09:39:08	<--	proteusguy (~proteusgu@110.168.229.190) has quit (Ping timeout: 272 seconds)
2015-08-31 09:39:12	-->	kognate (kognate@nat/ibm/x-qudajyajfeqzcipf) has joined #haskell
2015-08-31 09:39:17	harlchen	hi, i try to get this http://lpaste.net/new/haskell to work, but i miss where the conversion from Int to Pixel8 should occour 
2015-08-31 09:39:26	<--	kognate (kognate@nat/ibm/x-qudajyajfeqzcipf) has quit (Remote host closed the connection)
2015-08-31 09:39:36	lpaste_	harlchen pasted “juicypixels” at http://lpaste.net/139967
2015-08-31 09:39:47	harlchen	this one ^^
2015-08-31 09:39:55	-->	stef204 (~stef204@unaffiliated/stef-204/x-384198) has joined #haskell
2015-08-31 09:39:56	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-31 09:40:00	<--	Argue (~Argue___@112.209.109.5) has quit (Ping timeout: 255 seconds)
2015-08-31 09:40:01	-->	kognate (kognate@nat/ibm/x-otzkuzqaqoaubmnd) has joined #haskell
2015-08-31 09:40:34	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-31 09:40:36	<--	jiang42 (~jiang42@116.237.85.218) has quit (Ping timeout: 264 seconds)
2015-08-31 09:40:48	-->	arbelos (~slack@109.58.144.234.bredband.tre.se) has joined #haskell
2015-08-31 09:42:06	<--	xandaros (~xandaros@185.35.77.23) has quit (Remote host closed the connection)
2015-08-31 09:42:23	-->	tiler (~tyler@188-178-250-234-static.dk.customer.tdc.net) has joined #haskell
2015-08-31 09:42:35	<--	moplove_ (~moplove@67.78.34.138) has left #haskell
2015-08-31 09:42:47	hodapp	Does some terminology describe the case in which a term is only ever found 'inside' a monad and the types do not permit any way to use it outside of that?
2015-08-31 09:42:55	-->	rperry (~rperry@c-50-135-202-230.hsd1.wa.comcast.net) has joined #haskell
2015-08-31 09:43:17	-->	xandaros (~xandaros@185.35.77.23) has joined #haskell
2015-08-31 09:43:28	monochrom	I say that the term is an action.
2015-08-31 09:43:42	-->	qubitnerd (~neutrino@unaffiliated/electron/x-8286743) has joined #haskell
2015-08-31 09:43:47	monochrom	for example getLine is an action.
2015-08-31 09:43:54	Welkin	hodapp: like the s in ST?
2015-08-31 09:44:25	hodapp	Welkin: I suppose
2015-08-31 09:44:26	<--	asthasr (~blake@cpe-98-24-56-213.carolina.res.rr.com) has quit (Quit: leaving)
2015-08-31 09:44:55	monochrom	eh? you are not sure what you mean?
2015-08-31 09:45:01	Welkin	isn't that existential quantification?
2015-08-31 09:45:23	hodapp	monochrom: I'm not so much talking about the action that 'returns' the term, but rather of that term itself.
2015-08-31 09:45:26	<--	kognate (kognate@nat/ibm/x-otzkuzqaqoaubmnd) has quit (Remote host closed the connection)
2015-08-31 09:45:35	glguy	The 's' in 'ST s' is just a normal phantom type parameter, no quantification
2015-08-31 09:45:44	-->	kognate (kognate@nat/ibm/x-xumsrgxxmdfnwwfd) has joined #haskell
2015-08-31 09:45:45	hodapp	Welkin: I'm not especially familiar with ST, though.
2015-08-31 09:45:47	monochrom	in my example, getLine is the term.
2015-08-31 09:46:12	-->	breadmonster (0e8b2df4@gateway/web/freenode/ip.14.139.45.244) has joined #haskell
2015-08-31 09:46:38	monochrom	in my example, no one is returning anything.
2015-08-31 09:46:47	nullvoid8	hodapp: do you mean something like MyMonad (MyFoo a) where nothing allows you to act on just a (MyFoo a) ?
2015-08-31 09:47:04	erisco	"Invalid UTF-8 has been used to bypass security validations in high profile products including Microsoft's IIS web server[13] and Apache's Tomcat servlet container."
2015-08-31 09:47:07	erisco	this makes me lol a bit
2015-08-31 09:48:00	<--	jamiely (8f702004@gateway/web/freenode/ip.143.112.32.4) has quit (Ping timeout: 246 seconds)
2015-08-31 09:48:01	<--	dan_f (~dan@wireless-165-124-144-197.nuwlan.northwestern.edu) has quit (Quit: dan_f)
2015-08-31 09:48:08	-->	jamiely (8f702004@gateway/web/freenode/ip.143.112.32.4) has joined #haskell
2015-08-31 09:48:10	hodapp	nullvoid8: a MyMonad (MyFoo a) where operations on just a (MyFoo a) are sensible, but where you are not going to encounter one except for 'inside' of MyMonad.
2015-08-31 09:48:11	<--	quchen (~quchen@ipb21bf8fb.dynamic.kabel-deutschland.de) has quit (Ping timeout: 264 seconds)
2015-08-31 09:48:25	-->	Internet13 (~chatzilla@cpc12-croy20-2-0-cust469.croy.cable.virginm.net) has joined #haskell
2015-08-31 09:49:11	-->	araujo (~araujo@gentoo/developer/araujo) has joined #haskell
2015-08-31 09:49:14	monochrom	well then you really have to go ST and see "newSTRef :: ST s (STRef s a)"
2015-08-31 09:49:23	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-31 09:49:46	erisco	even if your UTF-8 decoding was too permissive, I am not sure how this ultimately gives you a security vulnerability without doing something else silly
2015-08-31 09:49:47	nullvoid8	hodapp: so something like IORef where the only way to produce one is newIORef :: a -> IO (IORef a)
2015-08-31 09:49:47	--	Philonous_ is now known as Philonous
2015-08-31 09:50:02	hodapp	I feel like I've seen tutorials and documentation refer then to the (MyFoo a) as always being 'inside' whatever monad, but I've seen that terminology criticized as well.
2015-08-31 09:50:17	erisco	maybe some string concatenation type of things
2015-08-31 09:51:10	<--	centrinia (~centrinia@2602:306:bd0d:a690:ad2d:248:abb3:9190) has quit (Ping timeout: 246 seconds)
2015-08-31 09:51:34	hodapp	but I don't know what else to call something, then, than being inside a monad.
2015-08-31 09:51:46	<--	rob_frankie1 (~user@109.174.174.90) has quit (Remote host closed the connection)
2015-08-31 09:51:56	<--	howdoi (uid224@gateway/web/irccloud.com/x-uyjicedczbehxuxe) has quit (Quit: Connection closed for inactivity)
2015-08-31 09:52:01	-->	Paradisee (~quassel@2.239.28.120) has joined #haskell
2015-08-31 09:52:16	breadmonster	hodapp: Hello.
2015-08-31 09:52:24	<--	enaqx (~enaqx@188.163.69.11) has quit (Remote host closed the connection)
2015-08-31 09:52:26	hodapp	breadmonster: hiya
2015-08-31 09:52:36	-->	ulfdoz (~mary@2.165.20.14) has joined #haskell
2015-08-31 09:52:56	<--	Gurkenglas (Gurkenglas@dslb-178-000-176-040.178.000.pools.vodafone-ip.de) has quit (Ping timeout: 250 seconds)
2015-08-31 09:52:58	<--	tibbe (~tibbe@72.2.55.21) has quit (Quit: tibbe)
2015-08-31 09:53:03	-->	conal (~textual@104.255.240.10) has joined #haskell
2015-08-31 09:53:06	<--	zekriad (~zekriad@208.42.192.210) has quit (Read error: Connection reset by peer)
2015-08-31 09:53:19	<--	PatrickRobotham (uid18270@gateway/web/irccloud.com/x-jfdkmvbupsvggttp) has quit (Quit: Connection closed for inactivity)
2015-08-31 09:53:35	erisco	well, 'IORef a' is applied to IO
2015-08-31 09:53:46	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Ping timeout: 244 seconds)
2015-08-31 09:53:47	-->	Gurkenglas (Gurkenglas@dslb-178-000-176-040.178.000.pools.vodafone-ip.de) has joined #haskell
2015-08-31 09:54:11	erisco	do you say that for 'not True' that 'True' is inside the negation? I don't know
2015-08-31 09:54:32	-->	Guest38 (~textual@38.88.246.202) has joined #haskell
2015-08-31 09:54:41	-->	Jackneill (~Jackneill@unaffiliated/jackneill) has joined #haskell
2015-08-31 09:54:41	-->	APic (apic@apic.name) has joined #haskell
2015-08-31 09:54:50	-->	qz (~quetzal@li272-85.members.linode.com) has joined #haskell
2015-08-31 09:55:07	ysz	System.Info.compilerVersion lacks third number i.e only says 7.10 instead of 7.10.2
2015-08-31 09:55:09	hodapp	I guess some folks just object to saying it's "in" a monad because it can be misleading.
2015-08-31 09:55:15	ysz	how do I figure last one?
2015-08-31 09:55:27	<--	conal (~textual@104.255.240.10) has quit (Client Quit)
2015-08-31 09:56:23	<--	joco42__ (~joco42@dsl-hkibrasgw4-58c03a-80.dhcp.inet.fi) has quit (Remote host closed the connection)
2015-08-31 09:56:23	<--	emilypi (~emily@2601:681:4301:237f:e51b:da74:7f63:64e) has quit (Ping timeout: 240 seconds)
2015-08-31 09:56:31	--	irc: disconnected from server
2015-08-31 09:56:57	-->	RouxTheDay (~RouxTheDa@199.21.87.214) has joined #haskell
2015-08-31 09:56:57	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-31 09:56:57	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-31 09:56:58	--	Channel #haskell: 1503 nicks (1 op, 0 voices, 1502 normals)
2015-08-31 09:56:58	--	Notice(barjavel.freenode.net): [freenode-info] if you're at a conference and other people are having trouble connecting, please mention it to staff: http://freenode.net/faq.shtml#gettinghelp
2015-08-31 09:56:58	--	URL for #haskell: http://www.haskell.org/
2015-08-31 09:56:58	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-31 09:57:15	-->	proteusguy (~proteusgu@ppp-110-168-229-190.revip5.asianet.co.th) has joined #haskell
2015-08-31 09:57:26	-->	MrScout (~MrScout@unaffiliated/mrscout) has joined #haskell
2015-08-31 09:57:36	erisco	"newIORef returns IO-applied IORef's"
2015-08-31 09:57:37	Cale	hodapp: You can refer to actions of the particular monad, like you can say that such and such is an IO action.
2015-08-31 09:57:41	erisco	doesn't have the ring to it does it
2015-08-31 09:57:48	monochrom	is it really important to reserve a word for it? IMO just plain "it is no good outside that context" suffices.
2015-08-31 09:57:50	erisco	"newIORef returns IORef's in IO"
2015-08-31 09:57:58	Cale	newIORef produces an IO action whose result is an IORef.
2015-08-31 09:58:08	Cale	Much more sensible
2015-08-31 09:58:08	hodapp	monochrom: I'm just trying not to totally mangle terminology in how I refer to something; communication matters to me.
2015-08-31 09:58:25	Cale	:t
2015-08-31 09:58:30	Cale	:t newIORef
2015-08-31 09:58:31	lambdabot	    Not in scope: ‘newIORef’
2015-08-31 09:58:31	lambdabot	    Perhaps you meant ‘newSTRef’ (imported from Data.STRef)
2015-08-31 09:58:38	Cale	:t Data.IORef.newIORef
2015-08-31 09:58:39	lambdabot	a -> IO (GHC.IORef.IORef a)
2015-08-31 09:58:44	hodapp	Cale: yeah, that would seem to make more sense
2015-08-31 09:58:50	Cale	^^ or you could just write the type :)
2015-08-31 09:58:59	<--	osa1__ (~omer@72.2.55.21) has quit (Ping timeout: 264 seconds)
2015-08-31 09:59:01	Cale	(preferably without the ugly module qualification)
2015-08-31 09:59:14	hodapp	I guess I shy away from using the term 'action' outside of side effects
2015-08-31 09:59:22	-->	conal (~textual@104.255.240.10) has joined #haskell
2015-08-31 09:59:44	erisco	maybe it needs an -able suffix
2015-08-31 09:59:54	erisco	"newIORef returns IOable IORefs"
2015-08-31 09:59:56	Cale	Well, if something is a list, you probably don't say "action" unless you're really thinking about how the Monad instance is coming into play
2015-08-31 09:59:57	hodapp	we'd need a suffixable word for that
2015-08-31 10:00:02	<--	RouxTheD1 (~RouxTheDa@173.247.199.46) has quit (Ping timeout: 272 seconds)
2015-08-31 10:00:05	Cale	You just call it a list like usual.
2015-08-31 10:00:10	-->	GLM (a1b5fd14@gateway/web/cgi-irc/kiwiirc.com/ip.161.181.253.20) has joined #haskell
2015-08-31 10:00:12	-->	Epichero (~Tyler@2601:602:c500:6cab:418c:aafd:2965:96b0) has joined #haskell
2015-08-31 10:00:16	Cale	The fact that IO is a monad is not very important.
2015-08-31 10:00:19	erisco	you just suffix the name of the Monad oO
2015-08-31 10:00:31	Cale	and we should really not even be saying "the IO monad" as much as we do, imo.
2015-08-31 10:00:38	-->	safinaskar (~user@nat-1-25.msu.umos.ru) has joined #haskell
2015-08-31 10:00:40	safinaskar	how to convert [-2, -1, 2, 4, -1, 5] to [([-2, -1], [2, 4]), ([-1], [5])]?
2015-08-31 10:00:58	safinaskar	i. e. all positive, then all negative, then again all positive etc
2015-08-31 10:00:58	hodapp	I hardly say "IO" as is because I'm usually stuck in the Ivory monad >_>
2015-08-31 10:01:41	erisco	:t span -- safinaskar
2015-08-31 10:01:42	-->	nour (~nour@f053232014.adsl.alicedsl.de) has joined #haskell
2015-08-31 10:01:42	lambdabot	(a -> Bool) -> [a] -> ([a], [a])
2015-08-31 10:01:47	hodapp	well, I guess I use Shake and it has various monads that can lift to IO
2015-08-31 10:02:10	Cale	> groupBy ((==) `on` signum) [-2, -1, 2, 4, -1, 5]
2015-08-31 10:02:11	-->	Vyn (~Vyn@122.179.46.243) has joined #haskell
2015-08-31 10:02:12	lambdabot	 [[-2,-1],[2,4],[-1],[5]]
2015-08-31 10:03:08	safinaskar	Cale: wow! thanks a lot
2015-08-31 10:03:10	erisco	but is "lift" the right word
2015-08-31 10:03:19	erisco	or is it misleading
2015-08-31 10:03:24	erisco	are monads "up there"?
2015-08-31 10:03:33	hodapp	dunno
2015-08-31 10:03:46	hodapp	I always consider burritos as sitting on tables, next to each other
2015-08-31 10:03:49	Cale	hodapp: Wrong direction, you lift IO actions to produce Shake actions.
2015-08-31 10:03:55	<--	qz (~quetzal@li272-85.members.linode.com) has quit (Quit: WeeChat 1.4-dev)
2015-08-31 10:04:26	hodapp	s/lift to/lift from/
2015-08-31 10:04:26	-->	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-31 10:04:40	hodapp	prepositions are difficult in Mondays
2015-08-31 10:04:56	-->	cchalmers (~textual@cpc1-shep13-2-0-cust104.8-3.cable.virginm.net) has joined #haskell
2015-08-31 10:05:05	Cale	right :)
2015-08-31 10:05:12	<--	Khisanth (~Khisanth@50.14.244.111) has quit (Ping timeout: 264 seconds)
2015-08-31 10:05:17	-->	fsvehla (~fsvehla@h081217222140.dyn.cm.kabsi.at) has joined #haskell
2015-08-31 10:05:30	<--	mariusmarius (~mariusmar@2620:10d:c0a1:f80::6:607c) has quit (Quit: Leaving.)
2015-08-31 10:05:30	<--	merijn (~merijn@wcw-staff-145-18-164-191.wireless.uva.nl) has quit (Ping timeout: 250 seconds)
2015-08-31 10:06:29	-->	strburst (~allen@lawn-128-61-27-36.lawn.gatech.edu) has joined #haskell
2015-08-31 10:06:53	erisco	I am worried now of why the decodeUtf8 function looks so complicated
2015-08-31 10:06:58	-->	ThatOtherPerson_ (~ThatOther@unaffiliated/thatotherpersony) has joined #haskell
2015-08-31 10:07:01	erisco	when the Utf8 spec looks simple
2015-08-31 10:07:07	-->	Icewing (~Icewing@unaffiliated/icewing) has joined #haskell
2015-08-31 10:07:19	hodapp	Utf8 spec or UTF-8 spec?
2015-08-31 10:07:33	erisco	UTF-8
2015-08-31 10:07:46	<--	ysz (~ysz@84.52.98.75) has quit (Ping timeout: 246 seconds)
2015-08-31 10:08:12	-->	osa1__ (~omer@72.2.55.21) has joined #haskell
2015-08-31 10:08:28	hodapp	okay, wasn't sure if Utf8 was a type you were referring to or something
2015-08-31 10:08:41	hodapp	I never knew UTF-8 was that simple of a spec
2015-08-31 10:08:41	-->	dm3 (~dm3@78.60.230.119) has joined #haskell
2015-08-31 10:09:05	hodapp	of course most of my UTF woes were from having UTF-16 everywhere
2015-08-31 10:09:10	monochrom	which decodeUtf8 function?
2015-08-31 10:09:18	Cale	erisco: Heh, you've got me wondering now whether this fibrational-sort-of-language is really appropriate too now. Well, generally when we have some type B which is somehow similar to type A but with more structure in some way, we view B as "over" A, especially when there are canonical mappings in one direction or the other. This terminology comes from a setting where there's usually a canonical projection *downward* th
2015-08-31 10:09:19	Cale	ough, whereas in most of the cases we use it in Haskell, there's a canonical inclusion map going upward.
2015-08-31 10:09:33	<--	ThatOtherPerson (~ThatOther@unaffiliated/thatotherpersony) has quit (Ping timeout: 268 seconds)
2015-08-31 10:10:00	erisco	monochrom, the one true decodeUtf8 http://hackage.haskell.org/package/streaming-commons-0.1.12.1/docs/Data-Streaming-Text.html
2015-08-31 10:10:23	-->	codedmart (~codedmart@2601:681:4300:e468:29f6:f852:c774:337a) has joined #haskell
2015-08-31 10:10:32	-->	ldbrandy (~Adium@2620:10d:c090:200::3:855d) has joined #haskell
2015-08-31 10:11:05	erisco	Cale, my understanding of fiber can be summarized by an oat flakes box
2015-08-31 10:11:07	<--	deepfire (~user@31.44.93.25) has quit (Ping timeout: 246 seconds)
2015-08-31 10:11:15	monochrom	that is a really ambitious decoder. its complexity is due to its ambition, not due to decoding UTF-8.
2015-08-31 10:11:16	geekosaur	the complication there has less to dowith the utf-8 spec than it has to do with handling things split across buffers
2015-08-31 10:11:21	<--	twanvl (~twanvl@77.250.86.217) has quit (Read error: Connection reset by peer)
2015-08-31 10:11:25	-->	emilypi (~emily@2601:681:4301:237f:e51b:da74:7f63:64e) has joined #haskell
2015-08-31 10:11:40	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-31 10:12:04	<--	jinblack (~jinblack@ip184-187-174-107.sb.sd.cox.net) has quit (Remote host closed the connection)
2015-08-31 10:12:08	-->	Swizec (~swizec@199.21.86.210) has joined #haskell
2015-08-31 10:12:11	monochrom	FWIW I could write a variant of getByte that is no less complicated.
2015-08-31 10:12:19	<--	phyrex1an (~phyrex1an@2a02:fe0:c120:1310:dc3e:99eb:9b93:f4f5) has quit (Ping timeout: 256 seconds)
2015-08-31 10:12:43	-->	kmels (~kmels@186.64.110.122) has joined #haskell
2015-08-31 10:12:46	<--	ddellacosta (~ddellacos@softbank126015158235.bbtec.net) has quit (Ping timeout: 240 seconds)
2015-08-31 10:12:47	erisco	because... the bytestring is chunked? or what?
2015-08-31 10:13:06	erisco	what is the ambition
2015-08-31 10:13:36	<--	Gurkenglas (Gurkenglas@dslb-178-000-176-040.178.000.pools.vodafone-ip.de) has quit (Ping timeout: 264 seconds)
2015-08-31 10:13:44	monochrom	"streaming"
2015-08-31 10:13:51	Welkin	maybe because Text is represented as an Array of 16-bit values?
2015-08-31 10:14:06	 *	nshepperd thinks of lifting as giving things superpowers
2015-08-31 10:14:22	nshepperd	or at least, moving them to where the folks with superpowers live
2015-08-31 10:14:22	<--	Swizec (~swizec@199.21.86.210) has quit (Client Quit)
2015-08-31 10:14:51	erisco	also UTF-8 doesn't decode to Char does it
2015-08-31 10:14:59	erisco	otherwise what is this surrogate pair nonsense being mentioned
2015-08-31 10:15:06	<--	cestlavie (~cestlavie@224.186.187.81.in-addr.arpa) has quit (Ping timeout: 255 seconds)
2015-08-31 10:15:09	monochrom	look, if you take a look at attoparsec's "incremental parser", you see the same thing
2015-08-31 10:15:09	<--	jackalope (jackalope@gateway/vpn/mullvad/x-cggyuvlifxrdifqn) has quit (Ping timeout: 250 seconds)
2015-08-31 10:15:15	<--	xeno_ (~xeno@cm-84.208.195.196.getinternet.no) has quit (Read error: Connection reset by peer)
2015-08-31 10:15:16	-->	tennix (~ztennix@125.34.113.140) has joined #haskell
2015-08-31 10:15:16	<--	tennix (~ztennix@125.34.113.140) has quit (Changing host)
2015-08-31 10:15:16	-->	tennix (~ztennix@unaffiliated/tennix) has joined #haskell
2015-08-31 10:15:31	-->	drdanmaku (uid17782@gateway/web/irccloud.com/x-qjhcekmduitpyocp) has joined #haskell
2015-08-31 10:15:55	-->	xeno (~xeno@2a02:fe0:c211:12c1:6da7:f857:dc93:629f) has joined #haskell
2015-08-31 10:16:40	<--	chaosmasttter (~chaosmast@p4FC56064.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2015-08-31 10:17:06	geekosaur	it's going via Data.Text from the looks of it; that is UTF16 and must deal with surrogate pairs
2015-08-31 10:17:13	-->	Swizec (~swizec@199.21.86.210) has joined #haskell
2015-08-31 10:17:14	erisco	WTF-8
2015-08-31 10:17:15	-->	ramky (~ramky@117.192.252.236) has joined #haskell
2015-08-31 10:26:11	--	irc: disconnected from server
2015-08-31 10:26:37	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-08-31 10:26:37	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-31 10:26:37	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-31 10:26:37	--	Channel #haskell: 1513 nicks (1 op, 0 voices, 1512 normals)
2015-08-31 10:26:37	--	URL for #haskell: http://www.haskell.org/
2015-08-31 10:26:37	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-31 10:26:39	hodapp	blugh
2015-08-31 10:26:39	<--	lingxiao (~lingxiao@seas716.wireless-pennnet.upenn.edu) has quit
2015-08-31 10:29:30	hodapp	converting from WTF-8 or whatever to UTF-8 was a royal pain in the C++ I wrote at the last job
2015-08-31 10:29:30	<--	hefesto (~hefesto@201.122.196.61) has quit (Quit: Leaving)
2015-08-31 10:29:30	-->	caumeslasal (~Thunderbi@mar92-10-82-239-65-141.fbx.proxad.net) has joined #haskell
2015-08-31 10:29:30	hodapp	still have no idea why the devs insisted that our internal string type had to be some bastard variety of UTF-16
2015-08-31 10:29:30	<--	adam_hardkey_shi (~hardkey@147.127.160.10) has quit (Quit: Leaving.)
2015-08-31 10:29:30	erisco	so, the BOM does nothing, it is just tolerated
2015-08-31 10:29:30	-->	cognominal (~cognomina@87-231-91-9.rev.numericable.fr) has joined #haskell
2015-08-31 10:29:30	-->	gnataly (~steve@162-201-41-182.lightspeed.frokca.sbcglobal.net) has joined #haskell
2015-08-31 10:29:30	glguy	It indicates the encoding used for the rest of the file
2015-08-31 10:29:30	erisco	I am wondering how far you get by just using UTF-8 as per the spec
2015-08-31 10:29:30	<--	xplat (~james@67.205.253.166) has quit (Ping timeout: 250 seconds)
2015-08-31 10:29:30	<--	srenatus (uid322@gateway/web/irccloud.com/x-cissvtblfmmzevxl) has quit (Quit: Connection closed for inactivity)
2015-08-31 10:29:30	<--	deavmi (~atomic@105.210.213.210) has quit (Read error: Connection reset by peer)
2015-08-31 10:29:30	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 264 seconds)
2015-08-31 10:29:30	-->	phyrex1an (~phyrex1an@cm-84.208.142.101.getinternet.no) has joined #haskell
2015-08-31 10:29:30	-->	Sonolin (~michael@wsip-184-178-115-131.sd.sd.cox.net) has joined #haskell
2015-08-31 10:30:07	mauke	I normally use WTF-8 to refer to double-encoded UTF-8
2015-08-31 10:30:45	-->	dgpratt_ (~dpratt71@pool-72-65-106-70.ptldme.east.myfairpoint.net) has joined #haskell
2015-08-31 10:30:59	-->	xplat (~james@67.205.253.166) has joined #haskell
2015-08-31 10:31:01	<--	emilypi (~emily@2601:681:4301:237f:e51b:da74:7f63:64e) has quit (Ping timeout: 256 seconds)
2015-08-31 10:31:16	<--	ceryo (~ceryo@64.245.141.10) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-08-31 10:31:36	erisco	why did they need 10 for a continuation byte?
2015-08-31 10:31:45	erisco	you've already got the leading byte indicating how many follow
2015-08-31 10:31:50	<--	Luke (~luke@unaffiliated/luke) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-08-31 10:31:55	<--	fsvehla (~fsvehla@h081217222140.dyn.cm.kabsi.at) has quit (Quit: fsvehla)
2015-08-31 10:32:26	-->	bsummer4 (uid107416@gateway/web/irccloud.com/x-cdbmdwlaijxxrvmg) has joined #haskell
2015-08-31 10:32:58	<--	fabianvf (~fabianvf@216.30.185.217) has quit (Remote host closed the connection)
2015-08-31 10:32:58	<--	gnataly (~steve@162-201-41-182.lightspeed.frokca.sbcglobal.net) has quit (Ping timeout: 246 seconds)
2015-08-31 10:33:32	 *	hackagebot linearscan 0.10.1 - Linear scan register allocator, formally verified in Coq  https://hackage.haskell.org/package/linearscan-0.10.1 (JohnWiegley)
2015-08-31 10:33:34	 *	hackagebot linearscan-hoopl 0.10.1 - Makes it easy to use the linearscan register allocator with Hoopl  https://hackage.haskell.org/package/linearscan-hoopl-0.10.1 (JohnWiegley)
2015-08-31 10:34:00	<--	qubitnerd (~neutrino@unaffiliated/electron/x-8286743) has quit (Ping timeout: 264 seconds)
2015-08-31 10:34:13	-->	fsvehla (~fsvehla@h081217222140.dyn.cm.kabsi.at) has joined #haskell
2015-08-31 10:34:13	<--	dgpratt (~dpratt71@pool-72-73-103-250.ptldme.east.myfairpoint.net) has quit (Ping timeout: 246 seconds)
2015-08-31 10:34:19	Welkin	W is Double U
2015-08-31 10:34:20	<--	GLM (a1b5fd14@gateway/web/cgi-irc/kiwiirc.com/ip.161.181.253.20) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-08-31 10:34:22	nshepperd	in utf-8?
2015-08-31 10:34:27	Welkin	although it is really a Double V
2015-08-31 10:34:29	erisco	yes
2015-08-31 10:34:42	erisco	Welkin, maybe you'd enjoy French
2015-08-31 10:35:08	nshepperd	two reasons, they wanted to be fully compatible with ascii
2015-08-31 10:35:45	nshepperd	and also for the stream to be reorientable
2015-08-31 10:35:45	nshepperd	or whatever the term is
2015-08-31 10:36:02	erisco	okay, can you explain both of those please
2015-08-31 10:36:07	<--	mattyw (~mattyw@ip-64-134-197-91.public.wayport.net) has quit (Ping timeout: 246 seconds)
2015-08-31 10:36:18	nshepperd	so multi-bytes encodings have to start each byte with the high bit set
2015-08-31 10:36:33	-->	tennix (~ztennix@unaffiliated/tennix) has joined #haskell
2015-08-31 10:36:50	nshepperd	so that they never include an ascii byte by accident
2015-08-31 10:37:52	<--	DrAwesom_ (~DrAwesome@c-67-189-254-80.hsd1.ct.comcast.net) has quit (Ping timeout: 246 seconds)
2015-08-31 10:37:59	erisco	yes, okay
2015-08-31 10:38:00	<--	Paradisee (~quassel@2.239.28.120) has quit (Ping timeout: 252 seconds)
2015-08-31 10:38:07	erisco	so how does this get to the continuation code 10
2015-08-31 10:38:10	<--	osa1__ (~omer@72.2.55.21) has quit (Ping timeout: 240 seconds)
2015-08-31 10:38:18	-->	oish (~charlie@159.22.169.217.in-addr.arpa) has joined #haskell
2015-08-31 10:38:37	-->	DrAwesomeClaws (~DrAwesome@162.216.46.128) has joined #haskell
2015-08-31 10:39:36	nshepperd	it's 10xxxxxx instead of just 1xxxxxxx, so that someone starting in the middle of a utf-8 stream can reliably find the next character boundary
2015-08-31 10:39:46	<--	strburst (~allen@lawn-128-61-27-36.lawn.gatech.edu) has quit (Ping timeout: 268 seconds)
2015-08-31 10:40:46	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 244 seconds)
2015-08-31 10:40:56	nshepperd	a utf-8 character starts at either 11, in which it starts a multibyte sequence, or 0, in which case it's a single byte ascii char
2015-08-31 10:41:19	-->	Sho_1 (Sho_@gateway/vpn/mullvad/x-myncvhnqqqjdkata) has joined #haskell
2015-08-31 10:41:41	-->	Luke (~luke@unaffiliated/luke) has joined #haskell
2015-08-31 10:43:09	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-31 10:43:34	-->	skore_de (~skore@2a02:908:cf11:8fe0:609b:d04:828a:27e0) has joined #haskell
2015-08-31 10:43:41	-->	ceryo (~ceryo@64.245.141.10) has joined #haskell
2015-08-31 10:44:30	erisco	nshepperd, okay
2015-08-31 10:44:40	-->	noraintherun (~naren@67.70.23.117) has joined #haskell
2015-08-31 10:45:25	-->	tennix (~ztennix@unaffiliated/tennix) has joined #haskell
2015-08-31 10:45:43	<--	Jeanne-Kamikaze (~Jeanne-Ka@184.Red-88-9-37.dynamicIP.rima-tde.net) has quit (Quit: Leaving)
2015-08-31 10:45:45	-->	cestlavie (~cestlavie@224.186.187.81.in-addr.arpa) has joined #haskell
2015-08-31 10:46:02	<--	grizwako (~grizzly@inchoo4u.net) has quit (Read error: Connection reset by peer)
2015-08-31 10:46:21	-->	joco42_ (~joco42@dsl-hkibrasgw4-58c03a-80.dhcp.inet.fi) has joined #haskell
2015-08-31 10:46:32	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-31 10:47:02	-->	fabianvf (~fabianvf@216.30.185.217) has joined #haskell
2015-08-31 10:47:08	nshepperd	basically, there are three cases they need to signal for each byte, leading bitstring 0 is already taken, so the next shortest available are 10 and 11
2015-08-31 10:47:29	<--	browndawg (~browndawg@59.177.136.104) has quit (Quit: Leaving.)
2015-08-31 10:47:38	-->	GLM (a1b5fd14@gateway/web/cgi-irc/kiwiirc.com/ip.161.181.253.20) has joined #haskell
2015-08-31 10:48:35	<--	raichoo (~raichoo@mue-88-130-28-198.dsl.tropolys.de) has quit (Ping timeout: 256 seconds)
2015-08-31 10:49:03	noraintherun	\quit
2015-08-31 10:49:09	<--	noraintherun (~naren@67.70.23.117) has quit (Client Quit)
2015-08-31 10:49:58	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 246 seconds)
2015-08-31 10:50:10	<--	tulcod (~tulcod@unaffiliated/tulcod) has quit (Quit: Leaving)
2015-08-31 10:50:14	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-31 10:50:52	<--	SubZeroFX (~SubZeroFX@unaffiliated/subzerofx) has quit (Quit: Leaving)
2015-08-31 10:51:54	<--	oish (~charlie@159.22.169.217.in-addr.arpa) has quit (Read error: Connection reset by peer)
2015-08-31 10:54:00	-->	mariusmarius (~mariusmar@2620:10d:c0a1:f80::6:fd93) has joined #haskell
2015-08-31 10:54:32	-->	tennix (~ztennix@unaffiliated/tennix) has joined #haskell
2015-08-31 10:55:00	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Ping timeout: 264 seconds)
2015-08-31 10:55:29	<--	xeno (~xeno@2a02:fe0:c211:12c1:6da7:f857:dc93:629f) has quit (Read error: Connection reset by peer)
2015-08-31 10:55:47	-->	xeno (~xeno@2a02:fe0:c211:12c1:6da7:f857:dc93:629f) has joined #haskell
2015-08-31 10:57:28	erisco	and as for my first question, at least for proper utf-8, the mapping is unique
2015-08-31 10:57:40	erisco	by design
2015-08-31 10:58:07	-->	raichoo (~raichoo@mue-88-130-28-198.dsl.tropolys.de) has joined #haskell
2015-08-31 10:58:37	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-31 10:58:58	-->	shyardo (~textual@r233-pw-represagrande.ibys.com.br) has joined #haskell
2015-08-31 10:59:09	monochrom	what was your first question?
2015-08-31 10:59:22	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 260 seconds)
2015-08-31 10:59:26	erisco	whether the mapping was unique
2015-08-31 10:59:49	erisco	well, for whatever decodeUtf8 is doing
2015-08-31 10:59:53	erisco	and I don't know what it is doing
2015-08-31 11:00:01	erisco	certainly not UTF-8
2015-08-31 11:00:11	<--	mauke (~mauke@p3m/member/mauke) has quit (Ping timeout: 264 seconds)
2015-08-31 11:00:18	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-31 11:00:20	monochrom	you are looking at an incremental parser. have you seen an incremental parser before?
2015-08-31 11:00:36	erisco	no I am not looking for an incremental parser
2015-08-31 11:00:48	-->	larion (~larion@a83-162-181-111.adsl.xs4all.nl) has joined #haskell
2015-08-31 11:00:51	monochrom	ok, then don't use this library.
2015-08-31 11:00:58	erisco	I'm not
2015-08-31 11:01:04	erisco	I am using a lib that uses a lib that uses this
2015-08-31 11:01:06	<--	jeadre (~jeadre@li1421-113.members.linode.com) has quit (Remote host closed the connection)
2015-08-31 11:01:13	monochrom	there are a ton of libraries containing UTF-8 decoding, and most of them are not incremental
2015-08-31 11:01:15	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-31 11:01:20	-->	Paradisee (~quassel@2.239.28.120) has joined #haskell
2015-08-31 11:01:33	monochrom	contrary to what you said about "the one true"
2015-08-31 11:02:03	erisco	I was just referring to how my particular dependencies lead to it
2015-08-31 11:02:27	<--	ramky (~ramky@117.192.252.236) has quit (Remote host closed the connection)
2015-08-31 11:02:44	<--	nshepperd (~nshepperd@168.1.75.55) has quit (Ping timeout: 272 seconds)
2015-08-31 11:02:44	monochrom	ok. I think I will just say "my sympathy" and leave it at that.
2015-08-31 11:03:02	-->	jeadre (~jeadre@139.162.154.113) has joined #haskell
2015-08-31 11:03:17	erisco	coming from a bytestring
2015-08-31 11:03:23	erisco	I am assuming these are chunked in their lazy form
2015-08-31 11:03:24	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Ping timeout: 264 seconds)
2015-08-31 11:03:31	erisco	which means a character can be split over two chunks
2015-08-31 11:03:33	-->	cj3kim (~cj3kim@g2spf.ask.info) has joined #haskell
2015-08-31 11:03:46	<--	doomlord (~textual@host81-155-65-113.range81-155.btcentralplus.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-31 11:03:47	<--	cj3kim (~cj3kim@g2spf.ask.info) has quit (Changing host)
2015-08-31 11:03:47	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-31 11:03:54	ReinH	Why would that be a problem?
2015-08-31 11:04:05	ReinH	Bytestrings need to be decoded to be used as utf-whatever.
2015-08-31 11:04:20	erisco	there are at least two policies you could use
2015-08-31 11:04:32	ReinH	This decoding wouldn't be done chunk-by-chunk, but byte-by-byte, so chunk boundaries are irrelevant.
2015-08-31 13:29:01	--	irc: disconnected from server
2015-08-31 13:31:27	-->	RouxTheDay (~RouxTheDa@199.21.87.214) has joined #haskell
2015-08-31 13:31:27	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-31 13:31:27	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-31 13:31:27	--	Channel #haskell: 1499 nicks (1 op, 0 voices, 1498 normals)
2015-08-31 13:31:27	--	Notice(wilhelm.freenode.net): [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
2015-08-31 13:31:27	--	URL for #haskell: http://www.haskell.org/
2015-08-31 13:31:27	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-31 13:32:20	<--	pimlu (~pimlu@128.172.35.15) has quit (Ping timeout: 256 seconds)
2015-08-31 13:32:31	-->	jgt3 (~jgt@aeay147.neoplus.adsl.tpnet.pl) has joined #haskell
2015-08-31 13:32:33	-->	adek (~adek@199.201.64.129) has joined #haskell
2015-08-31 13:32:59	bitemyapp	ReinH: context?
2015-08-31 13:33:04	-->	umib0zu (~umib0zu@static-71-174-59-11.bstnma.fios.verizon.net) has joined #haskell
2015-08-31 13:33:13	ReinH	bitemyapp: the rest of the list
2015-08-31 13:33:18	monochrom	zipper?
2015-08-31 13:33:25	<--	petermw (~peter@cpc8-cmbg14-2-0-cust22.5-4.cable.virginm.net) has quit (Read error: Connection reset by peer)
2015-08-31 13:33:46	<--	emilypi (~emily@2601:681:4301:237f:e51b:da74:7f63:64e) has quit (Ping timeout: 264 seconds)
2015-08-31 13:33:49	-->	petermw (~peter@cpc8-cmbg14-2-0-cust22.5-4.cable.virginm.net) has joined #haskell
2015-08-31 13:33:50	bitemyapp	ReinH: does this include the cons cells that preceded it?
2015-08-31 13:34:09	ReinH	monochrom: iirc it's a function [a] -> [(a, [a])]
2015-08-31 13:34:10	bitemyapp	ReinH: (before :: [a], a, after :: [a]) or is it just a cons cell?
2015-08-31 13:34:25	glguy	Cale, please stick to using one /nick simultaneously ^_^
2015-08-31 13:34:28	bitemyapp	so it's a list of cons cells?
2015-08-31 13:34:31	monochrom	I remember now. only Cale knows its name :)
2015-08-31 13:34:54	ReinH	e.g. f [1,2,3] = [(1, [2,3]), (2, [1,3]), (3, [1,2])
2015-08-31 13:34:56	ReinH	]
2015-08-31 13:34:58	-->	mkster_ (~mkster@i577B51D0.versanet.de) has joined #haskell
2015-08-31 13:35:00	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-31 13:35:02	ReinH	I don't care about order
2015-08-31 13:35:08	bitemyapp	okay yeah, bags.
2015-08-31 13:35:09	ReinH	so just the derivative of a bag
2015-08-31 13:35:15	-->	foreignFunction (~ai@ip-4761.sunline.net.ua) has joined #haskell
2015-08-31 13:35:15	Cale	glguy: huh?
2015-08-31 13:35:34	ReinH	he had a nice function for this on the mailing list at one point but I can't find it
2015-08-31 13:35:38	<--	xeno (~xeno@2a02:fe0:c211:12c1:6da7:f857:dc93:629f) has quit (Read error: Connection reset by peer)
2015-08-31 13:35:45	bitemyapp	ReinH: picks
2015-08-31 13:35:56	Cale	ReinH: uhhh... separate?
2015-08-31 13:35:57	bitemyapp	ReinH: http://hackage.haskell.org/package/HaskellForMaths-0.4.8/docs/Math-Core-Utils.html#v:picks
2015-08-31 13:35:59	monochrom	I think Cale's function also preserves order. which doesn't hurt you.
2015-08-31 13:36:00	Cale	ReinH: or select?
2015-08-31 13:36:00	-->	xeno (~xeno@cm-84.208.195.196.getinternet.no) has joined #haskell
2015-08-31 13:36:04	ReinH	bitemyapp: heh I just found it https://mail.haskell.org/pipermail/libraries/2010-July/013842.html
2015-08-31 13:36:20	-->	Bor0 (~boro@unaffiliated/boro/x-000000001) has joined #haskell
2015-08-31 13:36:24	-->	grrz (~zrrg@103.225.100.51) has joined #haskell
2015-08-31 13:36:28	ReinH	monochrom: yes, it's extra information I don't care about :)
2015-08-31 13:36:29	monochrom	yeah, select.
2015-08-31 13:36:29	Cale	@let select [] = []; select (x:xs) = (x,xs) : [(y,x:ys) | (y,ys) <- select xs]
2015-08-31 13:36:32	lambdabot	 Defined.
2015-08-31 13:36:32	<--	edmondo1984 (5f6ecb1e@gateway/web/freenode/ip.95.110.203.30) has quit (Ping timeout: 246 seconds)
2015-08-31 13:36:37	ReinH	Cale: <3
2015-08-31 13:36:41	<--	Jackneill (~Jackneill@unaffiliated/jackneill) has quit (Ping timeout: 255 seconds)
2015-08-31 13:36:54	<--	jgt3 (~jgt@aeay147.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 246 seconds)
2015-08-31 13:36:57	<--	the_2nd (~the_2nd@2a02:8070:4381:3700::3) has quit (Quit: Leaving)
2015-08-31 13:37:15	-->	Erlkonig (~Erlkonig@i118-16-34-30.s41.a038.ap.plala.or.jp) has joined #haskell
2015-08-31 13:37:25	Cale	@let separate [] = []; separate (x:xs) = ([],x,xs) : [(x:us,v,vs) | (us,v,vs) <- separate xs]
2015-08-31 13:37:27	lambdabot	 Defined.
2015-08-31 13:37:41	Cale	> select [1,2,3]
2015-08-31 13:37:44	lambdabot	 [(1,[2,3]),(2,[1,3]),(3,[1,2])]
2015-08-31 13:37:47	Cale	> separate [1,2,3]
2015-08-31 13:37:49	lambdabot	 [([],1,[2,3]),([1],2,[3]),([1,2],3,[])]
2015-08-31 13:38:13	<--	cofo (uid86997@gateway/web/irccloud.com/x-rnghmuvnltozotuz) has quit (Quit: Connection closed for inactivity)
2015-08-31 13:38:23	<--	mkster (~mkster@i577B6D45.versanet.de) has quit (Ping timeout: 252 seconds)
2015-08-31 13:38:28	pantsman-	huh, I have this function written on my white board right now. I forget why.
2015-08-31 13:38:45	bitemyapp	pantsman-: it's written on your write board write now
2015-08-31 13:38:54	pantsman-	it's called "picks" on my board
2015-08-31 13:39:33	<--	gensym2 (~zrrg@103.225.100.51) has quit (Ping timeout: 250 seconds)
2015-08-31 13:39:33	<--	Guest38 (~textual@38.88.246.202) has quit (Read error: Connection reset by peer)
2015-08-31 13:39:52	<--	takle (~takle@195.82.198.146.dyn.plus.net) has quit (Remote host closed the connection)
2015-08-31 13:39:53	mauke	it's a write of passage
2015-08-31 13:40:04	<--	noam (~noam@213.57.247.238) has quit (Ping timeout: 244 seconds)
2015-08-31 13:40:17	<--	meoblast001 (~meoblast@cable-89-16-133-226.cust.telecolumbus.net) has quit (Quit: Leaving)
2015-08-31 13:40:30	<--	MorpheusB (~morpheusb@122.129.141.9) has quit (Read error: Connection reset by peer)
2015-08-31 13:40:38	-->	Guest38 (~textual@38.88.246.202) has joined #haskell
2015-08-31 13:41:27	<--	crobbins (~crobbins@2602:30a:c08e:19e0:49f0:a1cd:56bb:869f) has quit (Ping timeout: 246 seconds)
2015-08-31 13:41:39	<--	frerich (~frerich@kde/raabe) has quit (Remote host closed the connection)
2015-08-31 13:41:45	-->	APic (apic@apic.name) has joined #haskell
2015-08-31 13:41:58	<--	shesek (~shesek@77.125.95.25) has quit (Read error: Connection reset by peer)
2015-08-31 13:42:00	<--	doomlord (~textual@host81-155-65-113.range81-155.btcentralplus.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-08-31 13:42:03	-->	pimlu (~pimlu@128.172.35.15) has joined #haskell
2015-08-31 13:42:25	-->	giantoctopus (~giantocto@088156132137.dynamic-ww-4.vectranet.pl) has joined #haskell
2015-08-31 13:42:37	-->	takle (~takle@195.82.198.146.dyn.plus.net) has joined #haskell
2015-08-31 13:42:59	-->	crobbins (~crobbins@2602:30a:c08e:19e0:49f0:a1cd:56bb:869f) has joined #haskell
2015-08-31 13:43:39	<--	xcombelle (~xcombelle@AToulouse-657-1-1069-8.w90-50.abo.wanadoo.fr) has quit (Remote host closed the connection)
2015-08-31 13:44:06	-->	shesek (~shesek@77.125.95.25) has joined #haskell
2015-08-31 13:44:11	-->	doomlord (~textual@host81-155-65-113.range81-155.btcentralplus.com) has joined #haskell
2015-08-31 13:44:23	-->	Pokinawa_ (~Ezalor@cpc12-cmbg17-2-0-cust215.5-4.cable.virginm.net) has joined #haskell
2015-08-31 13:44:38	<--	umib0zu (~umib0zu@static-71-174-59-11.bstnma.fios.verizon.net) has quit (Quit: umib0zu)
2015-08-31 13:44:59	-->	ginah (~nahnah@50.248.81.66) has joined #haskell
2015-08-31 13:45:01	-->	michaelneale (~textual@c-67-188-83-68.hsd1.ca.comcast.net) has joined #haskell
2015-08-31 13:45:51	-->	umib0zu (~umib0zu@static-71-174-59-11.bstnma.fios.verizon.net) has joined #haskell
2015-08-31 13:46:40	--	irc: disconnected from server
2015-08-31 13:47:05	-->	RouxTheDay (~RouxTheDa@199.21.87.214) has joined #haskell
2015-08-31 13:47:05	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-31 13:47:05	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-31 13:47:06	--	Channel #haskell: 1501 nicks (1 op, 0 voices, 1500 normals)
2015-08-31 13:47:06	--	URL for #haskell: http://www.haskell.org/
2015-08-31 13:47:06	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-31 13:47:10	-->	juanpaucar (~juanpauca@181.39.194.178) has joined #haskell
2015-08-31 13:47:18	<--	marjory (~marjory@2607:fcc8:c783:cd00:1587:333d:248a:79a0) has quit (Ping timeout: 244 seconds)
2015-08-31 13:48:09	-->	bjobjo (~bjobjo@51.174.197.117) has joined #haskell
2015-08-31 13:48:41	-->	doodlehaus (~doodlehau@h69-128-47-52.mdsnwi.dedicated.static.tds.net) has joined #haskell
2015-08-31 13:48:48	<--	umib0zu (~umib0zu@static-71-174-59-11.bstnma.fios.verizon.net) has quit (Client Quit)
2015-08-31 13:49:01	<--	xenog (~xenog@46.7.118.40) has quit (Ping timeout: 252 seconds)
2015-08-31 13:49:18	-->	umib0zu (~umib0zu@static-71-174-59-11.bstnma.fios.verizon.net) has joined #haskell
2015-08-31 13:49:49	Welkin	like in a movie
2015-08-31 13:49:53	<--	michaelneale (~textual@c-67-188-83-68.hsd1.ca.comcast.net) has quit (Client Quit)
2015-08-31 13:49:55	Welkin	or L4D
2015-08-31 13:50:07	<--	ulfdoz (~mary@2.165.20.14) has quit (Ping timeout: 252 seconds)
2015-08-31 13:50:08	<--	umib0zu (~umib0zu@static-71-174-59-11.bstnma.fios.verizon.net) has quit (Client Quit)
2015-08-31 13:50:11	<--	Erlkonig (~Erlkonig@i118-16-34-30.s41.a038.ap.plala.or.jp) has quit (Ping timeout: 264 seconds)
2015-08-31 13:50:22	<--	Elish (~x@unaffiliated/elish) has quit (Read error: Connection reset by peer)
2015-08-31 13:51:14	-->	nyazdani (~nyazdani@72.2.55.21) has joined #haskell
2015-08-31 13:51:46	<--	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has quit (Ping timeout: 264 seconds)
2015-08-31 13:51:47	-->	dmiles_afk (dmiles@c-73-37-100-94.hsd1.wa.comcast.net) has joined #haskell
2015-08-31 13:52:01	<--	Slay_ (~Slay@89-69-89-60.dynamic.chello.pl) has quit (Quit: Leaving)
2015-08-31 13:52:27	-->	cads (~M@24-178-115-245.static.sghl.ga.charter.com) has joined #haskell
2015-08-31 13:52:47	<--	architek_ (~architek_@209.58.130.130) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-31 13:53:41	<--	nkhodyunya1 (~Adium@dnm.120.104.124.92.dsl.krasnet.ru) has quit (Quit: Leaving.)
2015-08-31 13:53:46	-->	Erwin-C64 (~kvirc@g123160.upc-g.chello.nl) has joined #haskell
2015-08-31 13:53:52	<--	juanpaucar (~juanpauca@181.39.194.178) has quit (Remote host closed the connection)
2015-08-31 13:53:56	 *	hackagebot b9 0.5.9 - A tool and library for building virtual machine images.  https://hackage.haskell.org/package/b9-0.5.9 (SvenHeyll)
2015-08-31 13:54:27	<--	caumeslasal (~Thunderbi@mar92-10-82-239-65-141.fbx.proxad.net) has quit (Quit: caumeslasal)
2015-08-31 13:54:46	<--	Wizek (~Wizek@catv-178-48-235-127.catv.broadband.hu) has quit (Ping timeout: 264 seconds)
2015-08-31 13:55:04	<--	giantoctopus (~giantocto@088156132137.dynamic-ww-4.vectranet.pl) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-08-31 13:55:28	ralu	@let ho 0 = (+); ho n = ( foldl1 ( ho (n-1)) .). (flip  genericReplicate)
2015-08-31 13:55:31	lambdabot	 Defined.
2015-08-31 13:55:47	ralu	ho 1 7 9
2015-08-31 13:56:02	ralu	> ho 1 2 5
2015-08-31 13:56:05	lambdabot	 10
2015-08-31 13:56:11	<--	rgr (~user@f054137064.adsl.alicedsl.de) has quit (Quit: ERC (IRC client for Emacs 24.5.50.2))
2015-08-31 13:56:13	ralu	> ho 1 3 5
2015-08-31 13:56:15	lambdabot	 15
2015-08-31 13:56:25	ralu	> ho 2 2 10
2015-08-31 13:56:26	-->	_ashbreeze_ (~mark@d2-216.rb2.clm.centurytel.net) has joined #haskell
2015-08-31 13:56:27	lambdabot	 1024
2015-08-31 13:56:30	ralu	> ho 2 2 100
2015-08-31 13:56:32	lambdabot	 1267650600228229401496703205376
2015-08-31 13:56:39	-->	yfeldblum (~yfeldblum@2620:10d:c090:200::3:52a) has joined #haskell
2015-08-31 13:57:16	ralu	ho 3 2 5
2015-08-31 13:57:24	ralu	> ho 3 2 5
2015-08-31 13:57:26	lambdabot	 65536
2015-08-31 13:57:51	-->	bread_pigeon (~bread_pig@190-21-40-126.baf.movistar.cl) has joined #haskell
2015-08-31 13:58:33	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-31 13:58:35	-->	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has joined #haskell
2015-08-31 13:59:07	-->	svat (~svat@unaffiliated/svat) has joined #haskell
2015-08-31 13:59:08	-->	ysz (~ysz@178.16.148.1) has joined #haskell
2015-08-31 14:00:17	svat	can I verify in ghci that one type is the same as another, e.g. that `String` and `[Char]` are the same?
2015-08-31 14:00:26	<--	danten (~danten@c83-254-134-4.bredband.comhem.se) has quit (Quit: Leaving)
2015-08-31 14:00:28	-->	tibbe (~tibbe@72.2.55.21) has joined #haskell
2015-08-31 14:00:43	<--	_ashbreeze_ (~mark@d2-216.rb2.clm.centurytel.net) has quit (Remote host closed the connection)
2015-08-31 14:00:58	mauke	:t (undefined :: String) :: [Char]
2015-08-31 14:01:00	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-08-31 14:01:00	lambdabot	[Char]
2015-08-31 14:01:02	Gurkenglas	@instances Plated
2015-08-31 14:01:05	<--	eran (~Eran@unaffiliated/eran) has quit (Quit: Leaving.)
2015-08-31 14:01:06	glguy	I came up with :t id :: String -> [Char]
2015-08-31 14:01:08	lambdabot	on the commandline: Warning:
2015-08-31 14:01:08	lambdabot	    -fglasgow-exts is deprecated: Use individual extensions instead
2015-08-31 14:01:08	lambdabot	 
2015-08-31 14:01:08	lambdabot	<no location info>: Warning:
2015-08-31 14:01:08	lambdabot	    -XGeneralizedNewtypeDeriving is not allowed in Safe Haskell; ignoring -XGeneralizedNewtypeDeriving
2015-08-31 14:01:10	lambdabot	[4 @more lines]
2015-08-31 14:01:14	<--	CMCDragonkai (~nobody@ec2-52-8-178-236.us-west-1.compute.amazonaws.com) has left #haskell
2015-08-31 14:01:22	mauke	:t (undefined :: String) :: Int
2015-08-31 14:01:24	lambdabot	    Couldn't match type ‘[Char]’ with ‘Int’
2015-08-31 14:01:24	lambdabot	    Expected type: Int
2015-08-31 14:01:24	lambdabot	      Actual type: String
2015-08-31 14:01:24	-->	CMCDragonkai (~nobody@ec2-52-8-178-236.us-west-1.compute.amazonaws.com) has joined #haskell
2015-08-31 14:01:39	<--	`^_^v (~nycs@gw.hq.meetup.com) has quit (Quit: This computer has gone to sleep)
2015-08-31 14:01:48	-->	nkartas__ (~nkartasho@93.92.200.191) has joined #haskell
2015-08-31 14:01:58	<--	nkartash_ (~nkartasho@93.92.200.191) has quit (Read error: Connection reset by peer)
2015-08-31 14:02:01	<--	shesek (~shesek@77.125.95.25) has quit (Read error: Connection reset by peer)
2015-08-31 14:02:15	svat	@mauke thanks! Nice trick of using “undefined” to generate a value for any type, should remember that…
2015-08-31 14:02:16	lambdabot	Unknown command, try @list
2015-08-31 14:02:26	svat	argh been a while since I used IRC :)
2015-08-31 14:02:32	<--	kognate (kognate@nat/ibm/x-xumsrgxxmdfnwwfd) has quit (Remote host closed the connection)
2015-08-31 14:02:33	-->	kadoban (~mud@unaffiliated/kadoban) has joined #haskell
2015-08-31 14:02:48	<--	pimlu (~pimlu@128.172.35.15) has quit (Ping timeout: 244 seconds)
2015-08-31 14:03:00	<--	cestlavie (~cestlavie@224.186.187.81.in-addr.arpa) has quit (Ping timeout: 265 seconds)
2015-08-31 14:03:04	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Ping timeout: 250 seconds)
2015-08-31 14:03:18	-->	cestlavie (~cestlavie@224.186.187.81.in-addr.arpa) has joined #haskell
2015-08-31 14:03:20	<--	MrScout (~MrScout@unaffiliated/mrscout) has quit (Remote host closed the connection)
2015-08-31 14:03:33	-->	ysz_ (~ysz@178.16.148.1) has joined #haskell
2015-08-31 14:03:37	<--	ysz (~ysz@178.16.148.1) has quit (Read error: Connection reset by peer)
2015-08-31 14:04:12	-->	shesek (~shesek@77.125.95.25) has joined #haskell
2015-08-31 14:04:38	<--	JagaJaga (~JagaJaga@78.25.121.156) has quit (Ping timeout: 260 seconds)
2015-08-31 14:04:41	<--	pantsman- (~pantsman@cpc12-haye16-2-0-cust45.haye.cable.virginm.net) has quit (Ping timeout: 250 seconds)
2015-08-31 14:04:45	<--	Akii (~Akii@HSI-KBW-046-005-253-086.hsi8.kabel-badenwuerttemberg.de) has quit (Quit: Tuturuuu~~)
2015-08-31 14:04:54	glguy	You have to be careful though, (undefined :: a) :: b  only says that a can instantiate into b, not that they are the same
2015-08-31 14:05:21	glguy	(undefined :: [a]) :: [Int]     vs    (undefined :: [Int]) :: [a]
2015-08-31 14:05:23	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Ping timeout: 244 seconds)
2015-08-31 14:05:32	<--	dsantiago (~dsantiago@cpe-104-175-220-187.socal.res.rr.com) has quit (Quit: Computer has gone to sleep.)
2015-08-31 14:05:46	<--	aarvar (~foewfoiew@50-47-105-139.evrt.wa.frontiernet.net) has left #haskell
2015-08-31 14:05:49	<--	conal (~textual@104.255.240.10) has quit (Quit: Computer has gone to sleep.)
2015-08-31 14:05:55	svat	glguy: ah, so your idea of using id seems more robust then
2015-08-31 14:05:56	<--	phyrex1an (~phyrex1an@cm-84.208.142.101.getinternet.no) has quit (Remote host closed the connection)
2015-08-31 14:06:06	lpaste_	putis pasted “ZMQ” at http://lpaste.net/139991
2015-08-31 14:06:08	glguy	well, I didn't say that example was better
2015-08-31 14:06:10	glguy	:)
2015-08-31 14:06:18	-->	phyrex1an (~phyrex1an@cm-84.208.142.101.getinternet.no) has joined #haskell
2015-08-31 14:06:21	<--	Jeanne-Kamikaze (~Jeanne-Ka@184.Red-88-9-37.dynamicIP.rima-tde.net) has quit (Read error: Connection reset by peer)
2015-08-31 14:06:27	<--	phyrex1an (~phyrex1an@cm-84.208.142.101.getinternet.no) has quit (Remote host closed the connection)
2015-08-31 14:06:33	-->	MrScout (~MrScout@unaffiliated/mrscout) has joined #haskell
2015-08-31 14:06:40	<--	fabianvf (~fabianvf@216.30.185.217) has quit (Remote host closed the connection)
2015-08-31 14:06:42	putis	could you tell me, how to type `foo' function?
2015-08-31 14:06:51	-->	phyrex1an (~phyrex1an@cm-84.208.142.101.getinternet.no) has joined #haskell
2015-08-31 14:06:57	<--	pt1 (~pt1@195.29.92.186) has quit (Remote host closed the connection)
2015-08-31 14:07:33	putis	I'm trying to do that whole this tay -_-
2015-08-31 14:08:55	mauke	:t runErrorT
2015-08-31 14:08:57	lambdabot	Not in scope: ‘runErrorT’
2015-08-31 14:08:57	 *	hackagebot dequeue 0.1.7 - A typeclass and an implementation for double-ended queues.  https://hackage.haskell.org/package/dequeue-0.1.7 (HenryBucklow)
2015-08-31 14:08:59	<--	lispy (~lispy@li343-23.members.linode.com) has quit (Quit: leaving)
2015-08-31 14:09:08	putis	System.ZMQ4.Monadic is in zeromq4-haskell package
2015-08-31 14:09:13	-->	FireFly (~firefly@firefly.xen.prgmr.com) has joined #haskell
2015-08-31 14:09:31	<--	slack1256 (~slack1256@190.21.5.150) has quit (Read error: Connection reset by peer)
2015-08-31 14:09:44	<--	BlockyNight (~jon@78.143.169.70) has quit (Ping timeout: 256 seconds)
2015-08-31 14:09:48	-->	jeltsch (~wolfgang@82.131.66.93.cable.starman.ee) has joined #haskell
2015-08-31 14:09:54	putis	https://hackage.haskell.org/package/mtl-2.2.1/docs/Control-Monad-Error.html#v:runErrorT
2015-08-31 14:10:02	-->	chreekat_ (~b@unaffiliated/chreekat) has joined #haskell
2015-08-31 14:10:02	-->	slack1256 (~slack1256@190-21-18-13.baf.movistar.cl) has joined #haskell
2015-08-31 14:10:09	mauke	needs more forall
2015-08-31 14:10:12	--	chreekat_ is now known as chreekat
2015-08-31 14:10:41	<--	laar (~lars@ip60-210-173-82.adsl2.static.versatel.nl) has quit (Remote host closed the connection)
2015-08-31 14:10:55	svat	glguy: looks like I can also use :t (id :: T -> T) x to um, “assert that x is of type T”
2015-08-31 14:11:22	<--	KarolisK (~karolis@78-60-68-107.static.zebra.lt) has quit (Ping timeout: 246 seconds)
2015-08-31 14:12:01	-->	path[l] (~vsi@199.201.64.132) has joined #haskell
2015-08-31 14:12:28	-->	conal (~textual@104.255.240.10) has joined #haskell
2015-08-31 14:12:40	mauke	:t let foo :: (forall s. ReaderT String (ST s) a) -> a; foo bar = runST (runReaderT bar "") in foo
2015-08-31 14:12:41	lambdabot	(forall s. ReaderT String (ST s) a) -> a
2015-08-31 14:12:46	mauke	ok, this types
2015-08-31 14:12:54	<--	chreekat (~b@unaffiliated/chreekat) has left #haskell
2015-08-31 14:12:56	mauke	maybe something analogous will work for runZMQ
2015-08-31 14:13:18	<--	t7 (~chatzilla@host109-157-13-173.range109-157.btcentralplus.com) has quit (Quit: ChatZilla 0.9.92 [Firefox 39.0.3/20150806191835])
2015-08-31 14:13:37	-->	t7 (~chatzilla@host109-157-13-173.range109-157.btcentralplus.com) has joined #haskell
2015-08-31 14:13:58	 *	hackagebot b9 0.5.10 - A tool and library for building virtual machine images.  https://hackage.haskell.org/package/b9-0.5.10 (SvenHeyll)
2015-08-31 14:16:03	--	irc: disconnected from server
2015-08-31 14:18:42	-->	RouxTheD1 (~RouxTheDa@199.21.87.214) has joined #haskell
2015-08-31 14:18:42	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-31 14:18:42	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-31 14:18:42	--	Channel #haskell: 1489 nicks (1 op, 0 voices, 1488 normals)
2015-08-31 14:18:42	<--	RouxTheDay (~RouxTheDa@199.21.87.214) has quit (Read error: Connection reset by peer)
2015-08-31 14:18:42	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-31 14:18:45	--	URL for #haskell: http://www.haskell.org/
2015-08-31 14:19:00	 *	hackagebot smtps-gmail 1.3.1 - Gmail SMTP Client  https://hackage.haskell.org/package/smtps-gmail-1.3.1 (EnzoHaussecker)
2015-08-31 14:19:29	<--	MrScout (~MrScout@unaffiliated/mrscout) has quit (Remote host closed the connection)
2015-08-31 14:19:39	<--	tibbe (~tibbe@72.2.55.21) has quit (Quit: tibbe)
2015-08-31 14:20:04	monochrom	but I should consider the orthogonal angle
2015-08-31 14:20:04	<--	marcus-aurelius (~quassel@p20030073AF0EA2521D11362D4B98DD73.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2015-08-31 14:20:09	-->	Lokathor (~Lokathor@75-167-147-83.bois.qwest.net) has joined #haskell
2015-08-31 14:20:12	monochrom	you need read "5" :: Int
2015-08-31 14:20:24	<--	shirt (~shirt@adsl-v01-3db14831dc15da1b.tau.ac.il) has quit (Quit: Leaving)
2015-08-31 14:20:28	<--	ralu (~ralu@188-230-233-174.dynamic.t-2.net) has quit (Quit: Leaving)
2015-08-31 14:20:32	<--	jgertm (~amontimur@46.128.43.80.dynamic.cablesurf.de) has quit (Ping timeout: 268 seconds)
2015-08-31 14:20:34	mauke	why not both? you need read "()" :: ()
2015-08-31 14:20:39	-->	mac10688 (~mac10688@c-69-180-251-120.hsd1.tn.comcast.net) has joined #haskell
2015-08-31 14:20:39	-->	shersh (bca24116@gateway/web/freenode/ip.188.162.65.22) has joined #haskell
2015-08-31 14:20:48	<--	newcomer (~newcomer@unaffiliated/newcomer) has quit (Quit: Leaving)
2015-08-31 14:20:49	monochrom	that would be too easy
2015-08-31 14:20:52	mauke	or how about this one: you need show "5" :: String
2015-08-31 14:21:00	<--	strburst (~allen@lawn-128-61-30-136.lawn.gatech.edu) has quit (Ping timeout: 246 seconds)
2015-08-31 14:21:21	-->	MrScout (~MrScout@unaffiliated/mrscout) has joined #haskell
2015-08-31 14:21:29	monochrom	I forgot that angle.
2015-08-31 14:21:41	<--	nyazdani (~nyazdani@72.2.55.21) has quit (Read error: Connection reset by peer)
2015-08-31 14:21:42	monochrom	no matter they say "lambda cube" rather than "lambda square"
2015-08-31 14:21:49	-->	lispy (~lispy@li343-23.members.linode.com) has joined #haskell
2015-08-31 14:21:55	<--	edsko (~edsko@46.7.106.187) has quit (Quit: My Mac Mini has gone to sleep. ZZZzzz…)
2015-08-31 14:22:08	-->	nyazdani (~nyazdani@72.2.55.21) has joined #haskell
2015-08-31 14:22:18	mauke	you need strtol("5", NULL, 10)
2015-08-31 14:22:25	<--	L8D (~L8D@216.201.168.18) has quit (Ping timeout: 240 seconds)
2015-08-31 14:22:48	<--	shesek (~shesek@77.125.95.25) has quit (Read error: Connection reset by peer)
2015-08-31 14:22:54	mauke	how many cuils are we at? probably still 0 or 1
2015-08-31 14:22:56	<--	lispy (~lispy@li343-23.members.linode.com) has quit (Client Quit)
2015-08-31 14:23:17	shersh	hello everyone! I'm implementing BinaryTree algorithm in Haskell (which is classic). And I want to define typeclass Set and two implementations: ordinary BInaryTree and AVLTree, so in my code i can just use Set and not think about concrete implementation. But i have encountered an error and I can't fix it. Here is small code snippet: http://pastie.org/10388216
2015-08-31 14:23:19	-->	lispy (~lispy@li343-23.members.linode.com) has joined #haskell
2015-08-31 14:23:26	monochrom	this sheds light on how to apply the anthropic principle to "why is our universe at least 3D?"  answer: so that we can talk about the lambda cube.
2015-08-31 14:23:27	shachaf	FOUR SIMULTANEOUS TYPE SYSTEMS IN A SINGLE ROTATION OF THE LAMBDA CUBE
2015-08-31 14:23:40	-->	lucasbrunialti (~lucasbrun@201.6.225.38) has joined #haskell
2015-08-31 14:23:42	programo	okay Thank you !
2015-08-31 14:23:44	-->	shesek (~shesek@77.125.95.25) has joined #haskell
2015-08-31 14:23:47	<--	Icewing (~Icewing@unaffiliated/icewing) has quit (Remote host closed the connection)
2015-08-31 14:23:56	<--	Bor0 (~boro@unaffiliated/boro/x-000000001) has quit (Quit: Leaving)
2015-08-31 14:24:09	<--	ysz_ (~ysz@178.16.148.1) has quit (Ping timeout: 240 seconds)
2015-08-31 14:24:14	<--	jackdare (~Andy@pool-71-179-230-29.bltmmd.fios.verizon.net) has quit (Ping timeout: 260 seconds)
2015-08-31 14:24:19	shersh	I can figure out why this error appears. But how can I achive my goals by simply modifying my code and not using type families?
2015-08-31 14:24:42	<--	clrnd (~alvarez@190.104.195.2) has quit (Quit: leaving)
2015-08-31 14:24:49	monochrom	you don't need type families.
2015-08-31 14:25:07	<--	cognominal (~cognomina@87-231-91-9.rev.numericable.fr) has quit (Quit: This computer has gone to sleep)
2015-08-31 14:25:18	t7	do you need to specify k ?
2015-08-31 14:25:19	mauke	fundeps
2015-08-31 14:25:24	shersh	monochrom: And how to fix this issue in simplest way?
2015-08-31 14:25:42	mauke	well, step 1 is multiparam typeclasses
2015-08-31 14:25:43	<--	cads (~M@24-178-115-245.static.sghl.ga.charter.com) has quit (Ping timeout: 265 seconds)
2015-08-31 14:25:48	shersh	t7: what do you mean by words "specify k"?
2015-08-31 14:26:01	<--	lucasbrunialti (~lucasbrun@201.6.225.38) has quit (Remote host closed the connection)
2015-08-31 14:26:16	t7	duno 
2015-08-31 14:26:17	--	You are now known as RouxTheDay
2015-08-31 14:26:20	t7	listen to the smart people
2015-08-31 14:26:22	-->	JagaJaga (~JagaJaga@109.205.252.205) has joined #haskell
2015-08-31 14:26:36	-->	twanvl (~twanvl@dhcp-077-250-086-217.chello.nl) has joined #haskell
2015-08-31 14:26:45	-->	ysz_ (~ysz@78.25.120.203) has joined #haskell
2015-08-31 14:27:14	-->	yyyyy_ (~yyyyy@201.30.227.53) has joined #haskell
2015-08-31 14:27:25	shersh	mauke: can I avoid using multiparam typeclasses? I need this example to be as simple is possible. Like in Java. Because it is trivial in java to define interface and some implementations
2015-08-31 14:27:40	<--	yyyyy_ (~yyyyy@201.30.227.53) has left #haskell
2015-08-31 14:27:49	<--	danthemyth (~danthemyt@c-73-132-137-77.hsd1.wv.comcast.net) has quit (Remote host closed the connection)
2015-08-31 14:27:57	monochrom	I see why you mention type families. you need either (multiple parameter type class and fundep) or (type family). you should eventually know both ways. I still suggest (multiple parameter type class and fundep) first.
2015-08-31 14:28:06	mauke	your interface claims 'find' can work with any type of key regardless of what the set is
2015-08-31 14:28:17	<--	biglama (~Day_dream@fon75-2-78-192-179-102.fbxo.proxad.net) has quit (Remote host closed the connection)
2015-08-31 14:28:27	mauke	that's simply not true
2015-08-31 14:28:27	<--	t7 (~chatzilla@host109-157-13-173.range109-157.btcentralplus.com) has quit (Read error: Connection reset by peer)
2015-08-31 14:28:43	Gurkenglas	shersh, http://pastie.org/10388233
2015-08-31 14:28:47	-->	t7 (~chatzilla@host109-157-13-173.range109-157.btcentralplus.com) has joined #haskell
2015-08-31 14:29:33	monochrom	nevermind. what Gurkenglas says.
2015-08-31 14:29:48	shersh	Gurkenglas: thanks! That was exactly what i need :)
2015-08-31 14:30:14	mauke	tradeoffs
2015-08-31 14:30:41	<--	left4dead420 (~edwin@71-80-164-28.dhcp.lnbh.ca.charter.com) has quit (Ping timeout: 250 seconds)
2015-08-31 14:31:22	<--	gnataly (~steve@162-201-41-182.lightspeed.frokca.sbcglobal.net) has quit (Ping timeout: 264 seconds)
2015-08-31 14:31:23	-->	cj3kim (~cj3kim@g2spf.ask.info) has joined #haskell
2015-08-31 14:31:23	<--	cj3kim (~cj3kim@g2spf.ask.info) has quit (Changing host)
2015-08-31 14:31:23	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-31 14:32:40	<--	jwm224_ (~My_user_n@c-73-174-21-132.hsd1.pa.comcast.net) has quit (Quit: WeeChat 1.1.1)
2015-08-31 14:32:53	Gurkenglas	shersh, why the t@?
2015-08-31 14:33:32	<--	shesek (~shesek@77.125.95.25) has quit (Read error: Connection reset by peer)
2015-08-31 14:33:48	<--	daishi (~me@ool-18bd77e0.dyn.optonline.net) has quit (Remote host closed the connection)
2015-08-31 14:34:33	-->	lucasbrunialti (~lucasbrun@201.6.225.38) has joined #haskell
2015-08-31 20:33:03	--	irc: disconnected from server
2015-08-31 20:34:15	-->	RouxTheDay (~RouxTheDa@142-254-29-72.dsl.dynamic.fusionbroadband.com) has joined #haskell
2015-08-31 20:34:15	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-31 20:34:15	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-31 20:34:15	--	Channel #haskell: 1422 nicks (1 op, 0 voices, 1421 normals)
2015-08-31 20:34:15	--	URL for #haskell: http://www.haskell.org/
2015-08-31 20:34:16	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-31 20:34:17	cads	But can we form (f (s + t) -> (s + t))?
2015-08-31 20:34:26	htebalaka	(+) ~ Either?
2015-08-31 20:34:26	<--	dgpratt_ (~dpratt71@pool-72-65-106-70.ptldme.east.myfairpoint.net) has quit (Ping timeout: 240 seconds)
2015-08-31 20:34:34	cads	I think so
2015-08-31 20:34:55	cads	yes, it is
2015-08-31 20:35:00	cads	left and right
2015-08-31 20:35:13	<--	felixsch_ (~felixsch@p548A5AF8.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2015-08-31 20:35:19	htebalaka	hmm... i'm not sure
2015-08-31 20:35:49	<--	trism (~jconti@unaffiliated/trism) has quit (Remote host closed the connection)
2015-08-31 20:35:54	<--	Algebr (~user@38.99.37.132) has quit (Remote host closed the connection)
2015-08-31 20:36:24	<--	chreekat (~b@unaffiliated/chreekat) has quit (Ping timeout: 252 seconds)
2015-08-31 20:36:37	htebalaka	i was wondering about an alternative instance. maybe that type would arise from it?
2015-08-31 20:36:49	cads	yeah, suppose we have a function [int] -> int,  and a function string -> char. It is not clear how to define a function either [int] string -> either int char.
2015-08-31 20:37:07	cads	ew.
2015-08-31 20:37:45	<--	ellinokon (~hkon_@178.62.20.60) has quit (Ping timeout: 250 seconds)
2015-08-31 20:37:52	<--	Erlkonig (~Erlkonig@i118-16-34-30.s41.a038.ap.plala.or.jp) has quit (Ping timeout: 250 seconds)
2015-08-31 20:37:58	glguy_	That's just casing on the Either applying the right function
2015-08-31 20:38:00	cads	at best it would have to separate the sublist of the input that is all int or all string, and then apply one of the existing functions.
2015-08-31 20:38:13	glguy_	And putting the result back in Either
2015-08-31 20:38:25	cads	err
2015-08-31 20:38:29	-->	hamishmack (~hamishmac@209-82-80-116.dedicated.allstream.net) has joined #haskell
2015-08-31 20:40:45	htebalaka	wouldn't it be [Either Int Char] -> Either Int Char
2015-08-31 20:40:45	cads	right
2015-08-31 20:40:45	cads	I am sorry
2015-08-31 20:40:45	htebalaka	though that's even worse
2015-08-31 20:40:45	cads	lol
2015-08-31 20:40:45	<--	i-amd3 (~i_amd3@125x102x70x118.ap125.ftth.ucom.ne.jp) has quit (Remote host closed the connection)
2015-08-31 20:40:45	htebalaka	i'm thinking maybe it'd be easier avoiding []. it might be possible by relying on an instance that [] lacks
2015-08-31 20:40:45	htebalaka	though i can't think of which
2015-08-31 20:40:45	cads	it's just my standard example of a functor :) 
2015-08-31 20:40:45	-->	emilypi (~emily@2601:681:4301:237f:e51b:da74:7f63:64e) has joined #haskell
2015-08-31 20:40:45	<--	shesek (~shesek@77.125.95.25) has quit (Read error: Connection reset by peer)
2015-08-31 20:41:10	cads	so your applicative just zips together two f a algerbas into an f (a,a) algebra?
2015-08-31 20:41:18	htebalaka	pretty much
2015-08-31 20:41:27	-->	shesek (~shesek@77.125.95.25) has joined #haskell
2015-08-31 20:41:31	cads	cool
2015-08-31 20:41:42	cads	does that let it do any cool applicative stuff?
2015-08-31 20:41:54	cads	(I don't know what cool applicative stuff exists :D)
2015-08-31 20:42:10	htebalaka	i have an applicative instance, though i don't have any cool examples that make use of it yet
2015-08-31 20:42:24	-->	jefus (~jefus@ip68-14-11-14.ri.ri.cox.net) has joined #haskell
2015-08-31 20:42:56	-->	watabou (~watabou@unaffiliated/watabou) has joined #haskell
2015-08-31 20:43:16	cads	I wonder if I can work out a coherent notion of a homomorphism between fa algebras 
2015-08-31 20:43:54	-->	jinfiesto (~textual@66.214.210.70) has joined #haskell
2015-08-31 20:43:58	-->	lethjakman (~lethjakma@71.56.221.51) has joined #haskell
2015-08-31 20:43:59	htebalaka	i've got some code where i'm folding up some Cofree comonads (Fix (Const a :*: f) ~ Cofree f a essentially), where i need to annotate an AST multiple times, so the idea of zipping algebras seemed worth exploring
2015-08-31 20:44:12	htebalaka	the annotations are the "Const a"s
2015-08-31 20:44:23	<--	shesek (~shesek@77.125.95.25) has quit (Read error: Connection reset by peer)
2015-08-31 20:44:44	<--	yfeldblum (~yfeldblum@2620:10d:c090:200::3:52a) has quit (Remote host closed the connection)
2015-08-31 20:45:00	cads	oh this is cool
2015-08-31 20:45:42	-->	enaqx (~enaqx@188.163.69.11) has joined #haskell
2015-08-31 20:45:58	cads	I figured out how to define a morphism of f a algebras
2015-08-31 20:46:18	htebalaka	i don't think any of this is strictly new. the foldl library does the same idea, though f algebras would correspond more closely to right folds
2015-08-31 20:46:35	htebalaka	though the use of the existential is taken from it
2015-08-31 20:46:39	htebalaka	how?
2015-08-31 20:46:44	-->	shesek (~shesek@77.125.95.25) has joined #haskell
2015-08-31 20:46:45	<--	enaqx (~enaqx@188.163.69.11) has quit (Remote host closed the connection)
2015-08-31 20:50:30	--	irc: disconnected from server
2015-08-31 20:50:59	-->	RouxTheDay (~RouxTheDa@142-254-29-72.dsl.dynamic.fusionbroadband.com) has joined #haskell
2015-08-31 20:50:59	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-08-31 20:50:59	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-08-31 20:50:59	--	Channel #haskell: 1416 nicks (1 op, 0 voices, 1415 normals)
2015-08-31 20:50:59	--	URL for #haskell: http://www.haskell.org/
2015-08-31 20:50:59	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-08-31 20:51:09	cads	I think we also need the morphisms to be a homomorphism of the ordinary F algebras f(s) -> s, and f(t) -> t
2015-08-31 20:51:15	sedert	I have to childsit in approx 7 hours and all I want to do is read documentation. Tonight was not the night to learn Haskell and I'm going do be bothered until I return.
2015-08-31 20:51:15	htebalaka	is "f(s) = f s -> s"
2015-08-31 20:51:24	-->	vlatkoB (~IRC_clien@unaffiliated/vlatkob) has joined #haskell
2015-08-31 20:51:25	-->	blade (~blade@119.61.4.75) has joined #haskell
2015-08-31 20:51:25	cads	yes
2015-08-31 20:51:34	sedert	Thanks guys, night.
2015-08-31 20:51:44	-->	Swizec (~swizec@c-67-164-98-169.hsd1.ca.comcast.net) has joined #haskell
2015-08-31 20:51:46	-->	cosmicexplorer (~user@129.59.122.10) has joined #haskell
2015-08-31 20:51:48	cads	in that we also have  f(s) -> s -> t = f(s) -> f(t) -> t
2015-08-31 20:51:49	--	blade is now known as Guest60867
2015-08-31 20:52:24	cads	This might be necessary to allow morphisms to compose properly, but I will check
2015-08-31 20:52:49	htebalaka	i really need to bite the bullet and work through maclane. i will freely admit this is difficult to follow
2015-08-31 20:52:53	<--	sedert (~androirc@162.243.162.119) has quit (Quit: AndroIRC - Android IRC Client ( http://www.androirc.com ))
2015-08-31 20:53:07	cads	it would be easier if I could show you the diagrams
2015-08-31 20:53:31	cads	true, or if you could already see the diagrams in your head :)
2015-08-31 20:54:11	htebalaka	it makes me happy regardless that someone else thinks there's stuff worth looking at here
2015-08-31 20:54:32	<--	juliohm (~julio@unaffiliated/juliohm) has quit (Quit: Leaving)
2015-08-31 20:54:49	cads	I have a feeling that what you are looking at turns out to be a standard way of extending or specializing the concept of the ordinary f algebra
2015-08-31 20:55:34	htebalaka	kind of wondering what type would make sense for paramorphisms. data Para f a = forall s. Para (f (s, Fix f) -> s) (s -> a) seems unsatisfying
2015-08-31 20:56:04	cads	like an f a algebra is centered at some type s, and we see its results in a through a view of type s -> a
2015-08-31 20:56:46	-->	sailorsw_ (~sailorswi@c-50-156-105-171.hsd1.ca.comcast.net) has joined #haskell
2015-08-31 20:56:50	cads	like some remotely viewed functor operation
2015-08-31 20:56:52	htebalaka	as does reconstructing the datatype with the fold
2015-08-31 20:57:11	-->	Stratege (~Stratege@unaffiliated/stratege) has joined #haskell
2015-08-31 20:57:27	-->	NeverDie (~NeverDie@cpe-184-152-22-98.nyc.res.rr.com) has joined #haskell
2015-08-31 20:57:49	-->	nkartash_ (~nkartasho@93.92.200.191) has joined #haskell
2015-08-31 20:58:02	-->	vlatkoB_ (~IRC_clien@unaffiliated/vlatkob) has joined #haskell
2015-08-31 20:58:03	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-31 20:58:54	-->	startling (~startling@75-101-102-4.dsl.static.fusionbroadband.com) has joined #haskell
2015-08-31 20:58:55	htebalaka	i'm not actually using Fix, since i want a generic functor instance (which means i need data PFix f a = PFix (f a (PFix f a))), and fixed points of bifunctors, so i'd like a formulation that avoids needing to specify Fix or PFix in the type
2015-08-31 20:59:42	 *	hackagebot ig 0.5 - Bindings to Instagram's API.  https://hackage.haskell.org/package/ig-0.5 (cdepillabout)
2015-08-31 20:59:45	<--	jeadre (~jeadre@li1421-113.members.linode.com) has quit (Ping timeout: 244 seconds)
2015-08-31 20:59:45	<--	nkaretnikov (~nikita@unaffiliated/nkar) has quit (Ping timeout: 244 seconds)
2015-08-31 20:59:45	<--	fabjan (fabjan@Tricholoma.Update.UU.SE) has quit (Ping timeout: 244 seconds)
2015-08-31 20:59:45	<--	zyla (~zyla@185.56.175.154) has quit (Ping timeout: 244 seconds)
2015-08-31 20:59:45	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-08-31 20:59:46	-->	Laserbear (~Laserbear@c-73-223-160-142.hsd1.ca.comcast.net) has joined #haskell
2015-08-31 20:59:54	-->	fabjan (fabjan@Tricholoma.Update.UU.SE) has joined #haskell
2015-08-31 21:00:16	<--	nkartas__ (~nkartasho@93.92.200.191) has quit (Ping timeout: 244 seconds)
2015-08-31 21:00:16	<--	schlumpi (~schlumpi@fob.spline.inf.fu-berlin.de) has quit (Ping timeout: 244 seconds)
2015-08-31 21:00:25	<--	sailorswift (~sailorswi@c-50-156-105-171.hsd1.ca.comcast.net) has quit (Ping timeout: 264 seconds)
2015-08-31 21:01:10	<--	shesek (~shesek@77.125.95.25) has quit (Read error: Connection reset by peer)
2015-08-31 21:01:12	<--	path[l] (~vsi@199.201.64.133) has quit (Quit: path[l])
2015-08-31 21:01:17	<--	lucasbrunialti (~lucasbrun@179.177.233.136) has quit (Remote host closed the connection)
2015-08-31 21:01:19	cads	htebalaka: if it makes you feel any better, I have a terrible time interpreting anything with more than 0.5 instances of "Fix", on average
2015-08-31 21:01:28	-->	schlumpi (~schlumpi@fob.spline.inf.fu-berlin.de) has joined #haskell
2015-08-31 21:01:42	-->	zyla (~zyla@185.56.175.154) has joined #haskell
2015-08-31 21:01:58	-->	nkaretnikov (~nikita@unaffiliated/nkar) has joined #haskell
2015-08-31 21:02:04	htebalaka	pattern synonyms make it more handy to work with i'm hoping
2015-08-31 21:02:29	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-08-31 21:02:31	<--	vlatkoB (~IRC_clien@unaffiliated/vlatkob) has quit (Ping timeout: 272 seconds)
2015-08-31 21:02:43	-->	shesek (~shesek@77.125.95.25) has joined #haskell
2015-08-31 21:02:43	<--	shesek (~shesek@77.125.95.25) has quit (Read error: Connection reset by peer)
2015-08-31 21:02:48	<--	NeverDie (~NeverDie@cpe-184-152-22-98.nyc.res.rr.com) has quit (Ping timeout: 252 seconds)
2015-08-31 21:03:00	-->	lucasbrunialti (~lucasbrun@179.177.233.136) has joined #haskell
2015-08-31 21:03:20	breadmonster	I just realized you can make list a Num instance.
2015-08-31 21:03:31	breadmonster	What other typeclass abuse examples exist?
2015-08-31 21:04:01	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 255 seconds)
2015-08-31 21:04:15	htebalaka	breadmonster: peano ints, or "instance (Num a) => Num [a]"?
2015-08-31 21:05:47	--	irc: disconnected from server
2015-09-01 08:39:43	-->	RouxTheDay (~RouxTheDa@50-1-125-104.dsl.dynamic.fusionbroadband.com) has joined #haskell
2015-09-01 08:39:43	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-09-01 08:39:43	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:26
2015-09-01 08:39:43	--	Channel #haskell: 1417 nicks (1 op, 0 voices, 1416 normals)
2015-09-01 08:39:43	--	URL for #haskell: http://www.haskell.org/
2015-09-01 08:39:43	<--	sinopeus_ (~sinopeus@ssh2.ulyssis.student.kuleuven.be) has quit (Ping timeout: 246 seconds)
2015-09-01 08:39:43	-->	nikki93 (~nikki93@2601:645:4100:2590:b539:38a0:4ad3:c2f7) has joined #haskell
2015-09-01 08:45:01	--	irc: disconnected from server
2015-09-01 08:45:25	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-09-01 08:45:25	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-09-01 08:45:25	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-09-01 08:45:25	--	Channel #haskell: 1502 nicks (1 op, 0 voices, 1501 normals)
2015-09-01 08:45:25	--	URL for #haskell: http://www.haskell.org/
2015-09-01 08:45:26	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-09-01 08:45:26	TheCrafter	Is there a way to create zip,rar or 7zip archives in haskell?
2015-09-01 08:45:30	<--	strburst (~allen@128.61.19.35) has quit (Ping timeout: 272 seconds)
2015-09-01 08:45:45	-->	M6dEEp (~M6dEEp@66.210.200.130) has joined #haskell
2015-09-01 08:45:49	Intolerable	:t reallyGenericLength
2015-09-01 08:45:50	lambdabot	Not in scope: ‘reallyGenericLength’
2015-09-01 08:45:54	-->	phoenixg (~phoenix@116.228.208.114) has joined #haskell
2015-09-01 08:46:07	Intolerable	@hackage zip-archive
2015-09-01 08:46:07	lambdabot	http://hackage.haskell.org/package/zip-archive
2015-09-01 08:46:42	<--	slack1256 (~slack1256@190-21-18-13.baf.movistar.cl) has quit (Quit: Konversation terminated!)
2015-09-01 08:47:15	TheCrafter	Intolerable, thanks. I feel stupid I miseed that -.- I should've searched better.
2015-09-01 08:47:43	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-09-01 08:47:51	clrnd	@let genericGenericLenght = foldr (\x y -> y + 1) 0
2015-09-01 08:47:53	lambdabot	 Defined.
2015-09-01 08:48:02	clrnd	:t genericGenericLenght
2015-09-01 08:48:03	 *	hackagebot stackage-sandbox 0.1.6 - Work with shared stackage sandboxes  https://hackage.haskell.org/package/stackage-sandbox-0.1.6 (DanBurton)
2015-09-01 08:48:04	lambdabot	(Num b, Foldable t) => t a -> b
2015-09-01 08:48:05	 *	hackagebot Folly 0.1.5.0 - A first order logic library in Haskell  https://hackage.haskell.org/package/Folly-0.1.5.0 (dillonhuff)
2015-09-01 08:48:14	TheCrafter	:t genericLength
2015-09-01 08:48:16	lambdabot	Num i => [a] -> i
2015-09-01 08:48:25	Intolerable	> reallyGenericLenght [1,2,3] :: Float
2015-09-01 08:48:27	lambdabot	 Not in scope: ‘reallyGenericLenght’
2015-09-01 08:48:33	Intolerable	> genericGenericLenght [1,2,3] :: Float
2015-09-01 08:48:36	lambdabot	 3.0
2015-09-01 08:48:39	-->	fractalcat (~sio@124-171-21-198.dyn.iinet.net.au) has joined #haskell
2015-09-01 08:48:42	-->	mostalive (~mostalive@host86-182-25-240.range86-182.btcentralplus.com) has joined #haskell
2015-09-01 08:48:52	Intolerable	really handy for when i want the square root of a list
2015-09-01 08:49:11	<--	fabianvf (~fabianvf@216.30.185.217) has quit (Remote host closed the connection)
2015-09-01 08:49:16	-->	dkat (~user@64.72.83.16) has joined #haskell
2015-09-01 08:49:29	clrnd	> genericGenericLenght (M.fromList [(1, "a"),(2,"b")]) :: Int
2015-09-01 08:49:32	lambdabot	 2
2015-09-01 08:49:40	Ankhers	@let showLenght = length . show
2015-09-01 08:49:43	lambdabot	 Defined.
2015-09-01 08:49:52	zipper	geekosaur: Using arch :)
2015-09-01 08:50:01	 *	clrnd should get back to work
2015-09-01 08:50:04	Intolerable	@let reallyGenericLength = foldr (const (+1) 0
2015-09-01 08:50:04	lambdabot	 Parse failed: Parse error: EOF
2015-09-01 08:50:06	<--	phoenixg (~phoenix@116.228.208.114) has quit (Ping timeout: 240 seconds)
2015-09-01 08:50:10	Intolerable	@let reallyGenericLength = foldr (const (+1)) 0
2015-09-01 08:50:14	geekosaur	ok you want to read that wiki page I pointed to, then. special attention to the remark about systemd
2015-09-01 08:50:14	lambdabot	 Defined.
2015-09-01 08:50:30	-->	Iskarlar (~Iskarlar@D9641F32.static.ziggozakelijk.nl) has joined #haskell
2015-09-01 08:50:33	<--	renegade_ (~renegade@business-86-101-239-53.business.broadband.hu) has quit (Quit: Bye)
2015-09-01 08:50:40	Intolerable	@let reallyGenericLength = foldr (const (+1)) 0; reallyGenericLength :: (Foldable t, Integral b) => t a -> b
2015-09-01 08:50:41	lambdabot	 .L.hs:155:1:
2015-09-01 08:50:41	lambdabot	     Multiple declarations of ‘reallyGenericLength’
2015-09-01 08:50:41	lambdabot	     Declared at: .L.hs:154:1
2015-09-01 08:50:46	Intolerable	@undefine
2015-09-01 08:50:46	lambdabot	Undefined.
2015-09-01 08:50:48	Ankhers	> showLenght [1,2,3]
2015-09-01 08:50:49	Intolerable	@let reallyGenericLength = foldr (const (+1)) 0; reallyGenericLength :: (Foldable t, Integral b) => t a -> b
2015-09-01 08:50:50	<--	kognate_ (kognate@nat/ibm/x-kbcomdgkhbgxagze) has quit (Remote host closed the connection)
2015-09-01 08:50:50	lambdabot	 Not in scope: ‘showLenght’
2015-09-01 08:50:51	lambdabot	 Defined.
2015-09-01 08:50:56	-->	dosboot_ (~chatzilla@c-174-53-152-116.hsd1.mn.comcast.net) has joined #haskell
2015-09-01 08:51:02	Intolerable	> reallyGenericLength [1,2,3,4]
2015-09-01 08:51:05	lambdabot	 4
2015-09-01 08:51:07	<--	dosboot (~chatzilla@c-174-53-152-116.hsd1.mn.comcast.net) has quit (Ping timeout: 265 seconds)
2015-09-01 08:51:15	Ankhers	> showLenght [1,2,3]
2015-09-01 08:51:17	lambdabot	 Not in scope: ‘showLenght’
2015-09-01 08:51:21	--	dosboot_ is now known as dosboot
2015-09-01 08:51:23	Intolerable	(i undefined it)
2015-09-01 08:51:29	Ankhers	@let showLenght = length . show
2015-09-01 08:51:32	lambdabot	 Defined.
2015-09-01 08:51:33	-->	kognate (kognate@nat/ibm/x-jqhydwxxxcbplbto) has joined #haskell
2015-09-01 08:51:34	Ankhers	> showLenght [1,2,3]
2015-09-01 08:51:36	lambdabot	 7
2015-09-01 08:51:57	zipper	geekosaur: WOW this is painful.
2015-09-01 08:52:42	Jello_Raptor	Is there's any notion of monad transformers with multiple children? something like "FooT m mt" that threads the base monad and the child monad transformer through the computation in different ways?  
2015-09-01 08:53:30	<--	jomg (~jomg@ip5f5ad5bc.dynamic.kabel-deutschland.de) has quit (Ping timeout: 240 seconds)
2015-09-01 08:53:35	<--	darkdragon (~user@106.216.153.142) has quit (Ping timeout: 264 seconds)
2015-09-01 08:53:51	<--	dkat (~user@64.72.83.16) has left #haskell
2015-09-01 08:54:13	clrnd	hopefully no
2015-09-01 08:54:17	-->	umib0zu (~umib0zu@static-71-174-59-11.bstnma.fios.verizon.net) has joined #haskell
2015-09-01 08:55:54	-->	mada (~mariano@181.170.72.150) has joined #haskell
2015-09-01 08:56:08	<--	krakrjak (~krakrjak@xvm-103-198.ghst.net) has quit (Ping timeout: 250 seconds)
2015-09-01 08:56:10	merijn	Jello_Raptor: I don't see how that could possibly make sense?
2015-09-01 08:56:34	-->	obadz- (~obadz@unaffiliated/obadz) has joined #haskell
2015-09-01 08:56:49	<--	cleamoon_ (~cleamoon@2001:6b0:1:1041:c8f3:9719:aaed:2dc5) has quit (Ping timeout: 246 seconds)
2015-09-01 08:56:50	-->	krakrjak (~krakrjak@xvm-103-198.ghst.net) has joined #haskell
2015-09-01 08:56:54	-->	tibbe (~tibbe@72.2.55.21) has joined #haskell
2015-09-01 08:57:02	-->	razvanc87 (~razvanc87@79.97.80.96) has joined #haskell
2015-09-01 08:57:10	<--	sagittarian (~sagittari@213.57.21.122) has quit (Ping timeout: 240 seconds)
2015-09-01 08:57:18	zipper	geekosaur: Doesn't seem to be the swap per se. I increaed it to 10G and it still failed with that disk full issue.
2015-09-01 08:57:55	<--	obadz (~obadz@unaffiliated/obadz) has quit (Ping timeout: 244 seconds)
2015-09-01 08:58:04	 *	hackagebot Folly 0.1.5.1 - A first order logic library in Haskell  https://hackage.haskell.org/package/Folly-0.1.5.1 (dillonhuff)
2015-09-01 08:58:06	 *	hackagebot Folly 0.1.5.2 - A first order logic library in Haskell  https://hackage.haskell.org/package/Folly-0.1.5.2 (dillonhuff)
2015-09-01 08:58:08	-->	marsam (~marsam@unaffiliated/marsam) has joined #haskell
2015-09-01 08:58:14	<--	cofo (uid86997@gateway/web/irccloud.com/x-axhlgejesgkelxan) has quit (Quit: Connection closed for inactivity)
2015-09-01 08:58:45	-->	tabemann (~travisb@172-13-49-137.lightspeed.milwwi.sbcglobal.net) has joined #haskell
2015-09-01 08:58:50	-->	chaosmasttter (~chaosmast@p4FC56064.dip0.t-ipconnect.de) has joined #haskell
2015-09-01 08:59:04	lamefun	> reallyGenericLength (replicate 600 1) :: Word8
2015-09-01 08:59:04	<--	fsvehla (~fsvehla@h081217222140.dyn.cm.kabsi.at) has quit (Quit: fsvehla)
2015-09-01 08:59:06	lambdabot	 88
2015-09-01 08:59:11	the_2nd	thoughts on https://github.com/I3ck/H2D ?
2015-09-01 08:59:20	zipper	geekosaur: Setting TMPDIR has allowed it to build.
2015-09-01 08:59:21	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-09-01 08:59:26	lamefun	not generic...
2015-09-01 08:59:31	zipper	However the underlying issue remains
2015-09-01 08:59:46	<--	saulzar (~oliver@132.181.14.113) has quit (Quit: Leaving)
2015-09-01 08:59:49	<--	grouzen (~grouzen@195.238.93.36) has quit (Ping timeout: 265 seconds)
2015-09-01 08:59:50	-->	joco42_ (~joco42@dsl-hkibrasgw4-58c03a-80.dhcp.inet.fi) has joined #haskell
2015-09-01 08:59:58	Intolerable	we need to go to superReallyGenericLength
2015-09-01 08:59:58	<--	crobbins (~crobbins@2602:30a:c08e:19e0:49f0:a1cd:56bb:869f) has quit (Ping timeout: 246 seconds)
2015-09-01 09:00:08	Intolerable	php naming schemes ft
2015-09-01 09:00:09	Intolerable	*ftw
2015-09-01 09:00:15	-->	j1myl (~user@183.206.180.231) has joined #haskell
2015-09-01 09:00:35	-->	nyazdani (~nyazdani@72.2.55.21) has joined #haskell
2015-09-01 09:01:05	xandaros	wouldn't that be super_really_extra_generic_length, though?
2015-09-01 09:01:24	Intolerable	no, superReally_extra_RealgenericLength
2015-09-01 09:01:50	-->	griotspeak (~textual@72.2.55.21) has joined #haskell
2015-09-01 09:01:51	<--	CMCDragonkai (~nobody@ec2-52-8-178-236.us-west-1.compute.amazonaws.com) has left #haskell
2015-09-01 09:01:54	<--	danthemy_ (~danthemyt@50.246.66.201) has quit (Remote host closed the connection)
2015-09-01 09:01:55	Intolerable	and it would be (Foldable t, Integral b) => t a -> c -> b
2015-09-01 09:02:00	-->	CMCDragonkai (~nobody@ec2-52-8-178-236.us-west-1.compute.amazonaws.com) has joined #haskell
2015-09-01 09:02:01	-->	Freefood_ (~freefood@109.128.200.8) has joined #haskell
2015-09-01 09:02:25	Intolerable	(the c does nothing unless a is Int)
2015-09-01 09:02:45	<--	psy (~psy@43.224.156.116) has quit (Disconnected by services)
2015-09-01 09:03:04	<--	oish (~charlie@host81-130-206-144.in-addr.btopenworld.com) has quit (Quit: leaving)
2015-09-01 09:03:32	<--	cosmicexplorer (~user@129.59.122.10) has quit (Quit: ERC (IRC client for Emacs 25.0.50.6))
2015-09-01 09:03:43	-->	psy_ (~psy@43.224.156.116) has joined #haskell
2015-09-01 09:03:50	-->	cosmicexplorer (~user@129.59.122.10) has joined #haskell
2015-09-01 09:04:41	-->	TheCrafter_ (~TheCrafte@adsl-230.109.242.16.tellas.gr) has joined #haskell
2015-09-01 09:04:47	<--	Freefood (~freefood@2a02:a03f:163a:9700:7581:3e58:6b41:5516) has quit (Ping timeout: 256 seconds)
2015-09-01 09:05:10	-->	dkat (~user@64.72.83.16) has joined #haskell
2015-09-01 09:05:22	xandaros	acme-php is doing this stuff pretty well
2015-09-01 09:05:35	-->	larion (~larion@a83-162-181-111.adsl.xs4all.nl) has joined #haskell
2015-09-01 09:05:39	Intolerable	data Bool = TRUE | FALSE | FILE_NOT_FOUND
2015-09-01 09:05:41	quchen	PHP it would be super_reallyGeneric_length, and take [Int] as argument.
2015-09-01 09:06:08	Intolerable	and if you pass it a specific but still finite sequence it never terminates
2015-09-01 09:06:11	-->	L8D (~L8D@216.201.168.18) has joined #haskell
2015-09-01 09:06:43	quchen	And it would map to String.
2015-09-01 09:06:43	-->	agocorona (553b8a16@gateway/web/freenode/ip.85.59.138.22) has joined #haskell
2015-09-01 09:07:11	<--	Ayey_ (~rune@0135301590.0.fullrate.dk) has quit (Quit: leaving)
2015-09-01 09:07:28	<--	gamegoblin (~grant@64.187.168.233) has quit (Quit: gamegoblin)
2015-09-01 09:07:36	<--	oish_ (~charlie@host81-130-206-144.in-addr.btopenworld.com) has quit (Ping timeout: 255 seconds)
2015-09-01 09:07:48	<--	dkat (~user@64.72.83.16) has left #haskell
2015-09-01 09:07:50	-->	zygentoma (~kvirc@kel30.kel.studentenwerk-goettingen.de) has joined #haskell
2015-09-01 09:07:51	<--	enaqx (~enaqx@188.163.69.11) has quit (Remote host closed the connection)
2015-09-01 09:08:02	<--	TheCrafter (~TheCrafte@adsl-136.91.140.71.tellas.gr) has quit (Ping timeout: 265 seconds)
2015-09-01 09:08:02	-->	toblerone (49e7587a@gateway/web/cgi-irc/kiwiirc.com/ip.73.231.88.122) has joined #haskell
2015-09-01 09:08:18	<--	jgertm (~amontimur@46.128.43.80.dynamic.cablesurf.de) has quit (Ping timeout: 272 seconds)
2015-09-01 09:09:06	-->	Zariel (~chris@86.188.229.98) has joined #haskell
2015-09-01 09:09:16	-->	SubZeroFX (~SubZeroFX@unaffiliated/subzerofx) has joined #haskell
2015-09-01 09:09:22	<--	AaronFriel (~AaronFrie@67.212.119.147) has quit (Ping timeout: 260 seconds)
2015-09-01 09:10:19	<--	j1myl (~user@183.206.180.231) has left #haskell ("ERC (IRC client for Emacs 25.0.50.1)")
2015-09-01 09:10:33	-->	j1myl (~user@183.206.180.231) has joined #haskell
2015-09-01 09:10:42	-->	ph88 (541e4f6e@gateway/web/freenode/ip.84.30.79.110) has joined #haskell
2015-09-01 09:10:46	Jello_Raptor	merijn: basically I've got a heavily modified ListT, and I want to thread state through it in a few different ways. 
2015-09-01 09:11:20	<--	JonathanGrahl (~jonathang@213.136.40.34) has quit (Quit: Lost terminal)
2015-09-01 09:11:25	<--	triliyn (~lioneyes@c-24-6-242-177.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2015-09-01 09:11:59	-->	jinfiesto (~textual@66.214.210.70) has joined #haskell
2015-09-01 09:12:24	<--	quchen (~quchen@ipb21bf8fb.dynamic.kabel-deutschland.de) has quit (Ping timeout: 264 seconds)
2015-09-01 09:12:53	<--	TheCrafter_ (~TheCrafte@adsl-230.109.242.16.tellas.gr) has quit (Quit: Leaving)
2015-09-01 09:13:22	-->	TheCrafter (~TheCrafte@adsl-230.109.242.16.tellas.gr) has joined #haskell
2015-09-01 09:13:27	<--	Erwin-C64 (~kvirc@g123160.upc-g.chello.nl) has quit (Ping timeout: 255 seconds)
2015-09-01 09:13:29	the_2nd	is there any way to allow upper case for constant names?
2015-09-01 09:13:35	geekosaur	no
2015-09-01 09:13:36	-->	crobbins (~crobbins@2602:30a:c08e:19e0:3478:1e74:40ad:3413) has joined #haskell
2015-09-01 09:13:43	glguy	kind of...
2015-09-01 09:14:00	glguy	PatternSynonyms get used for that
2015-09-01 09:14:05	-->	martin-t (~martin-t@199.201.64.129) has joined #haskell
2015-09-01 09:14:07	<--	marcus-aurelius (~quassel@p20030073AF6B8A0144382F04D3C7A4F0.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2015-09-01 09:14:23	geekosaur	well. you can declare them as types and then provide a Storable instance, if it's a constant intended for C / FFI use
2015-09-01 09:14:24	glguy	handy when you're dealing with C FFI
2015-09-01 09:14:35	-->	AaronFriel (~AaronFrie@245-51.wireless.uni.edu) has joined #haskell
2015-09-01 09:15:29	-->	mikecheck (~mike@74.82.253.164) has joined #haskell
2015-09-01 09:15:35	-->	brulo (~brulo@cpe-76-170-76-201.socal.res.rr.com) has joined #haskell
2015-09-01 09:15:42	glguy	Random example: http://hackage.haskell.org/package/gl-0.7.7/docs/src/Graphics-GL-Ext-AMD-BlendMinmaxFactor.html#GL_FACTOR_MAX_AMD
2015-09-01 09:15:43	<--	danza (~francesco@host142-111-dynamic.17-87-r.retail.telecomitalia.it) has quit (Quit: This computer has gone to sleep)
2015-09-01 09:15:56	seanparsons	wired.com writing about Haskell...
2015-09-01 09:16:02	the_2nd	glguy, thing is I want to use the same names as in the norm
2015-09-01 09:16:03	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined #haskell
2015-09-01 09:16:07	<--	kognate (kognate@nat/ibm/x-jqhydwxxxcbplbto) has quit (Remote host closed the connection)
2015-09-01 09:16:09	 *	seanparsons reads the story and walks away.
2015-09-01 09:16:10	the_2nd	and theres a, a_d, A_d ....
2015-09-01 09:16:54	<--	Iskarlar (~Iskarlar@D9641F32.static.ziggozakelijk.nl) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-09-01 09:17:00	lamefun	@let x !+ y = if maxBound - x >= y then x + y else error "integer overflow"
2015-09-01 09:17:01	-->	dcoutts_ (~duncan@209-82-80-116.dedicated.allstream.net) has joined #haskell
2015-09-01 09:17:02	lambdabot	 Defined.
2015-09-01 09:17:11	lamefun	> 200 + 80 :: Word8
2015-09-01 09:17:13	lambdabot	 24
2015-09-01 09:17:14	<--	ioanel (~Icedove@188.27.201.214) has quit (Remote host closed the connection)
2015-09-01 09:17:17	lamefun	> 200 !+ 80 :: Word8
2015-09-01 09:17:19	lambdabot	 *Exception: integer overflow
2015-09-01 09:17:44	Intolerable	> 200 !+ (-80) :: Word8
2015-09-01 09:17:46	lambdabot	 *Exception: integer overflow
2015-09-01 09:19:00	-->	prkc (~prkc@catv-89-134-159-103.catv.broadband.hu) has joined #haskell
2015-09-01 09:19:02	<--	chaosmasttter (~chaosmast@p4FC56064.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2015-09-01 09:19:43	-->	AaronFriel_ (~AaronFrie@245-51.wireless.uni.edu) has joined #haskell
2015-09-01 09:20:03	-->	Sixmsj (~Sixmsj@c-50-131-110-35.hsd1.ca.comcast.net) has joined #haskell
2015-09-01 09:20:43	-->	godel (~gonzalo@190.18.148.147) has joined #haskell
2015-09-01 09:20:44	-->	enaqx (~enaqx@188.163.69.11) has joined #haskell
2015-09-01 09:20:52	-->	jgertm (~amontimur@46.128.43.80.dynamic.cablesurf.de) has joined #haskell
2015-09-01 09:21:47	-->	tommah (~tommah@67-210-179-56.fidnet.com) has joined #haskell
2015-09-01 09:22:02	-->	jinblack (~jinblack@ip184-187-174-106.sb.sd.cox.net) has joined #haskell
2015-09-01 09:22:16	-->	adek (~adek@199.201.64.2) has joined #haskell
2015-09-01 09:22:30	<--	enaqx (~enaqx@188.163.69.11) has quit (Remote host closed the connection)
2015-09-01 09:22:40	-->	swgillespie (~textual@104.232.112.57) has joined #haskell
2015-09-01 09:22:47	-->	johtso (uid563@gateway/web/irccloud.com/x-jwdcuobkgdvewaeu) has joined #haskell
2015-09-01 09:22:49	<--	guampa (~guampa@unaffiliated/guampa) has quit (Remote host closed the connection)
2015-09-01 09:22:59	<--	sigma914 (~sigma@80.76.204.146) has quit (Remote host closed the connection)
2015-09-01 09:23:35	<--	jinfiesto (~textual@66.214.210.70) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-09-01 09:23:40	<--	bob_twinkles (~bob_twink@2607:b400:a4:4210:6e62:6dff:fe40:f3b4) has quit (Remote host closed the connection)
2015-09-01 09:23:57	<--	Akii (~Akii@HSI-KBW-046-005-253-086.hsi8.kabel-badenwuerttemberg.de) has quit (Quit: Leaving...)
2015-09-01 09:24:36	-->	fabianvf (~fabianvf@216.30.185.217) has joined #haskell
2015-09-01 09:24:46	<--	Gurkenglas (Gurkenglas@dslb-178-000-176-040.178.000.pools.vodafone-ip.de) has quit (Ping timeout: 272 seconds)
2015-09-01 09:25:32	<--	swgillespie (~textual@104.232.112.57) has quit (Client Quit)
2015-09-01 09:25:43	<--	cosmicexplorer (~user@129.59.122.10) has quit (Ping timeout: 268 seconds)
2015-09-01 09:25:49	<--	fuzzyhorns (~fuzzyhorn@73.38.57.191) has quit (Remote host closed the connection)
2015-09-01 09:25:55	<--	AaronFriel (~AaronFrie@245-51.wireless.uni.edu) has quit (Ping timeout: 265 seconds)
2015-09-01 09:26:03	<--	AaronFriel_ (~AaronFrie@245-51.wireless.uni.edu) has quit (Ping timeout: 255 seconds)
2015-09-01 09:26:08	-->	ldbrandy (~Adium@2620:10d:c090:200::3:73d2) has joined #haskell
2015-09-01 09:26:11	-->	nkhodyunya (~Adium@dnm.120.104.124.92.dsl.krasnet.ru) has joined #haskell
2015-09-01 09:26:19	fr33domlover	is there a version of !! that returns a Maybe instead of throwing?
2015-09-01 09:26:24	<--	stass (stas@ssh.deglitch.com) has quit (Ping timeout: 265 seconds)
2015-09-01 09:26:25	-->	aartamonau (~shaleny@206.169.106.2) has joined #haskell
2015-09-01 09:26:27	fr33domlover	(if not, why?)
2015-09-01 09:26:31	-->	oish (~charlie@cbs1-oxfd25-2-0-cust1.4-3.cable.virginm.net) has joined #haskell
2015-09-01 09:26:32	merijn	fr33domlover: For list?
2015-09-01 09:26:37	Intolerable	because indexing a list is slow
2015-09-01 09:26:38	merijn	fr33domlover: No, but it's easy to make
2015-09-01 09:26:40	<--	ndrei (~avo@83.142.149.227) has quit (Ping timeout: 272 seconds)
2015-09-01 09:26:45	-->	cosmicexplorer (~user@129.59.122.10) has joined #haskell
2015-09-01 09:26:50	merijn	fr33domlover: "listToMaybe . drop i"
2015-09-01 09:26:51	fr33domlover	Intolerable, what would you use then?
2015-09-01 09:27:00	Intolerable	vector / array
2015-09-01 09:27:10	Intolerable	lists are not very good if you're doing random access
2015-09-01 09:27:24	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 255 seconds)
2015-09-01 09:27:26	Intolerable	since you have to go all the way down the list to find what you want
2015-09-01 09:27:36	fr33domlover	Intolerable, yeah i know that :P but my lists are small so I went for the simple approach
2015-09-01 09:27:48	Intolerable	fair enough
2015-09-01 09:27:55	fr33domlover	(list of memos left for IRC users... cant go big)
2015-09-01 09:27:57	Intolerable	i'd just define a !? then
2015-09-01 09:28:34	<--	fabianvf (~fabianvf@216.30.185.217) has quit (Remote host closed the connection)
2015-09-01 09:28:37	-->	ndrei (~avo@83.142.149.227) has joined #haskell
2015-09-01 09:29:14	lpaste_	Pro9 pasted “How to use a variable that changes in a recursive if clause” at http://lpaste.net/3672894274480898048
2015-09-01 09:29:17	<--	marsam (~marsam@unaffiliated/marsam) has quit (Remote host closed the connection)
2015-09-01 09:29:47	-->	lucasbrunialti (~lucasbrun@201.6.225.38) has joined #haskell
2015-09-01 09:30:18	-->	AaronFriel_ (~AaronFrie@245-51.wireless.uni.edu) has joined #haskell
2015-09-01 09:30:18	-->	AaronFriel (~AaronFrie@245-51.wireless.uni.edu) has joined #haskell
2015-09-01 09:30:41	glguy	Pro9: You can use:   let t = testcases !! (l-1) in theRestOfYourExpressionHere
2015-09-01 09:31:06	<--	m0rphism (~m0rphism@HSI-KBW-095-208-106-119.hsi5.kabel-badenwuerttemberg.de) has quit (Remote host closed the connection)
2015-09-01 09:31:14	<--	kini (quassel@unaffiliated/kini) has quit (Quit: No Ping reply in 180 seconds.)
2015-09-01 14:29:25	--	irc: disconnected from server
2015-09-01 14:31:26	-->	RouxTheDay (~RouxTheDa@199.21.87.214) has joined #haskell
2015-09-01 14:31:26	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-09-01 14:31:26	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-09-01 14:31:26	--	Channel #haskell: 1516 nicks (1 op, 0 voices, 1515 normals)
2015-09-01 14:31:26	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-09-01 14:31:27	--	URL for #haskell: http://www.haskell.org/
2015-09-01 14:31:28	<--	griotspeak (~textual@72.2.55.21) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-09-01 14:31:46	-->	eacameron (~Elliot@pdev.ces.cvnt.net) has joined #haskell
2015-09-01 14:32:18	<--	skore_de (~skore@2a02:908:cf11:8fe0:609b:d04:828a:27e0) has quit (Ping timeout: 256 seconds)
2015-09-01 14:32:22	-->	ldbrandy (~Adium@2620:10d:c090:200::6:5270) has joined #haskell
2015-09-01 14:32:38	<--	eatsfoobars (~eatsfooba@ppp-2-84-71-122.home.otenet.gr) has quit
2015-09-01 14:32:43	<--	pixelfog (~mk@207.140.102.226) has quit (Ping timeout: 244 seconds)
2015-09-01 14:33:01	-->	lingxiao (~lingxiao@2607:f470:6:400d:d1ac:ed9a:791c:9daf) has joined #haskell
2015-09-01 14:33:01	-->	cow_2001 (~un@unaffiliated/wabisabi) has joined #haskell
2015-09-01 14:33:11	<--	Guest13198 (490fdada@gateway/web/freenode/ip.73.15.218.218) has quit (Client Quit)
2015-09-01 14:33:17	quchen	Oh, that's called GHC panic, not "impossible error" :-)
2015-09-01 14:33:24	quchen	That's a whole different beast
2015-09-11 22:30:16	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:c09c:b97b:2b4d:7414) has joined #haskell
2015-09-11 22:30:16	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-09-11 22:30:16	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-09-11 22:30:16	--	Channel #haskell: 1431 nicks (1 op, 0 voices, 1430 normals)
2015-09-11 22:30:16	--	URL for #haskell: http://www.haskell.org/
2015-09-11 22:30:16	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-09-11 22:30:46	<--	mgomezch (~iguana@190.74.53.239) has quit (Quit: No Ping reply in 180 seconds.)
2015-09-11 22:30:53	-->	fujimura (~fujimura@ngn7-ppp760.tokyo.sannet.ne.jp) has joined #haskell
2015-09-11 22:31:04	-->	mgomezch (~iguana@190.74.53.239) has joined #haskell
2015-09-11 22:31:33	-->	dfeuer (~dfeuer@pool-108-48-193-123.washdc.fios.verizon.net) has joined #haskell
2015-09-11 22:31:33	<--	dfeuer (~dfeuer@pool-108-48-193-123.washdc.fios.verizon.net) has quit (Changing host)
2015-09-11 22:31:33	-->	dfeuer (~dfeuer@wikimedia/Dfeuer) has joined #haskell
2015-09-11 22:33:15	-->	pfurla (~textual@179.218.194.191) has joined #haskell
2015-09-11 22:33:24	<--	dcoutts_ (~duncan@2601:147:4102:d07e::83) has quit (Ping timeout: 246 seconds)
2015-09-11 22:35:15	<--	fujimura (~fujimura@ngn7-ppp760.tokyo.sannet.ne.jp) has quit (Ping timeout: 256 seconds)
2015-09-11 22:36:50	<--	dfeuer (~dfeuer@wikimedia/Dfeuer) has quit (Ping timeout: 244 seconds)
2015-09-11 22:37:37	<--	hackebeilchen (~Peter@82-136-250-159.ip.telfort.nl) has quit (Read error: Connection reset by peer)
2015-09-11 22:38:47	<--	shesek (~shesek@IGLD-84-228-10-73.inter.net.il) has quit (Read error: No route to host)
2015-09-11 22:39:33	-->	hackebeilchen (~Peter@82-136-250-159.ip.telfort.nl) has joined #haskell
2015-09-11 22:40:05	-->	yeji (~yeji@cpe-24-193-184-205.nj.res.rr.com) has joined #haskell
2015-09-12 09:00:29	--	irc: disconnected from server
2015-09-12 09:00:52	-->	RouxTheDay (~RouxTheDa@199.21.87.214) has joined #haskell
2015-09-12 09:00:52	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-09-12 09:00:52	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-09-12 09:00:52	--	Channel #haskell: 1488 nicks (1 op, 0 voices, 1487 normals)
2015-09-12 09:00:52	--	Notice(orwell.freenode.net): [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
2015-09-12 09:00:52	--	URL for #haskell: http://www.haskell.org/
2015-09-12 09:00:53	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-09-12 09:00:55	julianleviston	[(a,b)| a <- [1..], b <- [1..]]
2015-09-12 09:01:12	-->	kmels (~kmels@184.62.151.186.static.intelnet.net.gt) has joined #haskell
2015-09-12 09:01:15	-->	legend (~blue@122.161.251.241) has joined #haskell
2015-09-12 09:01:25	<--	zar (~zar@79.138.133.110.mobile.tre.se) has quit (Client Quit)
2015-09-12 09:01:26	IP92	julianleviston: that will only produce (1,1), (1,2), (1,3) 
2015-09-12 09:01:47	-->	fujimura (~fujimura@ngn7-ppp182.tokyo.sannet.ne.jp) has joined #haskell
2015-09-12 09:02:14	-->	mrkgnao (75c2c2df@gateway/web/freenode/ip.117.194.194.223) has joined #haskell
2015-09-12 09:02:35	mrkgnao	Does anyone here use spacemacs? (or emacs, more generally_
2015-09-12 09:02:55	julianleviston	IP92: you could wrtie merge
2015-09-12 09:02:55	julianleviston	http://stackoverflow.com/questions/3938438/merging-two-lists-in-haskell
2015-09-12 09:03:00	mrkgnao	I'm trying to set up a Haskell environment in emacs, using spacemacs.
2015-09-12 09:03:07	mrkgnao	Preferably with stack.
2015-09-12 09:03:14	suppi	I want to use spacemacs but had trouble setting it up :O
2015-09-12 09:03:30	jmcarthur	mrkgnao: i recently use spacemacs
2015-09-12 09:03:31	-->	zar (~zar@79.138.133.110.mobile.tre.se) has joined #haskell
2015-09-12 09:03:39	<--	NeverDie (~NeverDie@cpe-184-152-22-98.nyc.res.rr.com) has quit (Quit: http://radiux.io/)
2015-09-12 09:03:41	<--	yeji (~yeji@cpe-24-193-184-205.nj.res.rr.com) has quit (Remote host closed the connection)
2015-09-12 09:03:58	-->	yeji (~yeji@2604:2000:1002:e03b:4485:75f1:8ba3:d5a6) has joined #haskell
2015-09-12 09:04:03	jmcarthur	mrkgnao: i think stack and spacemacs aren't playing very nicely. i intend to see what happens if i move all my stack infrastructure aside and try the haskell layer again
2015-09-12 09:04:11	 *	hackagebot pg-harness-server 0.4.0 - REST service for creating temporary PostgreSQL databases  https://hackage.haskell.org/package/pg-harness-server-0.4.0 (BardurArantsson)
2015-09-12 09:04:13	 *	hackagebot pg-harness-client 0.4.0 - Client library for pg-harness-server  https://hackage.haskell.org/package/pg-harness-client-0.4.0 (BardurArantsson)
2015-09-12 09:04:20	jmcarthur	mrkgnao: other than that, my adventures with spacemacs are going really smoothly and i'm loving it
2015-09-12 09:04:43	mrkgnao	So I'm trying to get the basic packages set up, and I did stack install stylish-haskell hlint ghc-mod hasktags and ran into . . . stack hell.
2015-09-12 09:04:48	mrkgnao	Do you use stack with emacs?
2015-09-12 09:05:15	-->	ziocroc (~ziocroc3@151.74.105.109) has joined #haskell
2015-09-12 09:05:22	jmcarthur	i do currently, but as i just said, it's not exactly working well. ghc-mod and interactive-haskell are both having different kinds of trouble relating to it
2015-09-12 09:05:24	<--	yeji (~yeji@2604:2000:1002:e03b:4485:75f1:8ba3:d5a6) has quit (Remote host closed the connection)
2015-09-12 09:05:26	-->	AndChat107604 (~AndChat10@117.226.188.46) has joined #haskell
2015-09-12 09:05:27	-->	kadoban (~mud@unaffiliated/kadoban) has joined #haskell
2015-09-12 09:05:49	mrkgnao	Does everything go fine if you use Cabal?
2015-09-12 09:06:14	mrkgnao	I don't mind doing that. I'm just here for structured-haskell-mode and autocompletion, I'll settle for whatever gets me that.
2015-09-12 09:06:21	-->	yeji (~yeji@2604:2000:1002:e03b:4485:75f1:8ba3:d5a6) has joined #haskell
2015-09-12 09:06:36	jmcarthur	mrkgnao: as i just said, i *intend* to try just cabal, but haven't yet
2015-09-12 09:06:45	mrkgnao	Oh.
2015-09-12 09:06:55	--	paf31 is now known as paf31_away
2015-09-12 09:07:01	AndChat107604	do anybody knows how to use open UDP port for free internet
2015-09-12 09:07:03	mrkgnao	Any ideas on how I can fix the stack problems?
2015-09-12 09:07:13	<--	eday1 (eday@gateway/vpn/mullvad/x-noayroagmfxtzliw) has quit (Remote host closed the connection)
2015-09-12 09:07:25	-->	Voltz (ad3a7fa7@gateway/web/cgi-irc/kiwiirc.com/ip.173.58.127.167) has joined #haskell
2015-09-12 09:07:26	-->	no_cluez (no_cluez@gateway/vpn/mullvad/x-chprndmixorlcfze) has joined #haskell
2015-09-12 09:07:28	mrkgnao	All those version number mismatches everywhere.
2015-09-12 09:07:42	jmcarthur	mrkgnao: that sounds unrelated to emacs, right?
2015-09-12 09:07:44	<--	XexonixXexillion (cb813607@gateway/web/freenode/ip.203.129.54.7) has quit (Quit: Page closed)
2015-09-12 09:07:49	<--	thunderrd (~thunderrd@116.58.233.159) has quit (Read error: Connection reset by peer)
2015-09-12 09:07:57	jmcarthur	mrkgnao: could you put your errors on hpaste?
2015-09-12 09:08:04	-->	thunderrd (~thunderrd@116.58.233.159) has joined #haskell
2015-09-12 09:08:11	mrkgnao	Sure.
2015-09-12 09:08:13	AndChat107604	how to use open UDP port for free internet on isp
2015-09-12 09:08:22	AndChat107604	plz tell me
2015-09-12 09:08:41	Voltz	Is there anything that gives Haskell some of those metavariables/auto case splitting tools like Idris?
2015-09-12 09:09:00	lpaste_	mrkgnao pasted “Stack errors, 12.9.15” at http://lpaste.net/6493397519647637504
2015-09-12 09:09:29	mrkgnao	There. ^
2015-09-12 09:09:32	AndChat107604	my problem bro
2015-09-12 09:10:58	AndChat107604	helo
2015-09-12 09:11:15	srhb	AndChat107604: Do you have a Haskell question? :)
2015-09-12 09:11:22	AndChat107604	no
2015-09-12 09:11:28	srhb	AndChat107604: This channel is for discussion of Haskell topics. :)
2015-09-12 09:11:40	jmcarthur	mrkgnao: it tells you what to do right there in the "Recommended action" section of that error message
2015-09-12 09:11:43	AndChat107604	where should I go yhen
2015-09-12 09:11:50	srhb	AndChat107604: I don't know. Not here. :)
2015-09-12 09:11:51	<--	suorm (5c6e165d@gateway/web/cgi-irc/kiwiirc.com/ip.92.110.22.93) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-09-12 09:11:56	mrkgnao	I did that. 
2015-09-12 09:12:01	mrkgnao	Here's what that gave.
2015-09-12 09:12:09	julianleviston	Voltz: do you mean like this? https://ghc.haskell.org/trac/haskell-prime/wiki/PartialTypeAnnotations
2015-09-12 09:12:16	wedify	AndChat: you could look at chapter 27 of realworld haskell
2015-09-12 09:12:30	-->	libracious (uid95058@gateway/web/irccloud.com/x-ycypxaugjntyqcsa) has joined #haskell
2015-09-12 09:12:45	AndChat107604	what's that
2015-09-12 09:12:54	julianleviston	AndChat107604: it’ll help you open UDP sockets
2015-09-12 09:13:07	mrkgnao	http://lpaste.net/140743
2015-09-12 09:13:14	mrkgnao	That paste site is gorgeous.
2015-09-12 09:13:23	julianleviston	AndChat107604: you’ll probably have to learn a bit of haskell though :) http://book.realworldhaskell.org/read/sockets-and-syslog.html
2015-09-12 09:13:41	kadoban	mrkgnao: ghc-mod isn't in stackage, at least in lts-3, because it took /forever/ to get updated for GHC 7.10
2015-09-12 09:13:45	-->	padre_angolano (~grg@jail.mp2.macomnet.net) has joined #haskell
2015-09-12 09:13:46	<--	syntagma (~syntagma@user-94-254-133-54.play-internet.pl) has quit (Read error: Connection reset by peer)
2015-09-12 09:13:54	KaneTW	> let f n m = [(a,b) | a <- [n..m], b <- [1..m]] in [1..] >>= \x -> f x (x+1)
2015-09-12 09:13:56	lambdabot	 [(1,1),(1,2),(2,1),(2,2),(2,1),(2,2),(2,3),(3,1),(3,2),(3,3),(3,1),(3,2),(3,...
2015-09-12 09:14:02	-->	sword_smith (~quassel@77.66.112.22) has joined #haskell
2015-09-12 09:14:04	mrkgnao	. . . oh.
2015-09-12 09:14:07	kadoban	mrkgnao: So I think that's why you're getting that, lts-3.4 is the stackage resolver, you'll probably have to use the solver or something? I dunno.
2015-09-12 09:14:14	KaneTW	IP92: something like that might work
2015-09-12 09:14:17	-->	Guest38 (~textual@c-174-62-78-253.hsd1.ca.comcast.net) has joined #haskell
2015-09-12 09:14:18	Voltz	No, I mean like in this video : https://youtu.be/4i7KrG1Afbk?t=5m40s There's an idris mode for Emacs
2015-09-12 09:14:28	<--	Luke (~luke@unaffiliated/luke) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-09-12 09:14:30	kadoban	mrkgnao: You could try doing what it says, add as extra deps
2015-09-12 09:14:30	mrkgnao	Yeah, it's installing fine without ghc-mod.
2015-09-12 09:14:43	IP92	what's the >>= symbol?
2015-09-12 09:14:47	Voltz	bind
2015-09-12 09:14:51	julianleviston	KaneTW: he wants the product, so :: [[a]] -> [a]
2015-09-12 09:14:51	Voltz	:t bind
2015-09-12 09:14:52	lambdabot	    Not in scope: ‘bind’
2015-09-12 09:14:52	lambdabot	    Perhaps you meant one of these:
2015-09-12 09:14:52	lambdabot	      ‘BS.find’ (imported from Data.ByteString),
2015-09-12 09:14:54	KaneTW	concatMap in this case
2015-09-12 09:14:55	mrkgnao	How'd I add ghc-mod as a dep?
2015-09-12 09:14:57	Voltz	whoops
2015-09-12 09:15:01	KaneTW	:t (>>=)
2015-09-12 09:15:01	Voltz	:t (>>=)
2015-09-12 09:15:02	mrkgnao	:t >>=
2015-09-12 09:15:02	lambdabot	Monad m => m a -> (a -> m b) -> m b
2015-09-12 09:15:03	KaneTW	:t concatMap
2015-09-12 09:15:03	lambdabot	Monad m => m a -> (a -> m b) -> m b
2015-09-12 09:15:04	lambdabot	parse error on input ‘>>=’
2015-09-12 09:15:05	lambdabot	Foldable t => (a -> [b]) -> t a -> [b]
2015-09-12 09:15:06	julianleviston	Voltz: >>= ?
2015-09-12 09:15:14	Voltz	Yeah..
2015-09-12 09:15:26	kadoban	mrkgnao: Well, try what it says and see what happens? There'll probably be a few rounds of that
2015-09-12 09:15:28	julianleviston	KaneTW: is it lazy?
2015-09-12 09:15:39	KaneTW	it produces an infinite list, has to be
2015-09-12 09:15:47	<--	Polarina (~polarina@wesnoth/translator/Polarina) has quit (Remote host closed the connection)
2015-09-12 09:16:05	KaneTW	> let f m = [(a,b) | a <- m, b <- [1..m]] in [1..] >>= \x -> f x 
2015-09-12 09:16:06	lambdabot	     No instance for (Show t0)
2015-09-12 09:16:07	lambdabot	       arising from a use of ‘show_M237359741762518169216315’
2015-09-12 09:16:07	lambdabot	     The type variable ‘t0’ is ambiguous
2015-09-12 09:16:09	julianleviston	KaneTW: unless it’s producing two at a time ;-)
2015-09-12 09:16:17	julianleviston	KaneTW: depends “*how*” lazy.
2015-09-12 09:16:38	<--	doomlord (~textual@host86-157-65-238.range86-157.btcentralplus.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-09-12 09:16:47	KaneTW	> let f m = [(a,b) | a <- m, b <- [1..m]] :: [(Integer,Integer)] in [1..] >>= \x -> f x 
2015-09-12 09:16:49	lambdabot	     Couldn't match expected type ‘Integer’ with actual type ‘[Integer]’
2015-09-12 09:16:49	lambdabot	     In the expression: b
2015-09-12 09:16:49	lambdabot	     In the expression: (a, b)
2015-09-12 09:17:01	mrkgnao	kadoban: So here's what I did just now.
2015-09-12 09:17:04	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Read error: Connection reset by peer)
2015-09-12 09:17:08	<--	AndChat107604 (~AndChat10@117.226.188.46) has quit (Ping timeout: 250 seconds)
2015-09-12 09:17:28	KaneTW	> let f (m::Int) = [(a,b) | a <- m, b <- [1..m]] in [1..] >>= \x -> f x 
2015-09-12 09:17:30	lambdabot	     Couldn't match expected type ‘[t1]’ with actual type ‘Int’
2015-09-12 09:17:30	lambdabot	     Relevant bindings include
2015-09-12 09:17:30	lambdabot	       f :: Int -> [(t1, Int)] (bound at <interactive>:1:5)
2015-09-12 09:17:33	mrkgnao	In my global stack.yaml, I put cabal-helper-0.5.1.0 as an extra-dep.
2015-09-12 09:17:35	KaneTW	oh
2015-09-12 09:17:37	KaneTW	goddamn
2015-09-12 09:17:46	-->	hyy (~hyper_ecx@71.42.153.34) has joined #haskell
2015-09-12 09:17:49	KaneTW	> let f m = [(m,b) | b <- [1..m]] in [1..] >>= \x -> f x 
2015-09-12 09:17:50	--	paf31_away is now known as paf31
2015-09-12 09:17:50	lambdabot	 [(1,1),(2,1),(2,2),(3,1),(3,2),(3,3),(4,1),(4,2),(4,3),(4,4),(5,1),(5,2),(5,...
2015-09-12 09:17:52	--	hyy is now known as SparkySquirrel
2015-09-12 09:17:58	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined #haskell
2015-09-12 09:18:00	-->	_kartoffel_ (~robin@46-126-109-50.dynamic.hispeed.ch) has joined #haskell
2015-09-12 09:18:03	KaneTW	hm, now it's only doing the upper half
2015-09-12 09:18:50	-->	triliyn (~lioneyes@c-24-6-242-177.hsd1.ca.comcast.net) has joined #haskell
2015-09-12 09:21:22	--	irc: disconnected from server
2015-09-12 09:21:49	-->	RouxTheD1 (~RouxTheDa@173.247.199.46) has joined #haskell
2015-09-12 09:21:49	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-09-12 09:21:49	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-09-12 09:21:49	--	Channel #haskell: 1497 nicks (1 op, 0 voices, 1496 normals)
2015-09-12 09:21:49	--	URL for #haskell: http://www.haskell.org/
2015-09-12 09:21:50	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-09-12 09:22:00	-->	emanuelz (~emanuel@fsf/member/emanuelz) has joined #haskell
2015-09-12 09:23:06	-->	Akii (~Akii@HSI-KBW-046-005-253-063.hsi8.kabel-badenwuerttemberg.de) has joined #haskell
2015-09-12 09:23:19	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined #haskell
2015-09-12 09:23:27	<--	RouxTheDay (~RouxTheDa@199.21.87.214) has quit (Ping timeout: 260 seconds)
2015-09-12 09:24:11	 *	hackagebot hset 2.0.0 - Primitive list with elements of unique types.  https://hackage.haskell.org/package/hset-2.0.0 (AlekseyUymanov)
2015-09-12 09:24:20	-->	karmatr0n (~karmatr0n@189.146.157.231) has joined #haskell
2015-09-12 09:25:23	-->	XorSwap (~XorSwap@wnpgmb016qw-ds01-214-177.dynamic.mtsallstream.net) has joined #haskell
2015-09-12 09:26:25	<--	legend (~blue@122.161.251.241) has quit (Quit: legend)
2015-09-12 09:26:32	-->	navilan (~navilan@static.207.106.9.5.clients.your-server.de) has joined #haskell
2015-09-12 09:27:20	-->	firstdayonthejob (~firstdayo@cpc9-croy22-2-0-cust203.19-2.cable.virginm.net) has joined #haskell
2015-09-12 09:27:50	-->	hiroakip (~hiroaki@5.147.58.148) has joined #haskell
2015-09-12 09:28:09	-->	candiman (~cristian@179.38.191.253) has joined #haskell
2015-09-12 09:28:12	-->	howdoi (uid224@gateway/web/irccloud.com/x-ovohsrgnwkdhjpsx) has joined #haskell
2015-09-12 09:29:09	<--	caccolaUmana (~pippo32@host214-195-dynamic.4-87-r.retail.telecomitalia.it) has quit (Quit: Leaving)
2015-09-12 09:29:14	<--	kloeri (~kloeri@freenode/staff/exherbo.kloeri) has quit (Read error: Connection reset by peer)
2015-09-12 09:29:18	mrkgnao	okay, ghc-mod, stylish-haskell, hlint, and hasktags are installed!
2015-09-12 09:29:35	<--	erkin (~erkin@unaffiliated/erkin) has quit (Quit: Ouch! Got SIGABRT, dying...)
2015-09-12 09:29:52	-->	kloeri (~kloeri@freenode/staff/exherbo.kloeri) has joined #haskell
2015-09-12 09:30:16	Voltz	I kind of think I should learn Emacs, Watching some screencasts, it seems to work well
2015-09-12 09:30:24	-->	pkkm (~pkkm@dhp35.neoplus.adsl.tpnet.pl) has joined #haskell
2015-09-12 09:30:43	suppi	Voltz, I feel the same
2015-09-12 09:30:45	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Max SendQ exceeded)
2015-09-12 09:30:49	KaneTW	emacs is probably my favorite editor for haskell
2015-09-12 09:31:03	suppi	But I keep having trouble running and configuring spacemacs for Haskell
2015-09-12 09:31:17	Voltz	I like my modes though.. Maybe I'll give Evil Mode a chance if I ever figure out how to config Emacs.
2015-09-12 09:31:42	-->	Alpha64 (~Alpha64@unaffiliated/alpha64) has joined #haskell
2015-09-12 09:31:47	suppi	I have a hard time justifying not just running vim instead :O
2015-09-12 09:32:05	KaneTW	i use just plain haskell-mode and ghc-mod, although ghc-mod is totally optional
2015-09-12 09:32:11	<--	andyo (~andy@63.228.117.97) has quit (Ping timeout: 240 seconds)
2015-09-12 09:32:12	-->	cj3kim (~cj3kim@unaffiliated/cj3kim) has joined #haskell
2015-09-12 09:32:15	KaneTW	https://ghc.haskell.org/trac/ghc/wiki/Emacs
2015-09-12 09:32:16	-->	Jaume_ (~Jaume@64.18.85.10) has joined #haskell
2015-09-12 09:32:34	suppi	KaneTW, do you get type errors in emacs?
2015-09-12 09:32:43	<--	fujimura (~fujimura@ngn7-ppp182.tokyo.sannet.ne.jp) has quit (Remote host closed the connection)
2015-09-12 09:33:01	<--	dmwit (~dmwit@75-164-131-135.ptld.qwest.net) has quit (Ping timeout: 244 seconds)
2015-09-12 09:33:02	KaneTW	you can get them automatically but i disabled that
2015-09-12 09:33:07	-->	michel_slm (uid16025@gateway/web/irccloud.com/x-hdhjijfteyxmaasi) has joined #haskell
2015-09-12 09:33:15	<--	oish (~charlie@94.117.51.7) has quit (Ping timeout: 260 seconds)
2015-09-12 09:33:17	suppi	really? why?
2015-09-12 09:33:22	<--	Oxyd (~oxyd@pdpc/supporter/student/oxyd) has quit (Quit: Pain is all we have)
2015-09-12 09:33:33	KaneTW	doesn't work too well imo when working on ghc
2015-09-12 09:33:38	KaneTW	or is a pain to set up properly at least
2015-09-12 09:33:48	suppi	:O
2015-09-12 09:33:58	KaneTW	i do use them when doing non-ghc stuff
2015-09-12 09:33:59	-->	Polarina (~polarina@wesnoth/translator/Polarina) has joined #haskell
2015-09-12 09:34:02	-->	fujimura (~fujimura@ngn7-ppp182.tokyo.sannet.ne.jp) has joined #haskell
2015-09-12 09:34:05	-->	dmwit (~dmwit@75-164-131-135.ptld.qwest.net) has joined #haskell
2015-09-12 09:34:14	suppi	weird, I always use them in vim
2015-09-12 09:34:23	suppi	specifically for ghc stuff
2015-09-12 09:34:25	<--	pfurla (~textual@179.218.194.191) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-09-12 09:34:27	KaneTW	i always get a bunch of preprocessor errors
2015-09-12 09:34:31	<--	umib0zu (~umib0zu@146-115-43-219.c3-0.abr-ubr1.sbo-abr.ma.cable.rcn.com) has quit (Quit: umib0zu)
2015-09-12 09:35:03	-->	karmatr0_ (~karmatr0n@189.146.157.231) has joined #haskell
2015-09-12 09:35:14	<--	Goplat (~goplat@reactos/developer/Goplat) has quit (Remote host closed the connection)
2015-09-12 09:35:45	-->	LeoTal (~LeoTal@19.247.7.93.rev.sfr.net) has joined #haskell
2015-09-12 09:36:23	<--	firstdayonthejob (~firstdayo@cpc9-croy22-2-0-cust203.19-2.cable.virginm.net) has quit (Read error: Connection reset by peer)
2015-09-12 09:36:28	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined #haskell
2015-09-12 09:36:31	<--	Jaume_ (~Jaume@64.18.85.10) has quit (Ping timeout: 250 seconds)
2015-09-12 09:36:36	mrkgnao	oh my god.
2015-09-12 09:36:46	mrkgnao	I just got autocomplete working accidentally.
2015-09-12 09:36:53	mrkgnao	by starting the interpreter.
2015-09-12 09:36:58	suppi	mrkgnao, how is it?
2015-09-12 09:36:59	<--	TheUnobtrusiveMa (~Thunderbi@c-73-187-12-137.hsd1.pa.comcast.net) has quit (Ping timeout: 260 seconds)
2015-09-12 09:37:23	<--	pantsman- (~pantsman@cpc12-haye16-2-0-cust45.haye.cable.virginm.net) has quit (Ping timeout: 268 seconds)
2015-09-12 09:37:45	-->	inhortte (~polaris@181.Red-79-147-106.dynamicIP.rima-tde.net) has joined #haskell
2015-09-12 09:38:40	<--	fujimura (~fujimura@ngn7-ppp182.tokyo.sannet.ne.jp) has quit (Ping timeout: 255 seconds)
2015-09-12 09:38:42	<--	karmatr0n (~karmatr0n@189.146.157.231) has quit (Ping timeout: 244 seconds)
2015-09-12 09:38:54	<--	jgt (~jgt@abnx246.neoplus.adsl.tpnet.pl) has quit (Quit: WeeChat 1.2)
2015-09-12 09:38:56	-->	obadz- (~obadz@unaffiliated/obadz) has joined #haskell
2015-09-12 09:38:57	-->	Jaume_ (~Jaume@24.114.103.168) has joined #haskell
2015-09-12 09:39:26	mrkgnao	suppi: just a second.
2015-09-12 09:39:28	-->	andyo (~andy@63.228.117.97) has joined #haskell
2015-09-12 09:39:44	suppi	mrkgnao, would you mind submitting a solution here https://github.com/parsonsmatt/hasktuts/issues/8 once you managed to get spacemacs to work?
2015-09-12 09:40:03	-->	ndrei (~avo@83.142.149.227) has joined #haskell
2015-09-12 09:40:26	-->	jgt (~jgt@abnx246.neoplus.adsl.tpnet.pl) has joined #haskell
2015-09-12 09:40:51	<--	kmels (~kmels@184.62.151.186.static.intelnet.net.gt) has quit (Ping timeout: 240 seconds)
2015-09-12 09:41:20	mrkgnao	I definitely will.
2015-09-12 09:41:33	-->	urodna (~urodna@unaffiliated/urodna) has joined #haskell
2015-09-12 09:41:40	-->	umib0zu (~umib0zu@146.115.43.219) has joined #haskell
2015-09-12 09:41:53	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Max SendQ exceeded)
2015-09-12 09:42:09	-->	NeverDie (~NeverDie@cpe-184-152-22-98.nyc.res.rr.com) has joined #haskell
2015-09-12 09:42:10	<--	inhortte (~polaris@181.Red-79-147-106.dynamicIP.rima-tde.net) has quit (Client Quit)
2015-09-12 09:42:16	<--	nakilon (~nakilon@ip-95-221-196-156.bb.netbynet.ru) has quit (Ping timeout: 246 seconds)
2015-09-12 09:42:24	-->	Hakim (~Hakim@h83-209-186-168.dynamic.se.alltele.net) has joined #haskell
2015-09-12 09:42:54	-->	tpsinnem (~tpsinnem@dsl-espbrasgw1-50dfbd-112.dhcp.inet.fi) has joined #haskell
2015-09-12 09:43:26	Hakim	hi guys, when i have a haskell code like this one.....size :: Num a => Hand -> a
2015-09-12 09:43:26	Hakim	size Empty            = 0
2015-09-12 09:43:26	Hakim	size (Add card hand)  = 1 + size hand
2015-09-12 09:43:44	Hakim	what does Add do..my tutor never defined it anywhere
2015-09-12 09:43:49	<--	dm3 (~dm3@pub082136105147.dh-hfc.datazug.ch) has quit (Remote host closed the connection)
2015-09-12 09:44:26	mrkgnao	Add is something like an "object", if you're familiar with that. :)
2015-09-12 09:44:40	-->	TheUnobtrusiveMa (~Thunderbi@c-73-187-12-137.hsd1.pa.comcast.net) has joined #haskell
2015-09-12 09:45:01	<--	Jaume_ (~Jaume@24.114.103.168) has quit (Quit: Jaume_)
2015-09-12 09:45:06	mrkgnao	It basically represents a "sum" of a card and a hand.
2015-09-12 09:45:06	geekosaur	you sure it was not defined? is there not something: data Hand = ...
2015-09-12 09:45:14	<--	karmatr0_ (~karmatr0n@189.146.157.231) has quit (Ping timeout: 246 seconds)
2015-09-12 09:45:18	geekosaur	and what is happening there is a pattern match
2015-09-12 09:45:20	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined #haskell
2015-09-12 09:45:25	-->	ordepdev (~ordepdev@bl20-38-139.dsl.telepac.pt) has joined #haskell
2015-09-12 09:45:58	<--	umib0zu (~umib0zu@146.115.43.219) has quit (Client Quit)
2015-09-12 09:46:05	-->	suorm (5c6e165d@gateway/web/cgi-irc/kiwiirc.com/ip.92.110.22.93) has joined #haskell
2015-09-12 09:46:06	<--	DmitryBochkarev (~dima@213.87.240.186) has quit (Ping timeout: 240 seconds)
2015-09-12 09:46:10	Hakim	the purpose of the function is to give the number of cards in a hand....but i was expecting something like length or count
2015-09-12 09:46:29	Hakim	but rather i see the "Add" word....
2015-09-12 09:46:39	geekosaur	there isn't either defined for it. so a pattern match is being used to deconstruct the Hand
2015-09-12 09:46:39	<--	mettekou (~mettekou@94-224-246-64.access.telenet.be) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-09-12 09:46:44	-->	watabou (~watabou@unaffiliated/watabou) has joined #haskell
2015-09-12 09:47:02	-->	skore_de (~skore@2a02:908:cf11:8fe0:8d84:3a2b:b310:6118) has joined #haskell
2015-09-12 09:47:22	geekosaur	data Hand = Empty | Add Card Hand
2015-09-12 09:47:23	-->	paulyshore (62b0232e@gateway/web/cgi-irc/kiwiirc.com/ip.98.176.35.46) has joined #haskell
2015-09-12 09:47:40	-->	firstdayonthejob (~firstdayo@cpc9-croy22-2-0-cust203.19-2.cable.virginm.net) has joined #haskell
2015-09-12 09:47:49	geekosaur	Empty and Add are constructors for a Hand. in the case of Add, there is another Hand associated with it, as well as a Card
2015-09-12 09:48:06	suppi	mrkgnao, thank you!
2015-09-12 09:48:22	Hakim	i think am now starting to understand it pretty well
2015-09-12 09:48:46	Hakim	but this constructor, does it work like the constructors in procedural programming?
2015-09-12 09:48:47	geekosaur	to count these, we match against Empty (empty hand, count = 0) or (Add _ hand) (add 1 card to hand, plus the count of (size hand) (i.e. the rest of the hand)
2015-09-12 09:49:16	geekosaur	sort of, except procedural programs don';t generally do pattern matching like this
2015-09-12 09:49:27	geekosaur	when used like this, it's sometimes called a "destructor" instead
2015-09-12 09:49:42	-->	RegEchse (~regechse@ipbcc0bf64.dynamic.kabel-deutschland.de) has joined #haskell
2015-09-12 09:49:49	geekosaur	because we're kinda using it backwards
2015-09-12 09:49:51	suppi	though not the same as a destructor in OO languages at all
2015-09-12 09:49:56	geekosaur	yes
2015-09-12 09:50:11	mrkgnao	ah, not working properly, suppi.
2015-09-12 09:50:19	suppi	mrkgnao, too bad :(
2015-09-12 09:50:26	Hakim	oke...i think am starting to get the picture...
2015-09-12 09:50:38	-->	ansible1 (~kvirc@c-73-217-98-159.hsd1.co.comcast.net) has joined #haskell
2015-09-12 09:50:46	mrkgnao	for instance, renamed imports are supposed to be autocompleted properly.
2015-09-12 09:50:53	<--	nawal_ (~nawal@65.125.84.66) has quit (Quit: Leaving)
2015-09-12 09:50:55	<--	ordepdev (~ordepdev@bl20-38-139.dsl.telepac.pt) has quit (Remote host closed the connection)
2015-09-12 09:50:57	suppi	data Hand = Empty | Add Card Hand
2015-09-12 09:50:59	<--	rntz (~rntz@pool-96-248-68-233.cmdnnj.fios.verizon.net) has quit (Ping timeout: 260 seconds)
2015-09-12 09:51:05	<--	candiman (~cristian@179.38.191.253) has quit (Quit: Saliendo)
2015-09-12 09:51:13	-->	ordepdev (~ordepdev@bl20-38-139.dsl.telepac.pt) has joined #haskell
2015-09-12 09:51:14	suppi	is like defining two ways to represent a value of type Hand
2015-09-12 09:51:19	lvh	That seems like an ... interesting ... definition of Hand
2015-09-12 09:51:25	suppi	one value is Empty
2015-09-12 09:51:28	-->	trism (~jconti@unaffiliated/trism) has joined #haskell
2015-09-12 09:51:31	mrkgnao	So it basically says: a Hand is either empty, or a card plus a Hand.
2015-09-12 09:51:44	-->	syntagma (~syntagma@78.11.174.56) has joined #haskell
2015-09-12 09:51:46	suppi	Empty is a value of Hand
2015-09-12 09:51:47	<--	kamatsu (~Adium@123-243-95-236.static.tpgi.com.au) has quit (Quit: Leaving.)
2015-09-12 09:51:53	lvh	I guess maybe if someone is convolutedly trying to build linked lists without building linked lists or something?
2015-09-12 09:52:03	-->	umib0zu (~umib0zu@146-115-43-219.c3-0.abr-ubr1.sbo-abr.ma.cable.rcn.com) has joined #haskell
2015-09-12 09:52:44	-->	rntz (~rntz@pool-96-248-68-233.cmdnnj.fios.verizon.net) has joined #haskell
2015-09-12 09:52:55	<--	firstdayonthejob (~firstdayo@cpc9-croy22-2-0-cust203.19-2.cable.virginm.net) has quit (Read error: Connection reset by peer)
2015-09-12 09:52:56	-->	roconnor (~roconnor@host-45-58-253-49.dyn.295.ca) has joined #haskell
2015-09-12 09:53:01	Hakim	data Hand = Empty | Add Card Hand deriving (Eq, Show)...when am looking at a code like this one, i would translate it like....i am creating a custom data type called hand that can either be empty or contain a card onto a hand...
2015-09-12 09:53:13	Hakim	i dont know whether am even making sense out of it
2015-09-12 09:53:18	mrkgnao	you are :)
2015-09-12 09:53:20	suppi	and Add <Card> <Hand> is another value of Hand, which depends on <Card> and <Hand>
2015-09-12 09:53:33	<--	julianleviston (~random8r@c110-20-46-162.rivrw8.nsw.optusnet.com.au) has quit (Quit: julianleviston)
2015-09-12 09:53:44	<--	Voltz (ad3a7fa7@gateway/web/cgi-irc/kiwiirc.com/ip.173.58.127.167) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-09-12 09:53:49	suppi	Hakim, sounds pretty much it.
2015-09-12 09:54:11	mrkgnao	suppi, I'm trying to get it to work with Cabal now.
2015-09-12 09:54:17	mrkgnao	Hopefully it all works out.
2015-09-12 09:54:27	-->	DmitryBochkarev (~dima@213.87.249.127) has joined #haskell
2015-09-12 09:54:31	suppi	yes, good luck
2015-09-12 09:54:37	mrkgnao	I already smell Cabal hell brewing.
2015-09-12 09:54:48	mrkgnao	Any tips on dealing with version number problems?
2015-09-12 09:55:07	-->	DEA7TH (~DEA7TH@unaffiliated/dea7th) has joined #haskell
2015-09-12 09:55:31	<--	MedDev (~med@71-95-75-204.dhcp.ftwo.tx.charter.com) has quit (Ping timeout: 240 seconds)
2015-09-12 09:55:45	lpaste_	mrkgnao pasted “Cabal . . .” at http://lpaste.net/2137124247011590144
2015-09-12 09:55:59	mrkgnao	suppi, could you please take a look at that?
2015-09-12 09:56:00	-->	mada (~mariano@181.170.72.150) has joined #haskell
2015-09-12 09:56:49	suppi	mrkgnao, are you using sandboxes?
2015-09-12 09:56:50	mrkgnao	wait, I think I need happy.
2015-09-12 09:56:54	-->	legend (~blue@122.161.251.241) has joined #haskell
2015-09-12 09:56:55	mrkgnao	nope.
2015-09-12 09:56:55	<--	paulyshore (62b0232e@gateway/web/cgi-irc/kiwiirc.com/ip.98.176.35.46) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-09-12 09:56:59	geekosaur	use -v to see what actually failed
2015-09-12 09:57:02	-->	takle (~takle@56345e79.rev.stofanet.dk) has joined #haskell
2015-09-12 09:57:13	mrkgnao	I figured you don't have to for these "global" packages?
2015-09-12 09:57:21	-->	kamatsu (~Adium@123-243-95-236.static.tpgi.com.au) has joined #haskell
2015-09-12 09:57:30	suppi	I always use sandboxes :)
2015-09-12 09:57:39	mrkgnao	Ah, I installed happy and the installation is proceeding now.
2015-09-12 09:57:51	suppi	and just add the relevant .cabal-sandbox/bin to $PATH
2015-09-12 09:57:53	mrkgnao	Could you link me to a tut or something? I'm new.
2015-09-12 09:57:58	suppi	if their are global
2015-09-12 09:57:59	suppi	sure,
2015-09-12 09:58:00	geekosaur	yeh, cabal-install doesn't handle program dependencies
2015-09-12 09:58:00	<--	roconnor (~roconnor@host-45-58-253-49.dyn.295.ca) has quit (Ping timeout: 264 seconds)
2015-09-12 09:58:04	-->	roconnor_ (~roconnor@host-45-58-253-49.dyn.295.ca) has joined #haskell
2015-09-12 09:58:22	<--	zjlin (~zjlin@220-143-54-124.dynamic.hinet.net) has quit (Ping timeout: 244 seconds)
2015-09-12 09:58:29	-->	karmatr0n (~karmatr0n@189.146.157.231) has joined #haskell
2015-09-12 09:58:34	--	paf31 is now known as paf31_away
2015-09-12 09:58:35	suppi	mrkgnao, http://howistart.org/posts/haskell/1
2015-09-12 09:58:38	-->	L8D (~L8D@cpe-70-123-155-208.austin.res.rr.com) has joined #haskell
2015-09-12 09:59:24	mrkgnao	does using sandboxes help a lot?
2015-09-12 09:59:32	-->	unclechu1 (~unclechu@188.162.166.10) has joined #haskell
2015-09-12 09:59:37	mrkgnao	I mean, I guess it does.
2015-09-12 12:59:50	--	irc: disconnected from server
2015-09-12 14:07:34	-->	RouxTheD1 (~RouxTheDa@173.247.199.46) has joined #haskell
2015-09-12 14:07:34	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-09-12 14:07:34	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-09-12 14:07:34	--	Channel #haskell: 1505 nicks (1 op, 0 voices, 1504 normals)
2015-09-12 14:07:34	--	URL for #haskell: http://www.haskell.org/
2015-09-12 14:07:34	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-09-12 14:08:25	<--	KarolisK (~karolis@78-60-68-107.static.zebra.lt) has quit (Ping timeout: 246 seconds)
2015-09-12 14:09:02	-->	mettekou (~mettekou@94-224-246-64.access.telenet.be) has joined #haskell
2015-09-12 14:09:09	-->	argent0 (~aner@190.176.155.234) has joined #haskell
2015-09-12 14:09:28	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-09-12 14:09:28	<--	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has quit (Read error: Connection reset by peer)
2015-09-12 14:09:38	ReinH	well I guess that's it for today
2015-09-12 14:09:41	-->	Sgeo_ (~Sgeo@ool-44c0f875.dyn.optonline.net) has joined #haskell
2015-09-12 14:10:30	-->	clynamen (~clynamen@93-50-191-217.ip153.fastwebnet.it) has joined #haskell
2015-09-12 14:10:36	<--	jgertm (~amontimur@46.128.43.80.dynamic.cablesurf.de) has quit (Ping timeout: 264 seconds)
2015-09-12 14:11:25	-->	tristanp (~tristanp@2601:600:9000:a452:e4d4:2a8d:6aa9:2981) has joined #haskell
2015-09-12 14:11:45	<--	Sgeo (~Sgeo@ool-44c0f875.dyn.optonline.net) has quit (Ping timeout: 246 seconds)
2015-09-12 14:12:01	-->	slomo_ (~slomo@unaffiliated/slomo) has joined #haskell
2015-09-12 14:12:04	-->	MorpheusB (~morpheusb@95.211.172.97) has joined #haskell
2015-09-12 14:13:02	<--	Jules_ (~Jules@535283F7.cm-6-3c.dynamic.ziggo.nl) has quit (Ping timeout: 244 seconds)
2015-09-12 14:13:09	<--	slomo (~slomo@unaffiliated/slomo) has quit (Ping timeout: 246 seconds)
2015-09-12 14:14:16	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Ping timeout: 265 seconds)
2015-09-12 14:14:22	 *	hackagebot hjsonpointer 0.2.0.4 - JSON Pointer library  https://hackage.haskell.org/package/hjsonpointer-0.2.0.4 (seagreen)
2015-09-12 14:15:18	-->	juanpablo_ (~juanpablo@181.39.194.178) has joined #haskell
2015-09-12 14:15:49	-->	gkap (~gkap@197.157.224.171) has joined #haskell
2015-09-12 14:16:21	-->	inhortte (~polaris@181.Red-79-147-106.dynamicIP.rima-tde.net) has joined #haskell
2015-09-12 14:16:33	<--	slomo_ (~slomo@unaffiliated/slomo) has quit (Client Quit)
2015-09-12 14:16:36	<--	grouzen (~grouzen@diagonal-interview.volia.net) has quit (Ping timeout: 264 seconds)
2015-09-12 14:17:08	<--	faruq (~faruq@180.247.228.199) has quit (Remote host closed the connection)
2015-09-12 14:17:54	<--	cj3kim (~cj3kim@unaffiliated/cj3kim) has quit (Remote host closed the connection)
2015-09-12 14:18:06	-->	rossm (~rossm@host-92-28-16-215.as13285.net) has joined #haskell
2015-09-12 14:18:13	<--	inhortte (~polaris@181.Red-79-147-106.dynamicIP.rima-tde.net) has quit (Client Quit)
2015-09-12 14:19:00	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 264 seconds)
2015-09-12 14:19:41	-->	asil (~asil@2602:63:c2a2:af00:31b6:5f32:402a:1f4c) has joined #haskell
2015-09-12 14:19:56	-->	jbalint (~jbalint@24-240-72-190.dhcp.mdsn.wi.charter.com) has joined #haskell
2015-09-12 14:19:56	<--	jbalint (~jbalint@24-240-72-190.dhcp.mdsn.wi.charter.com) has quit (Changing host)
2015-09-12 14:19:56	-->	jbalint (~jbalint@unaffiliated/jbalint) has joined #haskell
2015-09-12 14:19:59	<--	juanpablo_ (~juanpablo@181.39.194.178) has quit (Ping timeout: 264 seconds)
2015-09-12 14:20:03	Sindriava	How do I export lenses?
2015-09-12 14:20:28	-->	TheUnobtrusiveMa (~Thunderbi@c-73-187-12-137.hsd1.pa.comcast.net) has joined #haskell
2015-09-12 14:21:12	<--	suppi (~suppi@unaffiliated/suppi) has quit (Quit: Leaving)
2015-09-12 14:22:07	<--	Aruseus (~aruseus@pD9FD9B6F.dip0.t-ipconnect.de) has quit (Quit: Leaving)
2015-09-12 14:22:25	-->	RedSpah (5941f209@gateway/web/freenode/ip.89.65.242.9) has joined #haskell
2015-09-12 14:22:45	RedSpah	hi all
2015-09-12 14:23:22	<--	aidanh (~aidanh@unaffiliated/aidanh) has quit (Read error: Connection reset by peer)
2015-09-12 14:23:57	ReinH	Sindriava: the same way as other functions.
2015-09-12 14:24:03	-->	submain (~user@rrcs-74-62-115-19.west.biz.rr.com) has joined #haskell
2015-09-12 14:24:09	--	asil is now known as ilken
2015-09-12 14:24:11	<--	foreignFunction (~ai@ip-4761.sunline.net.ua) has quit (Read error: Connection reset by peer)
2015-09-12 14:24:20	Sindriava	Huh
2015-09-12 14:24:24	<--	filmackay (~filmackay@cpc42-slam6-2-0-cust176.2-4.cable.virginm.net) has quit (Remote host closed the connection)
2015-09-12 14:24:26	Sindriava	I'm getting a GHC stage restriction
2015-09-12 14:24:32	<--	ilken (~asil@2602:63:c2a2:af00:31b6:5f32:402a:1f4c) has quit (Changing host)
2015-09-12 14:24:32	-->	ilken (~asil@unaffiliated/ilk) has joined #haskell
2015-09-12 14:24:35	RedSpah	so I literally started using Haskell today, and I got stuck in type error hell
2015-09-12 14:25:00	Sindriava	RedSpah: Go on
2015-09-12 14:25:13	scshunt	Sindriava: that is a template haskell issue
2015-09-12 14:25:19	<--	ril (~ril@c-67-188-43-174.hsd1.ca.comcast.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-09-12 14:25:22	<--	xylen (~codywelsh@c-73-189-204-160.hsd1.ca.comcast.net) has quit (Ping timeout: 260 seconds)
2015-09-12 14:25:23	Sindriava	scshunt: Ah. How do I fix it?
2015-09-12 14:25:23	scshunt	you can't splice something in the module that defins it
2015-09-12 14:25:29	RedSpah	that's the code: http://prntscr.com/8fmqvm
2015-09-12 14:25:51	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-09-12 14:25:54	ReinH	RedSpah: Better to use a pastie service and to include your error message
2015-09-12 14:25:56	scshunt	Sindriava: define it in a different module
2015-09-12 14:25:56	ReinH	@where lpaste
2015-09-12 14:25:57	lambdabot	http://lpaste.net/
2015-09-12 14:26:07	<--	lodin_ (~lodin@c-31-209-2-44.cust.bredband2.com) has quit (Ping timeout: 256 seconds)
2015-09-12 14:26:13	Sindriava	scshunt: Oh, it was because I forgot to import Control.Lens :|
2015-09-12 14:26:24	 *	Sindriava shakes fist at GHC errors
2015-09-12 14:26:40	-->	filmackay (~filmackay@cpc42-slam6-2-0-cust176.2-4.cable.virginm.net) has joined #haskell
2015-09-12 14:26:51	-->	aru1 (~Aruseus@pD9FD9B6F.dip0.t-ipconnect.de) has joined #haskell
2015-09-12 14:27:05	-->	NeverDie (~NeverDie@cpe-184-152-22-98.nyc.res.rr.com) has joined #haskell
2015-09-12 14:27:14	-->	Herogx_ (~Herogx@109.77.233.153) has joined #haskell
2015-09-12 14:27:17	<--	Herogx (~Herogx@109.77.233.153) has quit (Read error: Connection reset by peer)
2015-09-12 14:27:33	-->	xylen (~codywelsh@c-73-189-204-160.hsd1.ca.comcast.net) has joined #haskell
2015-09-12 14:27:35	RedSpah	can you directly copy text from ghci?
2015-09-12 14:27:42	<--	adek_ (~adek@50.141.32.255) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-09-12 14:29:35	--	irc: disconnected from server
2015-09-12 14:30:01	-->	RouxTheDay (~RouxTheDa@199.21.87.214) has joined #haskell
2015-09-12 14:30:01	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-09-12 14:30:01	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-09-12 14:30:01	--	Channel #haskell: 1504 nicks (1 op, 0 voices, 1503 normals)
2015-09-12 14:30:01	--	URL for #haskell: http://www.haskell.org/
2015-09-12 14:30:02	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-09-12 14:30:06	-->	aidanh (~aidanh@unaffiliated/aidanh) has joined #haskell
2015-09-12 14:30:28	RedSpah	wrote it in C afterwards, both return different values but I can't quite tell which is wrong
2015-09-12 14:30:36	<--	BlockyNight (~jon@78.143.169.70) has quit (Ping timeout: 244 seconds)
2015-09-12 14:30:42	Sindriava	RedSpah: Give me a sec
2015-09-12 14:30:43	RedSpah	the funny thing that it ain't even math homework
2015-09-12 14:30:46	submain	imPure: maybe you can use case .. of in the result?
2015-09-12 14:31:14	RedSpah	here's the error: http://prntscr.com/8fms6o
2015-09-12 14:31:35	<--	aru1 (~Aruseus@pD9FD9B6F.dip0.t-ipconnect.de) has quit (Client Quit)
2015-09-12 14:31:35	-->	rgrinberg (~rgrinberg@2604:2000:e86a:c900:8c62:67b3:32fe:2d5) has joined #haskell
2015-09-12 14:31:41	submain	Why is my ghc mode not getting updated with new cabal packages? Anyone has any clues?
2015-09-12 14:31:46	<--	nkhodyunya (~Adium@dnm.227.127.124.92.dsl.krasnet.ru) has quit (Quit: Leaving.)
2015-09-12 14:31:47	submain	*ghc mod
2015-09-12 14:31:47	<--	RouxTheD1 (~RouxTheDa@173.247.199.46) has quit (Ping timeout: 256 seconds)
2015-09-12 14:43:24	--	irc: disconnected from server
2015-09-12 14:43:51	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-09-12 14:43:51	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-09-12 14:43:51	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-09-12 14:43:51	--	Channel #haskell: 1499 nicks (1 op, 0 voices, 1498 normals)
2015-09-12 14:43:51	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-09-12 14:43:51	--	URL for #haskell: http://www.haskell.org/
2015-09-12 14:43:54	Sindriava	ReinH: I never demanded they not use the answer.
2015-09-12 14:43:59	Sindriava	RedSpah: f $ blah blah blah == f (blah blah blah)
2015-09-12 14:44:03	kadoban	RedSpah: The key to remember about numbers in haskell is: there are /no/ implicit conversions. In C if you have and integer 5 and use it like a float -- boom, it's a float now. That doesn't happen in haskell. You have to explicitly tell it to convert it.
2015-09-12 14:44:05	-->	ordepdev (~ordepdev@bl20-38-139.dsl.telepac.pt) has joined #haskell
2015-09-12 14:44:17	ReinH	"Sindriava │ RedSpah: But don't you dare copypaste that code until you know precisely what it does"
2015-09-12 14:44:32	<--	ordepdev (~ordepdev@bl20-38-139.dsl.telepac.pt) has quit (Remote host closed the connection)
2015-09-12 14:44:44	Sindriava	ReinH: Yeah, where is the part that demands they not use it, precisely?
2015-09-12 14:44:54	ReinH	Uh, the entire thing?
2015-09-12 14:44:58	Sindriava	ReinH: I only demanded they not use it until they know how it works.
2015-09-12 14:45:17	RedSpah	the homework itself was from CS, I had to figure out the algorithm itself, but I wanted to look clever and implement it, since 4/5 of the class hasn't programmed, and the remaining 20% seems to only have had c++
2015-09-12 14:45:23	ReinH	Do you think arguing about this is worth our time?
2015-09-12 14:45:33	Sindriava	ReinH: By your logic, I'd claim all numbers are even, if I stated "x is even, unless it's remainder after division is 2"
2015-09-12 14:45:35	<--	EunChe (~eunche@221.154.182.251) has quit (Ping timeout: 250 seconds)
2015-09-12 14:45:44	<--	_loic_ (~loic@pri24-1-78-224-77-42.fbx.proxad.net) has quit (Remote host closed the connection)
2015-09-12 14:45:44	Sindriava	ReinH: Is it worth yours? I've clearly not stated what you said.
2015-09-12 14:45:51	ReinH	Ok.
2015-09-12 14:46:09	kadoban	RedSpah: That is a very good idea. Actually implementing stuff will do you well.
2015-09-12 14:46:28	<--	Aruseus (~Aruseus@pD9FD9B6F.dip0.t-ipconnect.de) has quit (Quit: WeeChat 1.3)
2015-09-12 14:46:36	<--	kristof (~kristof@unaffiliated/kristof) has quit (Ping timeout: 264 seconds)
2015-09-12 14:46:46	-->	Aruseus (~Aruseus@pD9FD9B6F.dip0.t-ipconnect.de) has joined #haskell
2015-09-12 14:46:47	Sindriava	RedSpah: Yeah, making a solution is worth reading 5 solutions
2015-09-12 14:47:03	ReinH	Good job ignoring the point I was making and trying to have a pedantic argument instead.
2015-09-12 14:47:21	Sindriava	ReinH: Why are you so aggressive? :(
2015-09-12 14:47:29	ReinH	Sindriava: I'm the aggressive one?
2015-09-12 14:47:42	ReinH	You might reread your responses to me.
2015-09-12 14:47:53	<--	Aruseus (~Aruseus@pD9FD9B6F.dip0.t-ipconnect.de) has quit (Client Quit)
2015-09-12 14:47:55	kadoban	ReinH: It's very possible that they didn't understand the point you were trying to make and just saw it as a pedantic wordplay in the first place.
2015-09-12 14:48:06	Sindriava	ReinH: I'm sorry if me making sure I was understood correctly offended you, but I'm starting to get *really* distressed by the tone you're taking.
2015-09-12 14:48:06	-->	chirpsalot (~Chirps@unaffiliated/chirpsalot) has joined #haskell
2015-09-12 14:48:12	RedSpah	Okay now how do you apply a function to every other element of the list
2015-09-12 14:48:16	Sindriava	RedSpah: For problems like these, it's good to manually write out first few elements and see if there's a pattern emerging :)
2015-09-12 14:48:30	<--	breadmonster (0e8b2df1@gateway/web/freenode/ip.14.139.45.241) has quit (Ping timeout: 246 seconds)
2015-09-12 14:48:30	Sindriava	kadoban: Thank you.
2015-09-12 14:48:49	-->	Aruseus (~Aruseus@pD9FD9B6F.dip0.t-ipconnect.de) has joined #haskell
2015-09-12 14:49:02	RedSpah	oh, figuring the algorithm itself was trivial, but I wanted to use it to learn a foreign language
2015-09-12 14:49:46	Sindriava	RedSpah: One thing that's specific about Haskell (or indeed functional programming) is that you often describe *what things are*, instead of *how to compute them*
2015-09-12 14:50:06	kadoban	RedSpah: Learning Haskell that way is going to be a bit tough probably (depending on your background in other languages).
2015-09-12 14:50:15	Sindriava	RedSpah: That can be very confusing for people coming from imperative backgrounds.
2015-09-12 14:50:21	-->	Herogx__ (~Herogx@109.77.233.153) has joined #haskell
2015-09-12 14:50:27	RedSpah	5 years of C++/C# and pretty much nothing else won't be of much help
2015-09-12 14:50:34	<--	Herogx_ (~Herogx@109.77.233.153) has quit (Read error: Connection reset by peer)
2015-09-12 14:50:35	<--	dougia (~dougia@S0106ac220b8dbbe5.gv.shawcable.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-09-12 14:50:39	<--	Luke (~luke@unaffiliated/luke) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-09-12 14:50:44	<--	jo__ (uid41683@gateway/web/irccloud.com/x-zzhcrradhmundbbu) has quit (Quit: Connection closed for inactivity)
2015-09-12 14:50:49	kadoban	RedSpah: As to how to apply a function to every other element in a list.  Do you know about any of: zipWith, ($) and 'id` ?
2015-09-12 14:50:54	-->	paul_erdos (~textual@Bens-MBP-2.wv.cc.cmu.edu) has joined #haskell
2015-09-12 14:51:22	Welkin	> zipWith ($) (repeat [id, (+1)]) [1,2,3,4,5,6,7]
2015-09-12 14:51:23	lambdabot	     Couldn't match expected type ‘Integer -> c’
2015-09-12 14:51:23	lambdabot	                 with actual type ‘[Integer -> Integer]’
2015-09-12 14:51:24	lambdabot	     In the first argument of ‘repeat’, namely ‘[id, (+ 1)]’
2015-09-12 14:51:26	Sindriava	RedSpah: They will be of great help, but only if you don't dwell on them. Way too many people get scared when a new languages is too different
2015-09-12 14:51:36	kadoban	RedSpah: Ah. Yeah Haskell has /quite/ different semantics than imperative style languages. If you're serious about learning it you might want to start with a good guide, like https://github.com/bitemyapp/learnhaskell is nice.
2015-09-12 14:51:43	Sindriava	Welkin: You want cycle.
2015-09-12 14:51:51	ReinH	I still don't think providing answers that people don't understand is a good way of teaching.
2015-09-12 14:52:05	MarcelineVQ	> zipWith ($) (cycle [id,(*2)]) [1..10]
2015-09-12 14:52:05	Welkin	I always confuse repeat and cycle
2015-09-12 14:52:06	Welkin	haha
2015-09-12 14:52:07	lambdabot	 [1,4,3,8,5,12,7,16,9,20]
2015-09-12 14:52:20	kadoban	ReinH: I agree. (I don't think he correctly read your initial message, which made him take it the wrong way).
2015-09-12 14:52:38	ReinH	kadoban: That's reasonable. It wasn't clearly worded.
2015-09-12 14:52:45	Sindriava	ReinH: You might have wanted to actually start with that statement, yeah.
2015-09-12 14:52:55	<--	LnL (~LnL@d54C5A6CC.access.telenet.be) has quit (Ping timeout: 260 seconds)
2015-09-12 14:53:38	kadoban	Welkin: I do too XD Like, every time *sigh*
2015-09-12 14:54:09	ReinH	Sindriava: fair point.
2015-09-12 14:54:09	<--	mettekou (~mettekou@94-224-246-64.access.telenet.be) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-09-12 14:54:21	-->	mettekou (~mettekou@94-224-246-64.access.telenet.be) has joined #haskell
2015-09-12 14:54:23	-->	v (a6aa0e75@gateway/web/freenode/ip.166.170.14.117) has joined #haskell
2015-09-12 14:54:24	 *	hackagebot envy 0.3.0.0 - An environmentally friendly way to deal with environment variables  https://hackage.haskell.org/package/envy-0.3.0.0 (DavidJohnson)
2015-09-12 14:54:39	Sindriava	ReinH: Sorry if I came of as pedantic, I often sound like that since I tend to get very nitpicky about what I said and how I said it
2015-09-12 14:54:49	ReinH	Sindriava: I understand that impulse.
2015-09-12 14:54:57	ReinH	Apologies for being aggressive.
2015-09-12 14:56:39	Sindriava	ReinH: What you said is the reason I've been talking with them for the last 10 minutes. Personally, I find the best way to learn is to get slammed in the face with the correct, idiomatic solution and then making sure I understand it thoroughly before moving on
2015-09-12 14:56:39	kadoban	I don't tend to be able to learn like that, unless I'm /very/ close to understanding it already.
2015-09-12 14:56:39	-->	Herogx_ (~Herogx@109.77.233.153) has joined #haskell
2015-09-12 14:56:39	Sindriava	Granted, it's likely because I was taught like that and it might not work for everyone
2015-09-12 14:56:39	<--	Herogx__ (~Herogx@109.77.233.153) has quit (Read error: Connection reset by peer)
2015-09-12 14:56:43	kadoban	Yeah I think it depends, unfortunately. It'd be so much easier if everyone learned the same way.
2015-09-12 14:56:56	Sindriava	Where's the fun in that :P
2015-09-12 14:57:07	RedSpah	> sum (zipWith (*) (take 6 (mconcat [replicate 3 (1000 + i * 5) | i <- [0..]])) (take 6 (cycle [1.0,1.1]))) 
2015-09-12 14:57:09	lambdabot	 6316.0
2015-09-12 14:57:26	RedSpah	that seems to work
2015-09-12 14:57:56	Sindriava	RedSpah: But now it's unreadable. Try to slice it up into smaller chunks, parametrize them (make them into functions) and it will get a lot nicer :)
2015-09-12 15:02:39	Welkin	yeah
2015-09-12 15:02:39	Welkin	a good goal is a clean pipeline of functions composed together
2015-09-12 15:02:39	Welkin	f . g . h
2015-09-12 15:02:39	<--	v (a6aa0e75@gateway/web/freenode/ip.166.170.14.117) has quit (Ping timeout: 246 seconds)
2015-09-12 15:02:39	ReinH	 It'll immediately get a lot nicer if you start using composition.
2015-09-12 15:02:39	mniip	watcha guys doing
2015-09-12 15:02:39	<--	mson (uid110608@gateway/web/irccloud.com/x-sdasriibelablmni) has quit (Quit: Connection closed for inactivity)
2015-09-12 15:02:39	-->	zjlin (~zjlin@36-236-211-197.dynamic-ip.hinet.net) has joined #haskell
2015-09-12 15:02:39	--	zjlin is now known as Guest99448
2015-09-12 15:02:39	<--	Rurik (~topkek@unaffiliated/temur) has quit (Read error: Connection reset by peer)
2015-09-12 15:02:39	-->	Goplat (~goplat@reactos/developer/Goplat) has joined #haskell
2015-09-12 15:02:39	ReinH	Also note that zipWith f (take n xs) (take n ys) = take n (zipWith f xs ys)
2015-09-12 15:02:39	-->	indiagreen (~indiagree@nat4-minsk-pool-46-53-176-141.telecom.by) has joined #haskell
2015-09-12 15:02:39	ReinH	with no loss of efficiency
2015-09-12 15:02:39	ReinH	in fact, possibly improved efficiency
2015-09-12 15:02:39	-->	Intolerable (~Adium@host-78-150-100-61.as13285.net) has joined #haskell
2015-09-12 15:02:39	<--	submain (~user@rrcs-74-62-115-19.west.biz.rr.com) has quit (Remote host closed the connection)
2015-09-12 15:02:39	-->	Guest20394 (~sinister@cpc80547-grim20-2-0-cust83.12-3.cable.virginm.net) has joined #haskell
2015-09-12 15:02:39	<--	meoblast001 (~meoblast@91.240.64.22) has quit (Ping timeout: 240 seconds)
2015-09-12 15:02:39	ReinH	(this is also a nice introduction to equational reasoning, which will come in handy a very frequently)
2015-09-12 15:02:39	-->	dreixel___ (~dreixel@cpc2-popl3-2-0-cust897.13-2.cable.virginm.net) has joined #haskell
2015-09-12 15:02:39	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined #haskell
2015-09-12 15:02:53	-->	kristof (~kristof@unaffiliated/kristof) has joined #haskell
2015-09-12 15:03:04	<--	m0rphism (~m0rphism@HSI-KBW-095-208-106-119.hsi5.kabel-badenwuerttemberg.de) has quit (Quit: Leaving.)
2015-09-12 15:03:27	-->	Rurik (~topkek@117.214.119.67) has joined #haskell
2015-09-12 15:03:32	Gurkenglas	Can one (using ala, probably?) simplify loopM in the direction of loop? http://lpaste.net/137991
2015-09-12 15:03:46	<--	Rurik (~topkek@117.214.119.67) has quit (Changing host)
2015-09-12 15:03:46	-->	Rurik (~topkek@unaffiliated/temur) has joined #haskell
2015-09-12 15:04:00	<--	Guest99448 (~zjlin@36-236-211-197.dynamic-ip.hinet.net) has quit (Ping timeout: 264 seconds)
2015-09-12 15:04:05	ReinH	(.) . liftM o_O
2015-09-12 15:04:53	Gurkenglas	Yea, I "lens" the (either id absurd) first out of the monad, then out of the (s ->)
2015-09-12 15:04:56	RedSpah	what's the typeclass that includes all numbers?
2015-09-12 15:05:06	Sindriava	RedSpah: Num
2015-09-12 15:05:08	Sindriava	:t 1
2015-09-12 15:05:10	-->	meoblast001 (~meoblast@91.240.64.22) has joined #haskell
2015-09-12 15:05:10	lambdabot	Num a => a
2015-09-12 15:05:13	RedSpah	thx
2015-09-12 15:05:17	-->	Sonarpulse (~user@unaffiliated/sonarpulse) has joined #haskell
2015-09-12 15:31:07	--	irc: disconnected from server
2015-09-12 15:34:48	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-09-12 15:34:48	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-09-12 15:34:48	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-09-12 15:34:48	--	Channel #haskell: 1489 nicks (1 op, 0 voices, 1488 normals)
2015-09-12 15:34:48	--	URL for #haskell: http://www.haskell.org/
2015-09-12 15:34:49	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-09-12 15:34:53	<--	skore_de (~skore@2a02:908:cf11:8fe0:8d84:3a2b:b310:6118) has quit (Ping timeout: 252 seconds)
2015-09-12 15:35:11	<--	pie__ (~pie_@unaffiliated/pie-/x-0787662) has quit (Ping timeout: 244 seconds)
2015-09-12 15:35:14	srhb	RedSpah: You're also missing an Enum constraint for [0..]
2015-09-12 15:35:21	--	paf31 is now known as paf31_away
2015-09-12 15:35:35	<--	adek (~adek@50.141.32.255) has quit (Ping timeout: 264 seconds)
2015-09-12 15:35:46	<--	Guest20394 (~sinister@cpc80547-grim20-2-0-cust83.12-3.cable.virginm.net) has quit (Quit: leaving)
2015-09-12 15:35:46	jmcarthur	well, i'm against making error messages harder to understand for experts just because they don't need as much. good error messages are good for everybody.
2015-09-12 15:35:49	kadoban	Of course figuring out what things need different messages depending on if you're a beginner or not is pretty hard ... sigh.
2015-09-12 15:36:03	--	paf31_away is now known as paf31
2015-09-12 15:36:06	jmcarthur	but i think something like a more limited version of haskell for beginners wouldn't be so bad.
2015-09-12 15:36:17	srhb	RedSpah: You should try reading the error messages again with this knowledge, they're saying exactly what I just did. Pay particular attention to "... in the first argument of ..." in the Int error.
2015-09-12 15:36:23	jmcarthur	as long as it's easy to turn on, and is compatible with libraries written in "expert mode"
2015-09-12 15:36:26	<--	Reite (Reite@cm-84.215.180.224.getinternet.no) has quit (Ping timeout: 265 seconds)
2015-09-12 15:36:44	Sindriava	jmcarthur: IMO Elm managed to make easy error messages while retaining information
2015-09-12 15:37:05	<--	spaceloop (~spaceloop@230pc66.sshunet.nl) has quit (Remote host closed the connection)
2015-09-12 15:37:07	Sindriava	jmcarthur: A lot of the time you don't need less information in the error message, you just need to word it differently
2015-09-12 15:37:11	jmcarthur	anyway, no error message could fix   7 8 9
2015-09-12 15:37:22	jmcarthur	that would just need to be turned off for beginners
2015-09-12 15:37:52	jmcarthur	(because obviously it doesn't generate an error!)
2015-09-12 15:37:53	-->	firstdayonthejob (~firstdayo@cpc9-croy22-2-0-cust203.19-2.cable.virginm.net) has joined #haskell
2015-09-12 15:38:01	-->	rgrinberg (~rgrinberg@static-71-249-221-29.nycmny.east.verizon.net) has joined #haskell
2015-09-12 15:38:04	RedSpah	How to precise the type of the argument to Int? (substituting Integral for Int produces yet another error)
2015-09-12 15:38:14	srhb	RedSpah: Int is a type, not a type class
2015-09-12 15:38:26	--	paf31 is now known as paf31_away
2015-09-12 15:38:28	RedSpah	I've gathered this much
2015-09-12 15:38:29	srhb	RedSpah: so your constraints => b -> b -> Int -> [b]
2015-09-12 15:38:31	exio4	which is an instance of a typeclass, with magically, happen to be intrusive, and if any library the beginner is using happens to put that instance in scope, ...
2015-09-12 15:38:37	Sindriava	RedSpah: `Integral a => a` -> `Int`
2015-09-12 15:38:51	RedSpah	oh
2015-09-12 15:39:12	<--	tristanp (~tristanp@2601:600:9000:a452:adb6:dc81:aaed:2e3a) has quit (Remote host closed the connection)
2015-09-12 15:39:57	RedSpah	I can't find anything on enum constraints, mind enlightening me?
2015-09-12 15:40:14	srhb	RedSpah: You can't do [n..] on any type that is not an instance of Enum
2015-09-12 15:40:29	srhb	RedSpah: So you must add that constraint to the return type, since that is the type of i as well.
2015-09-12 15:40:36	srhb	Er, to b, rather.
2015-09-12 15:40:37	-->	malkomalko (~malkomalk@out.dentsuamerica.com) has joined #haskell
2015-09-12 15:40:44	jmcarthur	@info Enum
2015-09-12 15:40:44	lambdabot	Enum
2015-09-12 15:40:46	jmcarthur	wow
2015-09-12 15:40:48	ReinH	jmcarthur: Well, luckily it isn't turned on for beginners in the first place :)
2015-09-12 15:40:49	srhb	RedSpah: You can also query ghci with :i Enum
2015-09-12 15:40:50	jmcarthur	such useful
2015-09-12 15:40:58	srhb	RedSpah: To see which methods it exposes :)
2015-09-12 15:41:01	jmcarthur	ReinH: luckily for beginners, at least
2015-09-12 15:41:08	Sindriava	RedSpah: Enum are types that can be enumerated. The bare minimum is the `succ` functions, which returns the next element
2015-09-12 15:41:08	<--	Bez_ (~quassel@vpn.ffa.priv.de) has quit (Read error: Connection reset by peer)
2015-09-12 15:41:09	ReinH	I can always import it if I need it.
2015-09-12 15:41:11	Sindriava	:t succ
2015-09-12 15:41:12	lambdabot	Enum a => a -> a
2015-09-12 15:41:16	Sindriava	> succ 'a'
2015-09-12 15:41:17	lambdabot	 'b'
2015-09-12 15:41:29	ReinH	jmcarthur: Or probably there's some alternative prelude I could use.
2015-09-12 15:41:32	jmcarthur	i don't like relying on an orphan instance
2015-09-12 15:41:39	Sindriava	RedSpah: That's how [a..] works. it returns [a, succ a, succ (succ a), …]
2015-09-12 15:41:50	ReinH	jmcarthur: fair point
2015-09-12 15:41:54	<--	cyphase (~cyphase@unaffiliated/cyphase) has quit (Ping timeout: 244 seconds)
2015-09-12 15:42:03	RedSpah	so, how do I specify that i is an Enum?
2015-09-12 16:11:06	--	irc: disconnected from server
2015-09-12 16:11:32	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-09-12 16:11:32	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-09-12 16:11:32	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-09-12 16:11:33	--	Channel #haskell: 1480 nicks (1 op, 0 voices, 1479 normals)
2015-09-12 16:11:33	--	URL for #haskell: http://www.haskell.org/
2015-09-12 16:11:33	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-09-12 16:11:37	-->	swgillespie (~textual@104.232.112.57) has joined #haskell
2015-09-12 16:11:42	Cale	some_types: So we can try to design something saner. It's hard to do this well without knowing what's really happening.
2015-09-12 16:12:24	<--	swgillespie (~textual@104.232.112.57) has quit (Client Quit)
2015-09-12 16:12:56	<--	centrinia (~centrinia@2602:306:bd0d:a690:5889:736a:685c:7566) has quit (Ping timeout: 244 seconds)
2015-09-12 16:13:15	some_types	Cale: uh, so it's a compiler for a language that's sort of like C, and it has intermediate representations of the language that add more and more operations as you get closer to assembly. I don't think there's much more designing you can do.
2015-09-12 16:13:20	<--	PinballWzrd (~user@2602:306:3be8:4750:d4bb:83fa:12c6:29ed) has quit (Remote host closed the connection)
2015-09-12 16:13:47	-->	PinballWzrd (~user@2602:306:3be8:4750:d4bb:83fa:12c6:29ed) has joined #haskell
2015-09-12 16:14:29	<--	Aditi (~Aditi@176.22.135.179) has quit (Remote host closed the connection)
2015-09-12 16:14:39	Hijiri	I would probably just give each representation its own datatype
2015-09-12 16:15:18	<--	Rurik (~topkek@unaffiliated/temur) has quit (Read error: Connection reset by peer)
2015-09-12 16:15:34	Cale	Yeah, that's reasonable.
2015-09-12 16:15:49	Cale	There are some fancy things you can pull off with GADTs
2015-09-12 16:16:25	-->	Rurik (~topkek@unaffiliated/temur) has joined #haskell
2015-09-12 16:16:26	<--	tristanp_ (~tristanp@c-73-181-152-38.hsd1.wa.comcast.net) has quit (Remote host closed the connection)
2015-09-12 16:16:27	Cale	Where you define a single big type for all the languages, but index the results based on which intermediate languages the operations are allowed in
2015-09-12 16:16:45	some_types	Cale: oh, that sounds pretty good
2015-09-12 16:16:48	-->	isocliff (~isocliff@dhcp-5-103-179-101.seas-nve.net) has joined #haskell
2015-09-12 16:16:49	Cale	That's handy in that you can then define polymorphic operations
2015-09-12 16:16:57	<--	jaffachief (~textual@cpc7-broo8-2-0-cust35.14-2.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-09-12 16:17:34	some_types	Cale: how do you do this indexing thing?
2015-09-12 16:21:35	Cale	So you'd have some types for each of the levels whose only purpose is to serve as a tag
2015-09-12 16:21:35	-->	leonardoajim (~leonardoa@186.6.230.130) has joined #haskell
2015-09-12 16:21:35	Cale	data Level1 = Level1
2015-09-12 16:21:35	Cale	data Level2 = Level2
2015-09-12 16:21:35	Cale	etc.
2015-09-12 16:21:35	Cale	and then you have something like:
2015-09-12 16:21:35	Cale	data Operation a where
2015-09-12 16:21:35	Cale	   Add :: ... -> Operation Level1
2015-09-12 16:21:35	<--	firstdayonthejob (~firstdayo@cpc9-croy22-2-0-cust203.19-2.cable.virginm.net) has quit (Ping timeout: 260 seconds)
2015-09-12 16:21:35	<--	PinballWzrd (~user@2602:306:3be8:4750:d4bb:83fa:12c6:29ed) has quit (Remote host closed the connection)
2015-09-12 16:21:35	-->	tristanp (~tristanp@2601:600:9000:a452:2ccd:94bb:f799:4a48) has joined #haskell
2015-09-12 16:21:35	exio4	Cale: data Level = Level1 | Level2 | Level3 ; data Operation (a :: Level) where ... with DataKinds! :P 
2015-09-12 16:21:35	<--	leonardoajim (~leonardoa@186.6.230.130) has quit (Read error: Connection reset by peer)
2015-09-12 16:21:35	<--	erisco (~erisco@198-84-154-240.cpe.teksavvy.com) has quit (Quit: Leaving)
2015-09-12 16:21:35	Cale	exio4: Yeah, you can do that as well, which is a bit nicer.
2015-09-12 16:21:35	<--	jmcarthur (~jmcarthur@pool-100-2-120-245.nycmny.fios.verizon.net) has quit (Quit: WeeChat 1.1.1)
2015-09-12 16:21:35	Cale	(but requires learning about one more extension)
2015-09-12 16:21:35	exio4	and then you add type families for working with multiple levels (some LTE function), and end rewriting the code in Idris :p 
2015-09-12 16:21:35	-->	leonardoajim (~leonardoa@186.6.230.130) has joined #haskell
2015-09-12 16:21:35	Cale	yep
2015-09-12 16:21:35	Cale	Pretty much
2015-09-12 16:21:35	Cale	haha
2015-09-12 16:21:35	some_types	I'm not sure I understand this: 
2015-09-12 16:21:35	some_types	Add :: ... -> Operation Level1
2015-09-12 16:21:35	<--	isocliff (~isocliff@dhcp-5-103-179-101.seas-nve.net) has quit (Ping timeout: 246 seconds)
2015-09-12 16:21:35	<--	askalski (~akuda@91.238.216.2) has quit (Quit: Wychodzi)
2015-09-12 16:21:35	-->	paul_erdos (~textual@Bens-MBP-2.wv.cc.cmu.edu) has joined #haskell
2015-09-12 16:21:35	<--	yeji (~yeji@cpe-24-193-184-205.nj.res.rr.com) has quit (Remote host closed the connection)
2015-09-12 16:21:39	-->	yeji (~yeji@cpe-24-193-184-205.nj.res.rr.com) has joined #haskell
2015-09-12 16:21:46	<--	irrequietus (~irqus@unaffiliated/irrequietus) has quit
2015-09-12 16:21:51	Cale	some_types: I'm assuming that Add has some arguments there, if it doesn't, it would just be  Add :: Operation Level1
2015-09-12 16:21:54	<--	ttt_fff (88988e3a@gateway/web/freenode/ip.136.152.142.58) has quit (Quit: Page closed)
2015-09-12 16:22:15	some_types	oh, nope, no arguments.
2015-09-12 16:22:15	<--	refold (~gman@h-129-27.a258.priv.bahnhof.se) has quit (Quit: leaving)
2015-09-12 16:22:16	<--	tristanp (~tristanp@2601:600:9000:a452:2ccd:94bb:f799:4a48) has quit (Remote host closed the connection)
2015-09-12 16:22:40	some_types	okay, I think that works.
2015-09-12 16:22:40	Cale	(usually addition has operands ;)
2015-09-12 16:23:07	<--	darkbolt (~darkbolt@23.252.55.57) has quit (Remote host closed the connection)
2015-09-12 16:23:17	some_types	Yeah, lol, it's possibly more useful to think of this as a plus sign
2015-09-12 16:23:20	Cale	So yeah, now the tricky part is that you're going to want to be able to express that something has level less than or equal to 3 or something like that
2015-09-12 16:23:24	-->	gentleben (~gentleben@c-98-207-43-107.hsd1.ca.comcast.net) has joined #haskell
2015-09-12 16:23:40	some_types	nah, I can just make Level2 = Level2 | Level1
2015-09-12 16:23:40	-->	tristanp (~tristanp@2601:600:9000:a452:a868:4767:4343:814) has joined #haskell
2015-09-12 16:23:42	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-09-12 16:23:54	Cale	huh?
2015-09-12 16:23:54	Cale	nope
2015-09-12 16:31:06	--	irc: disconnected from server
2015-09-12 16:31:32	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-09-12 16:31:32	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-09-12 16:31:32	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-09-12 16:31:32	--	Channel #haskell: 1474 nicks (1 op, 0 voices, 1473 normals)
2015-09-12 16:31:32	--	URL for #haskell: http://www.haskell.org/
2015-09-12 16:31:32	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-09-12 16:47:30	--	irc: disconnected from server
2015-09-12 16:47:57	-->	RouxTheDay (~RouxTheDa@173.247.199.46) has joined #haskell
2015-09-12 16:47:57	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-09-12 16:47:57	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-09-12 16:47:57	--	Channel #haskell: 1475 nicks (1 op, 0 voices, 1474 normals)
2015-09-12 16:47:57	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-09-12 16:47:57	--	URL for #haskell: http://www.haskell.org/
2015-09-12 16:48:12	<--	urodna (~urodna@unaffiliated/urodna) has quit (Ping timeout: 246 seconds)
2015-09-12 16:48:27	--	paf31 is now known as paf31_away
2015-09-12 16:48:34	int-index	If you want to build local documentation for all libraries you install, enable documentation in your `~/.cabal/config`
2015-09-12 16:48:54	<--	roconnor_ (~roconnor@host-45-58-253-49.dyn.295.ca) has quit (Ping timeout: 246 seconds)
2015-09-12 16:48:57	Guest44711	int-index: ReinH: Thanks.
2015-09-12 16:49:02	<--	snyrk (~snyrk@84.227.251.154) has quit (Ping timeout: 272 seconds)
2015-09-12 16:49:33	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Max SendQ exceeded)
2015-09-12 16:49:40	<--	prophile (~alynn@oftn/member/prophile) has quit (Ping timeout: 272 seconds)
2015-09-12 16:49:43	-->	V_ (~xzhu@128.171.232.10) has joined #haskell
2015-09-12 16:50:04	MarcelineVQ	Just to add, if you're after standard library documentation, you can find it here https://downloads.haskell.org/~ghc/latest/docs/html/libraries/
2015-09-12 16:50:34	MarcelineVQ	Or just search hoogle
2015-09-12 16:50:55	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined #haskell
2015-09-12 16:51:09	<--	V_ (~xzhu@128.171.232.10) has quit (Client Quit)
2015-09-12 16:51:22	int-index	MarcelineVQ: It's also on Hackage
2015-09-12 16:51:29	ReinH	@hackage base
2015-09-12 16:51:29	lambdabot	http://hackage.haskell.org/package/base
2015-09-12 16:51:30	-->	trvoldemort (~xzhu@128.171.232.10) has joined #haskell
2015-09-12 16:51:30	--	trvoldemort is now known as V_
2015-09-12 16:51:36	-->	rola (~a@2605:6400:20:255f:22:0:fde:35f1) has joined #haskell
2015-09-12 16:52:24	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 246 seconds)
2015-09-12 16:52:50	--	V_ is now known as trvoldemore
2015-09-12 16:52:59	--	trvoldemore is now known as trvoldemort
2015-09-12 16:55:54	<--	RedSpah (5941f209@gateway/web/freenode/ip.89.65.242.9) has quit (Ping timeout: 246 seconds)
2015-09-12 16:56:24	trvoldemort	Hello, TESTING! Don't reply.
2015-09-12 16:57:24	-->	leonardoajim (~leonardoa@186.6.230.130) has joined #haskell
2015-09-12 16:57:25	-->	KaneTW (~kane@srv2.kane.cx) has joined #haskell
2015-09-12 16:57:46	<--	Guest44711 (~sinister@cpc80547-grim20-2-0-cust83.12-3.cable.virginm.net) has quit (Ping timeout: 252 seconds)
2015-09-12 16:58:13	<--	Rurik (~topkek@unaffiliated/temur) has quit (Read error: Connection reset by peer)
2015-09-12 16:58:43	<--	trvoldemort (~xzhu@128.171.232.10) has quit (Quit: trvoldemort)
2015-09-12 16:58:54	<--	Cale (~Cale@CPEc8d3a35c2cdd-CM0c473de9d680.cpe.net.cable.rogers.com) has quit (Read error: Connection reset by peer)
2015-09-12 16:59:05	<--	zcourts (~zcourts@cpc5-croy18-2-0-cust555.croy.cable.virginm.net) has quit (Quit: zcourts)
2015-09-12 16:59:19	-->	trvoldemort (~xzhu@128.171.232.10) has joined #haskell
2015-09-12 16:59:23	<--	trvoldemort (~xzhu@128.171.232.10) has quit (Client Quit)
2015-09-12 16:59:26	drewbert	Is there a set of higher-order abstractions for template haskell functions? Let's say I have a Name of a TyCon and I want to list the names of all the Con for its DataD, is there an easy way to go about doing that?
2015-09-12 16:59:29	 *	hackagebot cuda 0.6.7.0 - FFI binding to the CUDA interface for programming NVIDIA GPUs  https://hackage.haskell.org/package/cuda-0.6.7.0 (TrevorMcDonell)
2015-09-12 16:59:52	<--	leonardoajim (~leonardoa@186.6.230.130) has quit (Client Quit)
2015-09-12 16:59:52	<--	marr (~ccc@159-205-239-31.adsl.inetia.pl) has quit
2015-09-12 17:00:01	-->	Cale (~Cale@CPEc8d3a35c2cdd-CM0c473de9d680.cpe.net.cable.rogers.com) has joined #haskell
2015-09-12 17:00:15	<--	quchen (~quchen@ipb21bf8fb.dynamic.kabel-deutschland.de) has quit (Ping timeout: 256 seconds)
2015-09-12 17:00:35	-->	trvoldemort (~xzhu@128.171.232.10) has joined #haskell
2015-09-12 17:00:40	<--	trvoldemort (~xzhu@128.171.232.10) has quit (Client Quit)
2015-09-12 17:00:40	<--	Dzyan (~Rebelion@181-160-250-65.baf.movistar.cl) has quit (Ping timeout: 250 seconds)
2015-09-12 17:00:45	-->	zjlin (~zjlin@36-236-211-197.dynamic-ip.hinet.net) has joined #haskell
2015-09-12 17:00:58	<--	Auchen (~Auchen@cpc76630-john5-2-0-cust55.14-1.cable.virginm.net) has quit (Read error: Connection reset by peer)
2015-09-12 17:01:01	-->	Rurik (~topkek@117.214.119.67) has joined #haskell
2015-09-12 17:01:01	<--	Rurik (~topkek@117.214.119.67) has quit (Changing host)
2015-09-12 17:01:01	-->	Rurik (~topkek@unaffiliated/temur) has joined #haskell
2015-09-12 17:01:02	-->	trvoldemort (~xzhu@128.171.232.10) has joined #haskell
2015-09-12 17:01:03	<--	trvoldemort (~xzhu@128.171.232.10) has quit (Remote host closed the connection)
2015-09-12 17:01:04	<--	lethjakman (~lethjakma@71.56.221.51) has quit (Ping timeout: 272 seconds)
2015-09-12 17:01:06	-->	zcourts (~zcourts@cpc5-croy18-2-0-cust555.croy.cable.virginm.net) has joined #haskell
2015-09-12 17:01:09	--	zjlin is now known as Guest45389
2015-09-12 17:01:25	-->	urodna (~urodna@unaffiliated/urodna) has joined #haskell
2015-09-12 17:01:35	drewbert	Haskell could benefit from an introspection library, even if it only contained convenience functions.
2015-09-12 17:03:24	-->	f0p0x (6c27d17e@gateway/web/freenode/ip.108.39.209.126) has joined #haskell
2015-09-12 17:04:49	<--	adek_ (~adek@50.141.32.125) has quit (Quit: Textual IRC Client: www.textualapp.com)
2015-09-12 17:05:24	<--	ziocroc (~ziocroc3@151.74.105.109) has quit (Quit: ziocroc)
2015-09-12 17:05:25	-->	nolrai66 (~HWSoD@c-73-190-72-21.hsd1.or.comcast.net) has joined #haskell
2015-09-12 17:05:30	-->	adek (~adek@50.141.32.125) has joined #haskell
2015-09-12 17:05:32	<--	Guest45389 (~zjlin@36-236-211-197.dynamic-ip.hinet.net) has quit (Ping timeout: 246 seconds)
2015-09-12 17:06:31	<--	bjz (~bjz@14-201-215-168.tpgi.com.au) has quit (Max SendQ exceeded)
2015-09-12 17:07:08	<--	swgillespie (~textual@104.232.112.57) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-09-12 17:07:08	-->	bjz (~bjz@14-201-215-168.tpgi.com.au) has joined #haskell
2015-09-12 17:07:17	-->	junmin (~junmin@189-210-226-30.static.axtel.net) has joined #haskell
2015-09-12 17:07:26	<--	dportin (~dportin@pool-96-241-194-80.washdc.fios.verizon.net) has quit (Ping timeout: 240 seconds)
2015-09-12 17:07:50	<--	muesli4 (~sx@p54A02D51.dip0.t-ipconnect.de) has quit (Quit: Verlassend)
2015-09-12 17:08:01	<--	suorm (5c6e165d@gateway/web/cgi-irc/kiwiirc.com/ip.92.110.22.93) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2015-09-12 17:09:33	Gurkenglas	Yes please.
2015-09-12 17:11:09	-->	dportin (~dportin@pool-96-241-194-80.washdc.fios.verizon.net) has joined #haskell
2015-09-12 17:11:38	<--	viszu (~viszu@093105236033.dynamic-ra-3.vectranet.pl) has quit (Read error: Connection reset by peer)
2015-09-12 17:11:52	-->	burdges (~burdges@68-184-87-192.dhcp.smyr.ga.charter.com) has joined #haskell
2015-09-12 17:12:52	<--	yfeldblum (~yfeldblum@2620:10d:c090:180::d1f0) has quit (Ping timeout: 244 seconds)
2015-09-12 17:13:27	-->	Dzyan (~Rebelion@correo.intsercom.cl) has joined #haskell
2015-09-12 17:15:11	<--	jle` (~mstksg@unaffiliated/mstksg) has quit (Quit: WeeChat 1.2-dev)
2015-09-12 17:16:01	-->	zjlin_ (~zjlin@36-236-211-197.dynamic-ip.hinet.net) has joined #haskell
2015-09-12 17:16:25	--	zjlin_ is now known as Guest93092
2015-09-12 17:16:34	<--	Jeanne-Kamikaze (~Jeanne-Ka@151.Red-88-9-18.dynamicIP.rima-tde.net) has quit (Quit: Leaving)
2015-09-12 17:16:53	-->	swgillespie (~textual@104.232.112.57) has joined #haskell
2015-09-12 17:17:15	<--	lritter (~lritter@x5ce525c0.dyn.telefonica.de) has quit (Quit: Leaving)
2015-09-12 17:17:37	-->	hapislacker (~dagnachew@70.48.138.206) has joined #haskell
2015-09-12 17:17:52	-->	wasbee_ (~textual@23.252.50.206) has joined #haskell
2015-09-12 17:17:55	<--	tennix (~ztennix@unaffiliated/tennix) has quit (Ping timeout: 265 seconds)
2015-09-12 17:18:29	<--	geekosaur (allbery@dreamshell.ttuttle.net) has quit (Excess Flood)
2015-09-12 17:19:02	-->	centrinia (~centrinia@2602:306:bd0d:a690:d0fa:61d7:fbe6:e056) has joined #haskell
2015-09-12 17:20:26	<--	imPure (user@nat/google/x-oepgzwsgsnefglaz) has left #haskell ("ERC Version 5.3 (IRC client for Emacs)")
2015-09-12 17:20:29	<--	BartAdv (uid90451@gateway/web/irccloud.com/x-qplcdkzcjgpsvpmk) has quit (Quit: Connection closed for inactivity)
2015-09-12 17:20:57	-->	geekosaur (allbery@dreamshell.ttuttle.net) has joined #haskell
2015-09-12 17:21:01	--	paf31_away is now known as paf31
2015-09-12 17:21:15	<--	Guest93092 (~zjlin@36-236-211-197.dynamic-ip.hinet.net) has quit (Ping timeout: 255 seconds)
2015-09-12 17:25:01	<--	cchalmers (~textual@cpc1-shep13-2-0-cust104.8-3.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-09-12 17:25:16	Big_G	What is the best way to handle exceptions in web apps?
2015-09-12 17:25:34	<--	swgillespie (~textual@104.232.112.57) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-09-12 17:26:21	<--	cads (~M@104-9-5-196.lightspeed.tukrga.sbcglobal.net) has quit (Remote host closed the connection)
2015-09-12 17:26:37	<--	fuzzyhorns (~fuzzyhorn@73.38.57.191) has quit (Remote host closed the connection)
2015-09-12 17:26:49	-->	d125q (~d125q@89.205.13.30) has joined #haskell
2015-09-12 17:26:54	KaneTW	usually Either
2015-09-12 17:27:23	ReinH	Big_G: depends on what you're using to build your web app and what kind of exception
2015-09-12 17:27:24	Big_G	That's what I thought
2015-09-12 18:15:33	--	irc: disconnected from server
2015-09-12 18:15:51	-->	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:e4ea:45d0:491c:8204) has joined #haskell
2015-09-12 18:15:51	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-09-12 18:15:51	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:24
2015-09-12 18:15:51	--	Channel #haskell: 1460 nicks (1 op, 0 voices, 1459 normals)
2015-09-12 18:15:51	--	Notice(sendak.freenode.net): [freenode-info] channel trolls and no channel staff around to help? please check with freenode support: http://freenode.net/faq.shtml#gettinghelp
2015-09-12 18:15:51	--	URL for #haskell: http://www.haskell.org/
2015-09-12 18:15:52	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-09-12 18:15:54	edwardk	So, yes, I think the rename was unfortunate. It served consistency at the cost of user experience and discoverability
2015-09-12 18:16:00	-->	Alpha64 (~Alpha64@unaffiliated/alpha64) has joined #haskell
2015-09-12 18:16:22	<--	frerich (~frerich@kde/raabe) has quit (Ping timeout: 260 seconds)
2015-09-12 18:16:25	<--	zcourts (~zcourts@cpc5-croy18-2-0-cust555.croy.cable.virginm.net) has quit (Quit: zcourts)
2015-09-12 18:16:46	-->	stef_204 (~stef204@unaffiliated/stef-204/x-384198) has joined #haskell
2015-09-12 18:17:31	-->	yfeldblum (~yfeldblum@2620:10d:c090:180::e15c) has joined #haskell
2015-09-12 18:17:44	KaneTW	what's the difference between EitherT and ExceptT?
2015-09-12 18:17:48	<--	pavonia (~user@dslb-178-012-131-203.178.012.pools.vodafone-ip.de) has quit (Read error: Connection reset by peer)
2015-09-12 18:17:51	int-index	KaneTW: their name
2015-09-12 18:18:22	-->	isocliff (~isocliff@dhcp-5-103-179-101.seas-nve.net) has joined #haskell
2015-09-12 18:18:25	<--	dfranke (dfranke@pathfinder.dfranke.us) has quit (Quit: Lost terminal)
2015-09-12 18:19:26	<--	Sixmsj (~Sixmsj@c-98-210-16-60.hsd1.ca.comcast.net) has quit (Quit: Sixmsj)
2015-09-12 18:19:48	<--	stef204 (~stef204@unaffiliated/stef-204/x-384198) has quit (Ping timeout: 265 seconds)
2015-09-12 18:19:51	int-index	edwardk: thanks for the answers
2015-09-12 18:20:17	-->	razvanc87 (~razvanc87@79.97.80.96) has joined #haskell
2015-09-12 18:20:31	<--	micmus (~micmus@aani34.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 244 seconds)
2015-09-12 18:20:43	<--	nkhodyunya (~Adium@dnm.227.127.124.92.dsl.krasnet.ru) has quit (Quit: Leaving.)
2015-09-12 18:20:44	<--	Laserbear (~Laserbear@c-73-223-160-142.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2015-09-12 18:21:24	-->	Laserbear (~Laserbear@c-73-223-160-142.hsd1.ca.comcast.net) has joined #haskell
2015-09-12 18:22:14	-->	ril (~ril@c-67-188-43-174.hsd1.ca.comcast.net) has joined #haskell
2015-09-12 18:22:26	<--	isocliff (~isocliff@dhcp-5-103-179-101.seas-nve.net) has quit (Ping timeout: 240 seconds)
2015-09-12 18:22:32	Big_G	ReinH, Sorry about leaving. Back now
2015-09-12 18:23:12	<--	tridactyla (~mforney@exherbo/developer/tridactyla) has quit (Quit: leaving)
2015-09-12 18:23:16	ReinH	Big_G: np
2015-09-12 18:23:42	Big_G	beyond Heroku, any ideas? Also, why do you prefer Ruby to Java?
2015-09-12 18:23:55	-->	gkap (~gkap@197.157.224.171) has joined #haskell
2015-09-12 18:26:22	--	irc: disconnected from server
2015-09-12 18:26:49	-->	RouxTheD1 (~RouxTheDa@50-1-125-104.dsl.dynamic.fusionbroadband.com) has joined #haskell
2015-09-12 18:26:49	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-09-12 18:26:49	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:26
2015-09-12 18:26:49	--	Channel #haskell: 1458 nicks (1 op, 0 voices, 1457 normals)
2015-09-12 18:26:49	--	URL for #haskell: http://www.haskell.org/
2015-09-12 18:26:49	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-09-12 18:27:02	KaneTW	Object x = null; x.equals("foo");
2015-09-12 18:27:04	KaneTW	poof
2015-09-12 18:27:17	-->	mcbonz_ (~mcbonz@x2f0659d.dyn.telefonica.de) has joined #haskell
2015-09-12 18:27:21	-->	qubozik (~qubozik@pool-68-238-241-108.phlapa.fios.verizon.net) has joined #haskell
2015-09-12 18:27:23	-->	fuzzyhorns (~fuzzyhorn@73.38.57.191) has joined #haskell
2015-09-12 18:28:06	<--	gkap (~gkap@197.157.224.171) has quit (Ping timeout: 240 seconds)
2015-09-12 18:28:19	<--	RouxTheDay (~RouxTheDa@2601:645:8101:9a39:e4ea:45d0:491c:8204) has quit (Ping timeout: 244 seconds)
2015-09-12 18:28:34	ReinH	Java's type safety is compromised. At least Ruby doesn't pretend to type safety.
2015-09-12 18:28:39	edwardk	Big_G: FooBarBaz<AbstractSingletonProxyFactoryBean,T> myfooBarBazAbstractProxyFactoryBean = new FooBarBaz<AbstractSingletonProxyFactoryBean,T>() -- involves a fair bit of useless repetition.
2015-09-12 18:28:42	<--	jinblack (~jinblack@ip184-187-174-107.sb.sd.cox.net) has quit (Ping timeout: 252 seconds)
2015-09-12 18:29:13	edwardk	ReinH: the one that gets me is array covariance
2015-09-12 18:29:19	-->	cerulean__ (~cerulean_@67-148-50-158.dia.static.qwest.net) has joined #haskell
2015-09-12 18:29:27	KaneTW	python, ruby, etc provide you with flexibility by having dynamic types and crash-safety by being strongly typed (ie you can't do "foo" == 0)
2015-09-12 18:29:50	<--	filmackay (~filmackay@cpc42-slam6-2-0-cust176.2-4.cable.virginm.net) has quit (Ping timeout: 264 seconds)
2015-09-12 18:29:52	ReinH	edwardk: array covariance?
2015-09-12 18:29:55	exio4	array covariance is so cool, I mean, it's doing something so wrong in so little that it is fun
2015-09-12 18:30:02	-->	rcyr (~rcyr@modemcable130.137-163-184.mc.videotron.ca) has joined #haskell
2015-09-12 18:30:04	<--	SparkySquirrel (~hyper_ecx@107-219-209-120.lightspeed.snantx.sbcglobal.net) has quit (Ping timeout: 246 seconds)
2015-09-12 18:30:16	KaneTW	http://c2.com/cgi/wiki?JavaArraysBreakTypeSafety
2015-09-12 18:30:30	<--	gentleben (~gentleben@c-98-207-43-107.hsd1.ca.comcast.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-09-12 18:30:30	<--	mcbonz (~mcbonz@unaffiliated/mcbonz) has quit (Ping timeout: 250 seconds)
2015-09-12 18:30:45	exio4	ReinH: if X is a subtype of Y, X[] is a subtype of Y[], if they were immutable, it would be fine
2015-09-12 18:30:58	<--	stef_204 (~stef204@unaffiliated/stef-204/x-384198) has quit (Quit: WeeChat 1.3)
2015-09-12 18:31:07	ReinH	ahahaha
2015-09-12 18:31:28	edwardk	I have an array of dogs, let me give it to you as an array of animals. assuming animal is a superclass of dog. now you go to put an animal in it because you were told its a damn array of animals and get a runtime error.
2015-09-12 18:31:42	ReinH	nice
2015-09-12 18:31:48	<--	qubozik (~qubozik@pool-68-238-241-108.phlapa.fios.verizon.net) has quit (Ping timeout: 250 seconds)
2015-09-12 18:31:52	edwardk	it predates generics in java, so its a historical wart
2015-09-12 18:32:04	ReinH	Have class loaders been fixed yet?
2015-09-12 18:32:10	edwardk	permgenspace?
2015-09-12 18:32:11	<--	ryantrinkle (~ryan@cpe-98-14-136-95.nyc.res.rr.com) has left #haskell
2015-09-12 18:32:13	edwardk	that fixed in 8
2015-09-12 18:32:22	KaneTW	never mind that generics in java are pretty terrible too
2015-09-12 18:32:49	-->	tennix (~ztennix@unaffiliated/tennix) has joined #haskell
2015-09-12 18:32:50	ReinH	only took 20 years, I guess
2015-09-12 18:32:56	ReinH	KaneTW: despite being added by Wadler...
2015-09-12 18:33:15	exio4	they have partial type erasure there, so it's not a nice feature when you have reflection
2015-09-12 18:33:25	edwardk	ok, i'm going to drop out of the 'lets bitch about java' session and go try to figure out how to get a usable C++11 project build system =(
2015-09-12 18:33:27	-->	nocturne777 (~nocturne7@c-76-103-151-171.hsd1.ca.comcast.net) has joined #haskell
2015-09-12 18:33:28	ReinH	hah
2015-09-12 18:33:46	-->	codafi (~textual@Roberts-MBP.wv.cc.cmu.edu) has joined #haskell
2015-09-12 18:34:31	KaneTW	i usually go for cmake but it has it's own issues
2015-09-12 18:34:38	edwardk	any suggestions? i need to build c++11 code. i can use autoconf, because its what i know, but my tolerance for autoconf has waned over the years
2015-09-12 18:34:39	KaneTW	its*
2015-09-12 18:34:43	ReinH	We tend to frown on bitching about other languages. I am however tempted to make a formal request for a java exception.
2015-09-12 18:34:55	ReinH	That was a java exception safety pun. Hilarious.
2015-09-12 18:35:13	exio4	ReinH: you are on fire today, eh? 
2015-09-12 18:35:14	KaneTW	edwardk: how big is the project
2015-09-12 18:35:18	ReinH	exio4: :D
2015-09-12 18:35:26	edwardk	ReinH: you forgot to annotate your comment with 'throws (Exception)'
2015-09-12 18:35:36	ReinH	edwardk: or did I?
2015-09-12 18:35:44	KaneTW	derives RuntimeException
2015-09-12 18:36:15	edwardk	KaneTW: right now? its about 2-3 source files, but it'll rather quickly metastasize as soon as i can figure out how to get the gc designed right and have something to bolt the rest of the runtime system onto
2015-09-12 18:36:49	KaneTW	if you're starting from scratch i'd just use cmake. it's pretty painless and keeps your buildtree clean (mkdir build; cd build; cmake ..; make)
2015-09-12 18:36:54	<--	cjlarose (~textual@99-10-121-120.lightspeed.sndgca.sbcglobal.net) has quit (Ping timeout: 250 seconds)
2015-09-12 18:36:56	edwardk	on the plus side, i'm willing to cut off at the knees anything before c++11
2015-09-12 18:37:45	edwardk	another complication is i may wind up wanting to build this through cabal, so the autoconf hooks may be inevitable
2015-09-12 18:38:07	-->	cjlarose (~textual@99-10-121-120.lightspeed.sndgca.sbcglobal.net) has joined #haskell
2015-09-12 18:38:28	edwardk	in fact that is probably inevitable =(
2015-09-12 18:38:35	-->	adek_ (~adek@50.141.32.125) has joined #haskell
2015-09-12 18:38:56	<--	no_cluez (no_cluez@gateway/vpn/mullvad/x-chprndmixorlcfze) has quit (Remote host closed the connection)
2015-09-12 18:39:01	-->	Firli (~leo@114.79.29.101) has joined #haskell
2015-09-12 18:39:03	-->	meetingology1 (meetingolo@gateway/vpn/mullvad/x-xnxcvmnipbsxyfop) has joined #haskell
2015-09-12 18:39:11	-->	swgillespie (~textual@104.232.112.57) has joined #haskell
2015-09-12 18:39:52	ReinH	edwardk: what are you doing in C++11?
2015-09-12 18:39:57	<--	swgillespie (~textual@104.232.112.57) has left #haskell
2015-09-12 18:40:06	<--	mkster_ (~mkster@i577B79DF.versanet.de) has quit (Read error: Connection reset by peer)
2015-09-12 18:40:06	edwardk	playing with a runtime system for turbo haskell
2015-09-12 18:40:11	ReinH	edwardk: btw use shake trollolol
2015-09-12 18:40:22	edwardk	figured out an interesting heap representation for haskell
2015-09-12 18:40:26	edwardk	wanted to actually code it up
2015-09-12 18:40:30	ReinH	Does that rhyme with turbo pascall? Please say yes.
2015-09-12 18:40:35	edwardk	it does
2015-09-12 18:40:37	ReinH	*pascal
2015-09-12 18:40:39	ReinH	Excellent.
2015-09-12 18:40:49	<--	adek (~adek@50.141.32.125) has quit (Ping timeout: 252 seconds)
2015-09-12 18:40:58	-->	hellertime (~hellertim@pool-173-48-154-80.bstnma.fios.verizon.net) has joined #haskell
2015-09-12 18:41:01	edwardk	for years after i found haskell every time i'd say "haskell" people would assume i meant "pascal" ;)
2015-09-12 18:41:09	<--	xylen (~codywelsh@c-73-189-204-160.hsd1.ca.comcast.net) has quit (Ping timeout: 272 seconds)
2015-09-12 18:41:10	int-index	edwardk: do you have any objections against Rust? (compared to C++11). It seems to be a generally better language.
2015-09-12 18:41:15	ReinH	hah
2015-09-12 18:41:20	edwardk	int-index: yes
2015-09-12 18:41:36	ReinH	edwardk: go on
2015-09-12 18:41:38	edwardk	the c++11 bits are being used basically as portable assembly language mostly
2015-09-12 18:41:59	edwardk	anyways turbo pascal was a large part of why i was able to move from CP/M to DOS back in the day
2015-09-12 18:42:13	edwardk	the compiler has always had a special place in my heart
2015-09-12 18:42:22	KaneTW	https://github.com/Microsoft/bond/
2015-09-12 18:42:28	KaneTW	appears to use both cmake and cabal
2015-09-12 18:42:30	ReinH	James bond?
2015-09-12 18:42:47	<--	ril (~ril@c-67-188-43-174.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2015-09-12 18:42:48	ReinH	ctrl-f "James"... nothing. Shame.
2015-09-12 18:42:55	edwardk	KaneTW: and how many people do you know who have installed it? =)
2015-09-12 18:43:03	int-index	edwardk: and in what language are you going to write your garbage collector?
2015-09-12 18:43:04	KaneTW	no idea, i'm just googling :v
2015-09-12 18:43:15	ReinH	edwardk: apparently lots of people at microsoft?
2015-09-12 18:43:23	edwardk	int-index in a mixture of c++ and a very modified form of GRIN
2015-09-12 18:43:31	edwardk	int-index the gc is the only thing i _have_ so far
2015-09-12 18:43:34	ReinH	seems to not be a build system though?
2015-09-12 18:43:46	KaneTW	ReinH: not a build system, but as an example of combining cabal and cmake
2015-09-12 18:43:50	ReinH	ahhh
2015-09-12 18:44:19	edwardk	int-index: the gc gets pretty tied to the execution model here, because it can do O(1) work during enqueue and dequeuing towards graph reduction in my model
2015-09-12 18:44:23	ReinH	oh, it's a thrift alternative, righto
2015-09-12 18:44:33	ReinH	but I guess with more "framework"
2015-09-12 18:44:47	<--	n66|Clownpiece (~HWSoD@c-73-190-72-21.hsd1.or.comcast.net) has left #haskell ("Leaving")
2015-09-12 18:44:50	ReinH	edwardk: doesn't rust give you good control over that?
2015-09-12 18:44:53	edwardk	int-index: and it being mostly mark-compact without any headers on objects by using VERY heavily tagged objects means that anything rust does will basically get in my way
2015-09-12 18:44:59	ReinH	you can turn off the runtime
2015-09-12 18:45:20	KaneTW	it does feel a bit backwards, and having cabal call cmake seems better
2015-09-12 18:45:30	ReinH	ah
2015-09-12 18:45:46	<--	nect (~NB@c-24-0-157-120.hsd1.pa.comcast.net) has quit (Quit: Leaving)
2015-09-12 18:46:13	KaneTW	in the end it probably depends on how much you dislike autoconf
2015-09-12 18:46:55	int-index	edwardk: as ReinH mentioned you can disable the runtime, but you get a borrow checker, which is nice
2015-09-12 18:47:03	edwardk	    std::uintptr_t uniqueness : 1, closure : 1, reserved : 1, offset : 9, segment : 9,region : 19, space : 4, nmt : 1, tag : 19;
2015-09-12 18:47:14	<--	cchalmers (~textual@cpc1-shep13-2-0-cust104.8-3.cable.virginm.net) has quit (Quit: My Mac has gone to sleep. ZZZzzz…)
2015-09-12 18:47:21	edwardk	int-index: my semantics for how i deal with pointers are rather radically different than rust's model.
2015-09-12 18:47:30	edwardk	^- that is a pointer to me
2015-09-12 18:48:10	ReinH	edwardk: so this isn't a general criticism of rust, just that it isn't fit for this use?
2015-09-12 18:48:18	edwardk	its just totally irrelevant to this use, eys
2015-09-12 18:48:20	edwardk	yes
2015-09-12 18:48:28	ReinH	righto
2015-09-12 18:48:36	edwardk	rust is interesting and if i had a problem that suited it i might some day consider using it for something
2015-09-12 18:48:38	edwardk	this isn't that day
2015-09-12 18:48:47	<--	Wuzzy (~Wuzzy@p549F9BE7.dip0.t-ipconnect.de) has quit (Ping timeout: 246 seconds)
2015-09-12 18:48:59	<--	neoncontrails (~neoncontr@2602:304:cc4e:9410:c1d8:797e:642:6db8) has quit (Ping timeout: 244 seconds)
2015-09-12 18:49:26	bitemyapp	edwardk: that's Turbo Haskell?
2015-09-12 18:49:34	bitemyapp	edwardk: what sort of thing would Rust suit, do you think?
2015-09-12 18:49:38	<--	Luke (~luke@unaffiliated/luke) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2015-09-12 18:49:40	-->	AndChat107604 (~AndChat10@117.226.201.252) has joined #haskell
2015-09-12 18:49:50	ReinH	I suppose lots of things that didn't involve inventing your own pointers ;)
2015-09-12 18:49:57	<--	AndChat107604 (~AndChat10@117.226.201.252) has left #haskell
2015-09-12 18:50:00	<--	Herogx_ (~Herogx@109.77.233.153) has quit (Ping timeout: 264 seconds)
2015-09-12 18:50:29	<--	cerulean__ (~cerulean_@67-148-50-158.dia.static.qwest.net) has quit
2015-09-12 18:50:31	-->	BartAdv (uid90451@gateway/web/irccloud.com/x-omclxpqeqfcupamd) has joined #haskell
2015-09-12 18:50:34	-->	xylen (~codywelsh@c-73-189-204-160.hsd1.ca.comcast.net) has joined #haskell
2015-09-12 18:50:49	edwardk	anyways the pointer type above has to track a not-marked through flag for a concurrent collector, moves the entire tag of the object into the tag bits at the top, tracks the garbage collection space in a way lets me manage a C4 style LVB read barrier, needs to know uniqueness of closures so it can avoid allocating the indirection, then contracting the
2015-09-12 18:50:50	edwardk	reference to a closure actually mandates allocating the 8 byte indirection node, also tagged, but i need a heavier blackholing scheme for the now reduced set of spaces where the indirection is used
2015-09-12 18:51:25	-->	dfranke (dfranke@pathfinder.dfranke.us) has joined #haskell
2015-09-12 18:51:27	edwardk	evaluating a GRIN-like model means I can use this rather huge space of tags
2015-09-12 18:51:40	wedify	i think i've finally found a way to handle head/tail; list fallback fun l = if not $ null l then fun l else fallback
2015-09-12 18:52:43	edwardk	but now case analysis has the benefit that its looking directly at a tag in the pointer it has, rather than following to the memory in question, so you get to 'steal a prefetch' worth of time in every case analysis, and with a tracing jit or whole program optimizer for GRIN in the style of JHC you can specialize to the types of closures that actually occur
2015-09-12 18:52:53	-->	dmj` (~user@c-50-158-126-110.hsd1.il.comcast.net) has joined #haskell
2015-09-12 18:53:00	edwardk	getting away from the megamorphic indirect jumps in the spineless tagless g-machine
2015-09-12 18:53:25	edwardk	and enabling concurrent collection and compaction, at the expense of using a read-barrier
2015-09-12 18:53:34	-->	gentleben (~gentleben@c-98-207-43-107.hsd1.ca.comcast.net) has joined #haskell
2015-09-12 18:53:43	bitemyapp	edwardk: whoa concurrent collection and compaction?
2015-09-12 18:53:56	edwardk	but to avoid tagging objects on the heap you wind up having to basically write the gc half in GRIN itself so it can do the mark queuing and compaction
2015-09-12 18:54:33	-->	Wuzzy (~Wuzzy@p549F97BD.dip0.t-ipconnect.de) has joined #haskell
2015-09-12 18:54:34	edwardk	bitemyapp: gc looks a lot like C4/compressor, but the first generation or two may be local to the haskell execution context
2015-09-12 18:54:46	-->	refried_ (~textual@71.46.57.80) has joined #haskell
2015-09-12 18:55:06	<--	refried_ (~textual@71.46.57.80) has quit (Client Quit)
2015-09-12 18:55:07	edwardk	in which case they'd be able to be "stop the local world" or not, but my goal is to avoid any global world stops
2015-09-12 18:55:44	edwardk	using a c4/compressor scheme also enables immediate reclamation of a page after eviction in the compaction phase, which cuts about half the heap overhead
2015-09-12 18:56:28	int-index	wedify: now use explicit pattern matching instead of calling `null` and you'll discover that it's just a list deconstructor
2015-09-12 18:56:34	edwardk	basically as i'm looking at ghc i'm seeing the current collector as a bigger and bigger bottleneck and the amount of space we're wasting in the pointers as almost criminal from a latency standpoint
2015-09-12 18:56:36	<--	Noldorin (~noldorin@unaffiliated/noldorin) has quit (Quit: –)
2015-09-12 18:56:44	edwardk	so i'm curious to see what we could do if something worked differently
2015-09-12 18:56:56	edwardk	bitemyapp: right now its mostly a thought experiment
2015-09-12 18:57:05	-->	lethjakman (~lethjakma@71.56.221.51) has joined #haskell
2015-09-12 18:57:41	edwardk	by tracking "local uniqueness" in the pointers themselves i can do more in place trickery and elide more barriers
2015-09-12 18:57:46	-->	sleblanc (~sebleblan@unaffiliated/sebleblanc) has joined #haskell
2015-09-12 18:58:24	exio4	edwardk: good luck with that, sounds pretty cool :P 
2015-09-12 18:58:31	edwardk	i also spent some time playing around with what i could get away with if i just assumed availability of hardware transactional memory support, figuring on a long enough timeline it'll be there.
2015-09-12 18:58:41	edwardk	but i eventually walked back the need for that
2015-09-12 18:58:54	<--	zygentoma (~kvirc@kel30.kel.studentenwerk-goettingen.de) has quit (Quit: KVIrc 4.2.0 Equilibrium http://www.kvirc.net/)
2015-09-12 19:29:06	--	irc: disconnected from server
2015-09-12 19:29:29	-->	RouxTheD1 (~RouxTheDa@2601:645:8101:9a39:45ef:aec2:4c1f:6919) has joined #haskell
2015-09-12 19:29:29	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-09-12 19:29:29	--	Topic set by johnw (~johnw@c-98-214-120-98.hsd1.il.comcast.net) on Tue, 05 May 2015 17:23:26
2015-09-12 19:29:29	--	Channel #haskell: 1450 nicks (1 op, 0 voices, 1449 normals)
2015-09-12 19:29:29	--	URL for #haskell: http://www.haskell.org/
2015-09-12 19:29:29	--	Channel created on Sat, 25 Nov 2006 22:42:48
2015-09-12 19:30:34	greymalkin	Anyone have any pro/cons to JuicyPixels?
2015-09-12 19:30:53	-->	cjlarose (~textual@99-10-121-120.lightspeed.sndgca.sbcglobal.net) has joined #haskell
2015-09-12 19:31:23	pavonia	Is there an equivalent to liftIO in MonadLib?
2015-09-12 19:31:37	bitemyapp	edwardk: cool :)
2015-09-12 19:31:42	glguy	pavonia: inBase
2015-09-12 19:32:05	pavonia	Thanks!
2015-09-12 19:34:37	-->	mizu_no_oto (~textual@c-73-219-2-228.hsd1.ma.comcast.net) has joined #haskell
2015-09-12 19:36:00	-->	crobbins (~crobbins@2602:30a:c08e:19e0:3c62:e797:6e22:6131) has joined #haskell
2015-09-12 19:36:50	-->	OrangeShark (~OrangeSha@2602:306:c5c9:a3e0:8890:a303:c09:a8ba) has joined #haskell
2015-09-12 19:37:26	<--	cjlarose (~textual@99-10-121-120.lightspeed.sndgca.sbcglobal.net) has quit (Ping timeout: 240 seconds)
2015-09-12 19:37:58	-->	darkbolt (~darkbolt@23.252.55.57) has joined #haskell
2015-10-03 09:20:45	-->	RouxTheD1 (~RouxTheDa@pool-71-122-115-148.tampfl.fios.verizon.net) has joined #haskell
2015-10-03 09:20:45	--	Topic for #haskell is "http://www.haskell.org/ | Paste code/errors: http://lpaste.net/new/haskell | Logs: http://tunes.org/~nef/logs/haskell/?C=M;O=D http://ircbrowse.net/day/haskell/today?mode=recent | http://reddit.com/r/haskell | Administrative issues: #haskell-ops | Hackage status? http://status.haskell.org | http://downloads.haskell.org"
2015-10-03 09:20:45	--	Topic set by johnw on Tue, 05 May 2015 20:23:25
2015-10-03 09:20:45	--	Channel #haskell: 1469 nicks (1 op, 0 voices, 1468 normals)
2015-10-03 09:20:45	--	URL for #haskell: http://www.haskell.org/
2015-10-03 09:20:45	--	Channel created on Sun, 26 Nov 2006 01:42:48
2015-10-03 09:21:09	-->	adam_hardkey_shi (~hardkey@eth-east-parth2-46-193-64-172.wb.wifirst.net) has joined #haskell
